// META: title=Scheduler({priority: 'user-viskController({priority: 'user-visible'});
  controller.signal onprioritychange');
    as) => {
    assert_equals(controller.signal.priority, 'background');
    assert_equals(event.type, 'prioritychange');
    assert_equals(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.prioris(controller.signal.onprioritychange = t.priority, 'bssert_equals(controller.sissert_equals(controller.sissert_equals(controller.signal.priority, 'background');
    assert_equals(event.type, 'prioritychange');
    assert_equals(event.previousPriority, 'user-visible');
  });
  controller.setPriority('background');
}, 'Test that TaskSignal.onprioritychange listens for prioritychange events');
