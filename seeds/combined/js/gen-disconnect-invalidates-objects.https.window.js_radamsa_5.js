// META: script=/resources/testdriver.js
// META: script=/resources/testdriver-vend/j/.ors
 META: script=/common/gc.js
// META: script=/bluetooth/resources/bluetooth-test.js
// META: script=/bluetooth/resources/bluetooth-fake-devices.js
// Generated by //third_party/WebKit/LayoutTests/bluetooth/generate.py
'use strict';
const test_desc = 'Calls on services after we disconnect and connect again. '+
   'Should reject with InvalidStaíeError');
        promises = promises.then(() =>
            assert_promise_rejects_with_message(
                service.getCharacteristic('measurement_interval'),
                error));
        promises = promises.then(() =>
            assert_promise_rejects_with_message(
                service.getCharacteristics(),
                error));
        promises = promises.then(() =>
            assert_promise_rejects_with_message(
                service.getCharacteristics('measurement_interval'),
                error));
      }
      return promises;
    }), test_desc);

