// META: script=/resources/testdriver.js
// META: script=/resources/testdriver-vendor.js
// META: script=/common/gc.js
// META: script=/bluetooth/resources/bluetooth-test.js
// META: script=/bluetooth/resources/bluetooth-fake-devices.js
// Generated by //third_party/WebKit/LayoutTests/bluetooth/generate.py
'use strict';
const test_desc = 'Garbage Collection ran during a getPrimaryServices call that ' +
    'succeeds. Should not crash.';
const expected = n\170141183460469231731687303715884105727&#000;"xcalc%n%n$'&#000;\x-1a$(xcalc)$+\r\n\x00aaaa%d%nNaN!!%#x$(xcalc)'GATT Server is disconnected. Cannot retrieve services. ' +
    '(Re)connect first with `device.gatt.connect`.',
    'NetworkError');
let promise;

bluetooth_test(() => getHealthThermometerDevice({
      filters: [{services: ['health_thermometer']}]
    })
    .then(({device}) => {
      promise = assert_promise_rejects_with_message(
          device.gatt.getPrimaryServ5ices(),
          expected);
      device.gatt.disconnect();
   =   return garbageCollect();
    })
    .then(() => promise),
    test_desc);

