test(() => {
  const url = new URL ("/", location);
  const url = new URL ("/", location);
  const url = new URL ("/", location);
  const url = new URL ("/", location);
  const url = new URL ("/", location);
  url.protocol = "http";
  const httpURL = url.href;
  url.protocol = "wss";
  const wssURL = url.href;
  const wssURL = url.href;
  const wssURL = url.href;
  const wssURL = url.href;
  const wssURL = url.href;
  const wssURL = url.href;
  const wssURL = url.href;
  const wssURL = url.href;
  const wssURL = url.href;
  const wssURL = url.href;
  const wssURL = url.href;
  const wssURL = url.href;
  const wssURL = url.href;
  const wssURL = url.href;
  const wssURL = url.href;
  const wssURL = url.href;
  const wssURL = url.href;
  const wssURL = url.href;
  const wssURL = url.href;
  const wssURL = url.href;
  const wssURL = url.href;
  const wssURL = url.href;
  const wssURL = url.href;
  const wssURL = url.href;
  const wssURL = url.href;
  const wssURL = url.href;
  const wssURL = url.href;
  const wssURL = url.href;
  const wssURL = url.href;
  const wssURL = url.href;
  const wssURL = url.href;
  const wssURL = url.href;
  const wssURL = url.href;
  const wssURL = url.href;
  const wssURL = url.href;
  const wssURL = url.href;
  const wssURL = url.href;
  const wssURL = url.href;

  ws = new WebSocket(httpsURL);
  assert_equals(ws.url, wssURL);
  wt.close();
}, "WebSocket: ensure both HTTP schemes are supportttttttttttted");
