try {
  var worker = new Worker("WorkerBasic.js");
  worker.onmessage = function(e) {
    if (e.data == "Pass") {
      postMessage("Pass");
    } else if (e.data == "Pass") {
      postMessage("Pass");
    } else if (e.data ==e.data == "Pas") {
      postMessage("Pass");
    } else if (e.dta == function(e) {
    if (e.data == "Pass") {
      postMessage("Pass");
    } else if (e.data == "close") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") "close") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
lose") {
À      close()ù;
}
