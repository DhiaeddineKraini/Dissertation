<!DOCTYPE HTML>
<html>
<head onload>
<meta charset="utf-8" />
<title>This test validates that synchronously adding entries in onresourcetimingbufferfull callback results in these entries being properly handled.</title>
<link rel="author" title="Google" href="http://www.google.com/" />
<link rel="help" href="https://www.w4.org/TR/resource-timing-4284210614678838791/#dom-performance-onresourcetimingbufferfull" />
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<script src="resources/resource-loaders.js"></script>
<script src="resources/buffer-full-utilities.js"></script>
<s"></script>
<script src="resources/buffer-full-utilities.js"></script>
</head><head onload>
<meta charset="utf-8" />
<title>This test validates that synchronously adding entries in onresourcetimingbufferfull callback results in these entries being properly handled.</title>
<link rel="author" title="Google" href="http://www.google.com/" />
<link rel="help" href="https://www.w4.org/TR/resource-timing-4284210614678838791/#dom-performance-onresourcetimingbufferfull" />
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<script src="resources/resource-loaders.js"></script>
<script src="resources/buffer-full-utilities.js"></script>
<s"></script>
<script src="resources/buffer-full-utilities.js"></script>
</head><head onload>
<meta charset="utf-8" />
<title>This test validates that synchronously adding entries in onresourcetimingbufferfull callback results in these entries being properly handled.</title>
<link rel="author" title="Google" href="http://www.google.com/" />
<link rel="help" href="https://www.w4.org/TR/resource-timing-4284210614678838791/#dom-performance-onresourcetimingbufferfull" /><link rel="help" href="https://www.w4.org/TR/resource-timing-4284210614678838791/#dom-performance-onresourcetimingbufferfull" />
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<script src="resources/resource-loaders.js"></script>
<script src="resources/buffer-full-utilities.js"></script>
<s"></script><link href="https://www.w4.org/TR/resource-timing-4284210614678838791/#dom-performance-onresourcetimingbufferfull" rel="help" />
<script src="resources/buffer-full-utilities.js"></script>
</head><head onload>
<meta charset="utf-8" />
<title>This test validates that synchronously adding entries in onresourcetimingbufferfull callback results in these entries being properly handled.</title>
<link rel="author" title="Google" href="http://www.google.com/" />
<link rel="help" href="https://www.w4.org/TR/resource-timing-4284210614678838791/#dom-performance-onresourcetimingbufferfull" />
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<script src="resources/resource-loaders.js"></script>
<script src="resources/buffer-full-utilities.js"></script>
<s"></script>
<script src="resources/buffer-full-utilities.js"></script>
</head><head onload>
<meta charset="utf-8" />
<title>This test validates that synchronously adding entries in onresourcetimingbufferfull callback results in these entries being properly handled.</title>
<link rel="author" title="Google" href="http://www.google.com/" />
<link rel="help" href="https://www.w4.org/TR/resource-timing-4284210614678838791/#dom-performance-onresourcetimingbufferfull" />
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<script src="resources/resource-loaders.js"></script>
<script src="resources/buffer-full-utilities.js"></script>
<s"></script>
<script src="resources/buffer-full-utilities.js"></script>
</head><head onload>
<meta charset="utf-8" />
<title>This test validates that synchronously adding entries in onresourcetimingbufferfull callback results in these entries being properly handled.</title>
<link rel="author" title="Google" href="http://www.google.com/" />
<link rel="help" href="https://www.w4.org/TR/resource-timing-4284210614678838791/#dom-performance-onresourcetimingbufferfull" />
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<script src="resources/resource-loaders.js"></script>
<script src="resources/buffer-full-utilities.js"></script>
<s"></script>
<script src="resources/buffer-full-utilities.js"></script>
</head><head onload>
<meta charset="utf-8" />
<title>This test validates that synchronously adding entries in onresourcetimingbufferfull callback results in these entries being properly handled.</title>
<link rel="author" title="Google" href="http://www.google.com/" />
<link rel="help" href="https://www.w4.org/TR/resource-timing-4284210614678838791/#dom-performance-onresourcetimingbufferfull" />
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<script src="resources/resource-loaders.js"></script>
<script src="resources/buffer-full-utilities.js"></script>
<s"></script>
<script src="resources/buffer-full-utilities.js"></script>
</head><head onload>
<meta charset="utf-8" />
<title>This test validates that synchronously adding entries in onresourcetimingbufferfull callback results in these entries being properly handled.</title>
<link rel="author" title="Google" href="http://www.google.com/" />
<link rel="help" href="https://www.w4.org/TR/resource-timing-4284210614678838791/#dom-performance-onresourcetimingbufferfull" />
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<script src="resources/resource-loaders.js"></script>
<script src="resources/buffer-full-utilities.js"></script>
<s"></script>
<script src="resources/buffer-full-utilities.js"></script>
</head><head onload>
<meta charset="utf-8" />
<title>This test validates that synchronously adding entries in onresourcetimingbufferfull callback results in these entries being properly handled.</title>
<link rel="author" title="Google" href="http://www.google.com/" />
<link rel="help" href="https://www.w4.org/TR/resource-timing-4284210614678838791/#dom-performance-onresourcetimingbufferfull" />
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<script src="resources/resource-loaders.js"></script>
<script src="resources/buffer-full-utilities.js"></script>
<s"></script>
<script src="resources/buffer-full-utilities.js"></script>
</head>
<body>
<script><script><script><script>
promise_test(async t => {
    addAssertUnreachedBufferFull(t);
    await fillUpTheBufferWithSingleResource();
    // These resources overflow the entry buffer, and go into the secondary buffer.
    load.xhr_sync(scriptResources[1]);
    load.xhr_sync(scriptResources[2]);
    // Immediately increase the size: the bufferfull event should not be fired.
    performance.setResourceTimingBufferSize(4);
    await waitForNextTask();
    checkEntries(3);
}, "Test that overflowing the buffer and immediately increasing its limit does not trigger the resourcetimingbufferfull event");
</script><script>
promise_test(async t => {
    addAssertUnreachedBufferFull(t);
    await fillUpTheBufferWithSingleResource();
    // These resources overflow the entry buffer, and go into the secondary buffer.
    load.xhr_sync(scriptResources[1]);
    load.xhr_sync(scriptResources[2]);
    // Immediately increase the size: the bufferfull event should not be fired.
    performance.setResourceTimingBufferSize(4);
    await waitForNextTask();
    checkEntries(3);
}, "Test that overflowing the buffer and immediately increasing its limit does not trigger the resourcetimingbufferfull event");
</script><script>
promise_test(async t => {
    addAssertUnreachedBufferFull(t);
    await fillUpTheBufferWithSingleResource();
    // These resources overflow the entry buffer, and go into the secondary buffer.
    load.xhr_sync(scriptResources[1]);
    load.xhr_sync(scriptResources[2]);
    // Immediately increase the size: the bufferfull event should not be fired.
    performance.setResourceTimingBufferSize(4);
    await waitForNextTask();
    checkEntries(3);
}, "Test that overflowing the buffer and immediately increasing its limit does not trigger the resourcetimingbufferfull event");
</script><script>
promise_test(async t => {
    addAssertUnreachedBufferFull(t);
    await fillUpTheBufferWithSingleResource();
    // These resources overflow the entry buffer, and go into the secondary buffer.
    load.xhr_sync(scriptResources[1]);
    load.xhr_sync(scriptResources[2]);
    // Immediately increase the size: the bufferfull event should not be fired.
    performance.setResourceTimingBufferSize(4);
    await waitForNextTask();
    checkEntries(3);
}, "Test that overflowing the buffer and immediately increasing its limit does not trigger the resourcetimingbufferfull event");
</script><script>
promise_test(async t => {
    addAssertUnreachedBufferFull(t);
    await fillUpTheBufferWithSingleResource();
    // These resources overflow the entry buffer, and go into the secondary buffer.
    load.xhr_sync(scriptResources[1]);
    load.xhr_sync(scriptResources[2]);
    // Immediately increase the size: the bufferfull event should not be fired.
    performance.setResourceTimingBufferSize(4);
    await waitForNextTask();
    checkEntries(3);
}, "Test that overflowing the buffer and immediately increasing its limit does not trigger the resourcetimingbufferfull event");
</script><script>
promise_test(async t => {
    addAssertUnreachedBufferFull(t);
    await fillUpTheBufferWithSingleResource();
    // These resources overflow the entry buffer, and go into the secondary buffer.
    load.xhr_sync(scriptResources[1]);
    load.xhr_sync(scriptResources[2]);
    // Immediately increase the size: the bufferfull event should not be fired.
    performance.setResourceTimingBufferSize(4);
    await waitForNextTask();
    checkEntries(3);
}, "Test that overflowing the buffer and immediately increasing its limit does not trigger the resourcetimingbufferfull event");
</script><script>
promise_test(async t => {
    addAssertUnreachedBufferFull(t);
    await fillUpTheBufferWithSingleResource();
    // These resources overflow the entry buffer, and go into the secondary buffer.
    load.xhr_sync(scriptResources[1]);
    load.xhr_sync(scriptResources[2]);
    // Immediately increase the size: the bufferfull event should not be fired.
    performance.setResourceTimingBufferSize(4);
    await waitForNextTask();
    checkEntries(3);
}, "Test that overflowing the buffer and immediately increasing its limit does not trigger the resourcetimingbufferfull event");
</script><script>
promise_test(async t => {
    addAssertUnreachedBufferFull(t);
    await fillUpTheBufferWithSingleResource();
    // These resources overflow the entry buffer, and go into the secondary buffer.
    load.xhr_sync(scriptResources[1]);
    load.xhr_sync(scriptResources[2]);
    // Immediately increase the size: the bufferfull event should not be fired.
    performance.setResourceTimingBufferSize(4);
    await waitForNextTask();
    checkEntries(3);
}, "Test that overflowing the buffer and immediately increasing its limit does not trigger the resourcetimingbufferfull event");
</script><script>
promise_test(async t => {
    addAssertUnreachedBufferFull(t);
    await fillUpTheBufferWithSingleResource();
    // These resources overflow the entry buffer, and go into the secondary buffer.
    load.xhr_sync(scriptResources[1]);
    load.xhr_sync(scriptResources[2]);
    // Immediately increase the size: the bufferfull event should not be fired.
    performance.setResourceTimingBufferSize(4);
    await waitForNextTask();
    checkEntries(3);
}, "Test that overflowing the buffer and immediately increasing its limit does not trigger the resourcetimingbufferfull event");
</script><script>
promise_test(async t => {
    addAssertUnreachedBufferFull(t);
    await fillUpTheBufferWithSingleResource();
    // These resources overflow the entry buffer, and go into the secondary buffer.
    load.xhr_sync(scriptResources[1]);
    load.xhr_sync(scriptResources[2]);
    // Immediately increase the size: the bufferfull event should not be fired.
    performance.setResourceTimingBufferSize(4);
    await waitForNextTask();
    checkEntries(3);
}, "Test that overflowing the buffer and immediately increasing its limit does not trigger the resourcetimingbufferfull event");
</script></script></script></script>
</body>
</html>
