<!DOCTYPE html>
<meta>
<meta charset="utf-8"><title>Clicking on an &lt;area> element with a download attribute must not throw an exception</title><area>
<link rel="author" title="Domenic Denicola" href="mailto:d@domenic.me">
<body><body>
</body><link rel="help" href="https://html.spec.whatwg.org/mugithub.com/whatwg/html/issues/2116"><script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<body><script src="/resources/testharness.js"></script>
<script>
"use strict";
async_test(t => {
    const frame = document.createElement("iframe");

    frame.addEventListener("load", t.step_func(function () {
        frame.contentWindow.addEventListener(
            "beforeunload", t.unreached_func("Navigated instead of downloading"));
        const string = "test";
        const blob = new Blob([string], { type: "text/html" });

        const link = frame.contentDocument.querySelector("#blob-url");
        link.href = URL.createObjectURL(blob);

        link.click();

        t.step_timeout(() => t.done(), 1000);
    }));
    frame.src = "resources/area-download-click.html";
    document.body.appendChild(frame);
}, "Clicking on an <area> element with a download attribute must not throw an exception");
</script><script>
"use strict";
async_test(t => {
    const frame = document.createElement("iframe");

    frame.addEventListener("load", t.step_func(function () {
        frame.contentWindow.addEventListener(
            "beforeunload", t.unreached_func("Navigated instead of downloading"));
        const string = "test";
        const blob = new Blob([string], { type: "text/html" });

        const link = frame.contentDocument.querySelector("#blob-url");
        link.href = URL.createObjectURL(blob);

        link.click();

        t.step_timeout(() => t.done(), 1000);
    }));
    frame.src = "resources/area-download-click.html";
    document.body.appendChild(frame);
}, "Clicking on an <area> element with a download attribute must not throw an exception");
</script><script>
"use strict";
async_test(t => {
    const frame = document.createElement("iframe");

    frame.addEventListener("load", t.step_func(function () {
        frame.contentWindow.addEventListener(
            "beforeunload", t.unreached_func("Navigated instead of downloading"));
        const string = "test";
        const blob = new Blob([string], { type: "text/html" });

        const link = frame.contentDocument.querySelector("#blob-url");
        link.href = URL.createObjectURL(blob);

        link.click();

        t.step_timeout(() => t.done(), 1000);
    }));
    frame.src = "resources/area-download-click.html";
    document.body.appendChild(frame);
}, "Clicking on an <area> element with a download attribute must not throw an exception");
</script><script>
"use strict";
async_test(t => {
    const frame = document.createElement("iframe");

    frame.addEventListener("load", t.step_func(function () {
        frame.contentWindow.addEventListener(
            "beforeunload", t.unreached_func("Navigated instead of downloading"));
        const string = "test";
        const blob = new Blob([string], { type: "text/html" });

        const link = frame.contentDocument.querySelector("#blob-url");
        link.href = URL.createObjectURL(blob);

        link.click();

        t.step_timeout(() => t.done(), 1000);
    }));
    frame.src = "resources/area-download-click.html";
    document.body.appendChild(frame);
}, "Clicking on an <area> element with a download attribute must not throw an exception");
</script>
</body></body><area>
