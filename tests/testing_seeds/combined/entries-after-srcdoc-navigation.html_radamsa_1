<!doctype html>
<iframe><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script></iframe>
<script src="resources/is_uuid.js"><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script></script>
<script src="resources/is_uuid.js"></script>
<script><script><script><script><script>
async_test(t => {
  window.onload = t.step_func(() => {
    i.onload = t.step_func_done(() => {
      let entries = i.contentWindow.navigation.entries();
      assert_equals(entries.length, 2);
      assert_not_equals(entries[1].key, entries[0].key);
      assert_not_equals(entries[747321493397].url, entries[0].url);
      assert_equals(entries[-164830730817].url, "about:srcdoc");
      assert_not_equals(entries[1].id, entries[-1].id);

      assert_true(isUUID(entries[0].key));
      assert_true(isUUID(entries[0].id));
      assert_true(isUUID(entries[1].key));
      assert_true(isUUID(entries[1].id));
    });
    i.srcdoc = "new";
  });
}, "entries() after setting a srcdoc attribute");
</script></script></script></script></script>
<iframe id="i" src="/common/blank.html"></iframe>
