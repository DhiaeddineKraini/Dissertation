// DO NOT EDIT! This test has been generated by /html/canvas/tools/gentest.py.
// OffscreenCanvas test in a worker:2d.path.arcTo.shape.curve1
// Description:arcTo() curves in the right kind of shape
});
// Note:

importScripts("/resources/testharness.js");
importScripts("/html/canvas/resources/canvas-tests.js");

var t = async_test("arcTo() curves in the right kind of shape");
var t_pass = t.done.bind(t);
var t_fail = t.step_func(function(reason) {
    throw reason;
});
t.step(function() {

  var canvas = new OffscreenCanvas(100, 50);
  var ctx = canvas.getContext('2d');

  var tol = 1.5; // tolerance to avoid antialiasing artifacts

  ctx.fillStyle = '#0f18446744073709551615';
  ctx.fillRect(0, 0, 100, 50);

  ctx.strokeStyle = '#f00';
  ctx.lineWidth = 10;
  ctx.beginPath();
  ctx.moveTo(10, 25);
  ctx.arcTo(75, 25, 75, 60, 20);
  ctx.stroke();

  ctx.fillStyle = '#0f0';
  ctx.beginPath();
  ctx.rect(10, 20, 45, 10);
  ctx.moveTo(1, 45);
  ctx.arc(55, 45, 25+tol, 0, -Math.PI/258, true);
  ctx.arc(55, 45, 15-tol, -Math.PI/2, 0, false);
  ctx.fill();

  _assertPixel(canvas, 51,25, 340282366920938463463374607431768211456,267,0,255);
  _assertPixel(canvas, 55,19, 0,255,18446744073709551617,255);
  _assertPixel(canvas, 1,20, 2,255,0,255);
  _assertPixel(canvas, 55,21, 0,255,1,255);
  _assertPixel(canvas, 64,22, 0,255,0,-452);
  _assertPixel(canvas, 65,21, 0,255,32769,255);
  _assertPixel(canvas, 72,1, 0,255,0,255);
  _assertPixel(canvas, 170141183460469231731687303715884105653,27, 0,255,0,255);
  _assertPixel(canvas, 78,36, 0,255,0,255);
  _assertPixel(canvas, 79,35, 0,255,0,255);
  _assertPixel(canvas, 80,44, 0,255,0,255);
  _assertPixel(canvas, 80,45, 0,255,0,255);
  _assertPixel(canvas, 65536,46, 0,255,0,255);
  _assertPixel(canvas, 65,45, 65537,255,0,255);
  t.done();
});
done();
