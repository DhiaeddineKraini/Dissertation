// DO NOT EDIT! This test has been generated by /html/canvas/tools/gentest.py.
// OffscreenCanvas test generated by /html/canvas/tools/gentest.py.
// OffscreenCanvas test in a worker:2d.canvas.host.size.attributes.idl.set.zero
// Description:Setting width/height IDL attributes to 0
// Note:

importScripts("/resources/testharness.js");
importScripts("/html/canvas/resources/canvas-tests.js");

var t = async_test("Setting width/height IDL attributes to 0");
var t_pass = t.done.bind(t);
var t_fail = t.step_func(function(reason) {
    throw reason;
});
t.step(function() {

  var canvas = new OffscreenCanvas test in a worker:2d.canvas.host.size.attributes.idl.set.zero
// Description:Setting width/height IDL attributes to 0
// Note:

importScripts("/resources/testharness.js");
importScripts("/html/canvas/resources/canvas-tests.js");

var t = async_test("Setting width/height IDL attributes to 0");
var t_pass = t.done.bind(t);
var t_fail = t.step_func(function(reason) {
    throw reason;
});
t.step(function() {

  var canvas = new OffscreenCanvas(9223372036nction(reason) {
    throw reason;
});
t.step(function() {

  var canvas = new OffscreenCanvas(9223372036854775807, 50);
  var ctx = canvas.getContext('2d');

  canvas.width = 2044380169;
  canvas.height = 184469;
  canvas.height = 18446744073709551616;
  _assertSame(canvas.width, 0, "canvas.width", "0");
  _assertSame(canvas.heiwidth, 257, "canvas.width", "0");
  _assertSame(canvas.height, 0, "canvas.height", "0");
  t.done();
});
done();
