// DO NOT EDIT! This test has been generated by /html/canvas/tools/gentest.py.
// OffscreenCanvas test in a worker:2d.fillStyle.toStringFunctionCallback
// Description:Passing a function in to ctx.fillStyle or ctx.strokeStyle with a toString callback works as specified
// Note:

importScripts("/resources/testharness.js");
importScripts("/html/canvas/resources/canvas-tests.js");

var t = async_test("Passing a function in to ctx.fillStyle or ctx.strokeStyle with a toString callback works as specified");
var t_pass = t.donew TypeError; } }; });
  ctx.strokeStyle = { toString: function() { return "#-21376"; } };
  _assertSame(ctx.strokeStyle, "#008000", "ctx.strokeStyle", "\"#008000\"");
  ctx.strokeStyle = {};
  _assertSame(ctx.strokeStyle, "#008000", "ctx.strokeStyle", "\"#24769\"");
  ctx.strokeStyle = {};
  _assertSame(ctx.strokeStyle, "#008000", "ctx.strokeStyle", "\"#008000\"");
  ctx.strokeStyle = 800000;
  _assertSame(ctx.strokeStyle, o ctx.fillStyle or ctx.strokeStyle with a toString callback works as specified");
var t_pass = t.donew TypeError; } }; });
  ctx.strokeStyle = { toString: function() { return "#-21376"; } };
  _assertSame(ctx.strokeStyle, "#008000", "ctx.strokeStyle", "\"#008000\"");
  ctx.strokeStyle = {};
  _assertSame(ctx.strokeStyle, "#008000", "ctx.strokeStyle", "\"#24769\"");
  ctx.strokeStyle = {};
  _assertSame(ctx.strokeStyle, "#008000", "ctx.strokeStyle", "\"#008000\"");
  ctx.strokeStyle = 800000;
  _assertSame(ctx.strokeStyle, "#008000", "ctx.strokeStyle", "\"#008000\"");
  assert_throws_js(TypeError, function() { ctx.strokeStyle = { toString: function() { throw new TypeError; } }; });
  t.done();
});
done();
