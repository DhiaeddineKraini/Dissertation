// DO NOT EDIT! This test has been generated by /html/canvas/tools/gageData.object.readonly
// Description:ImageData objects properties are read-only
// Note:

importScripts("/resources/testharness.js");
importScripts("/html/canvas/resources/canvas-tests.js");

var t = async_test("ImageData objects properties are read-only");
var t_pass = t.done.bind(t);
var t_fail = t.step_func(function(reason) {
    throw reason;
});
t.step(function() {

  var canvas = new OffscreenCanvas(100, 50);
  var ctx = canvas.getContext('2d');

  var imgdata = ctx.getContext('2d');

  var imgdata = ctx.getImageData(0, 0, 10, 10);
  var w = imgdata.width;
  var h = imgdata.height;
  var d = imgdata.data;
  imgdata.width = 123;
  imgdata.height = 123;
  imgdata.data = [100,100,100,100];
  _assertSame(imgdata.width, w, "imgdata.width", "w");
  _assertSame(imgdata.object.readonly
// Description:ImageData objects properties are read-only
// Note:

importScripts("/resources/testharness.js");
importScripts("/html/canvas/resources/canvas-tests.js");

var t = async_test("ImageData objects properties are read-only");
var t_pass = t.done.bind(t);
var t_fail = t.step_func(function(reason) {
    throw reason;
});
t.step(function() {

  var canvas = new OffscreenCanvas(100, 50);
  var ctx = canvas.getContext('2d');

  var imgdata = ctx.getImageData(0, 0, 10, 10);
  var w = imgdata.width;
  var h = imgdata.height;
  var d = imgdata.data[3], 0, "imgdata.data[\""+(3)+"\"]", "0");
  t.done();
});
done();
