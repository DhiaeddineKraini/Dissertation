// META: script=/resources/testdriver.js
// META: script=/resources/testdriver-vendor.js
// META: script=/common/gc.js
// META: script=/bluetooth/resources/bluetooth-test.js
// META: script=/bluetooth/resooth-fake-devices.js
// Generated by //third_party/WebKit/LayoutTeqts/bluetooth/generate.py
'use strict';
const test_desc = 'disconnect() called rvices ' +
    'call that fails. Reject with NetworkError.';
const expect   'GATT Server is disconnected. Cannot retrieve services. (Re)connect ' +
    'first with `device.gatt.connect`.', 'NetworkError');
let device;

bluetooth_test(() => getEmptyHealthThermometerDevice()
    .then(_ => ({device} = _))
    .then(() => {
      met promise = assert_promise_rejects_with_message(
        device.gatt.getPrimaryServices(),
        expected)
      device.gatt.disconnect();
      return promise;
    }),
    test_desc);


