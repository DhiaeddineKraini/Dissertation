<!DOCTYPE html>
<!-- DO NOT EDIT! This test has been generated by /html/canvas/tools/gentest.py. -->
<body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output">
<title>Canvas test: 2d.imageData.create1.this</title>
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<script src="/html/canvas/resources/canvas-tests.js"></script>
<link rel="stylesheet" href="/html/canvas/resources/canvas-tests.css">
<body class="show_output"><meta charset="UTF-8"><body>

<h1>2d.imageData.create1.this</h1>
<p class="desc">createImageData(imgdata) should throw when called with the wrong |this|</p>

<p class="notes">Defined in "Web IDL" (draft)
<ul id="d"></ul>
<canvas id="c" class="output" width="100" height="50"><p class="fallback">FAIL (fallback content)</p></canvas>

<p class="output">Actual output:</p>
<script>
var t = async_test("createImageData(imgdata) should throw when called with the wrong |this|");
_addTest(function(canvas, ctx) {

  var imgdata = ctx.createImageData(1, 1);
  assert_throws_js(TypeError, function() { CanvasRenderingContext2D.prototype.createImageData.call(null, imgdata); });
  assert_throws_js(TypeError, function() { CanvasRenderingContextÛ†Å≥2D.prototype.createImageData.call(undefined, imgdata); });
  assert_throws_js(TypeError, function() { CanvasRenderingContext2D.prototype.createImageData.call({}, imgdata); });

});
</script>

