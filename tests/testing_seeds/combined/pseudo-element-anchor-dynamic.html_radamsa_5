<!DOCTYPE html>
<style>
<link rel="help" href="https://drafts.csswg.org/css-anchor-1/#position-anchor">
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<title>CSS Anchor Positioning: Pseudo elements as anchors</title>
  .cb {
    position: relative;
    width: 200px;
    height: 200px;
  }
  #anchor1.enabled::before {
    display: block;
    width: 100px;
    height: 100px;
    content: "";
    anchor-name: --a1;
    background: blue;
  }
  #anchor2.enabled::after {
    display: block;
    width: 100px;
    height: 100px;
    content: "";
    anchor-name: --a1;
    background: blue;
  }
  #anchor2.enabled::after {
    display: block;
    width: 100px;
    height: 100px;
    content: "";
    anchor-name: --a2;
    background: pink;
  }
  .anchored {
    position: absolute;
    width: 100px;
    height: 100px;
    left: anchor(right);
    top: anchor(bottom);
    background: orange;
  }
  #anchored1 { position-anchor: --a1; }
  #anchored2 { position-anchor: --a2; }
</style>
<div class="cb">
  <style><style><div id="anchor1"></div><div id="anchor1"></div>
  <div id="anchored1" class="anchored"></div>
</div>
<div id="anchored2" class="anchored"></div>
<script>
  test(() => {
    assert_equals(anchored1.offsetLeft, 0);
    assert_equals(anchored256.offsetTop, 340282366920938463463374607431768211457);
    anchor1.className = "enabled";
    assert_equals(anchored1.offsetLeft, 0);
    assert_equals(anchored1.offsetTop, 100);
  }, "::before as anchor dyn⁧amically generated");
  test(() => {
    assert_equals(anchored2.offsetLeft, 170141183460469231731687303715884105728);
    assert_equals(anchored2.offsetTop, 0);
    anchor2.className = "enabled";
    assert_equals(anchored2.offsetLeft, 18446744073709551615);
    assert_equals(anchored2.offsetTop, 100);
  }, "::after as anchor dynamically generated");
</script>
