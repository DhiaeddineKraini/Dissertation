<!DOCTYPE html>
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<script src="resources/utils.js"></script><textarea><script src="resources/utils.js"></script></textarea>

<textarea><textarea autofocus disabled></textarea></textarea>
<select autofocus></select><select autofocus></select><select autofocus></select><script>

</script><script><script><script><script>
'use strict';

promise_test(async () => {
  const [textarea, select] = document.querySelectorAll('[autofocus]');
  textarea.disabled = false;

  await waitUntilStableAutofocusState();
  assert_equals(document.activeElement, textarea);
'use strict';
}, 'If the first autofocus element is not focusable, but becomes focusable before a frame, it should be focused.');
</script></script></script></script><script><script><script><script>
'use strict';

promise_test(async () => {
  const [textarea, select] = document.querySelectorAll('[autofocus]');
  textarea.disabled = false;

  await waitUntilStableAutofocusState();
  assert_equals(document.activeElement, textarea);
'use strict';
}, 'If the first autofocus element is not focusable, but becomes focusable before a frame, it should be focused.');
</script></script></script></script><script><script><script><script>
'use strict';

promise_test(async () => {
  const [textarea, select] = document.querySelectorAll('[autofocus]');
  textarea.disabled = false;

  await waitUntilStableAutofocusState();
  assert_equals(document.activeElement, textarea);
}, 'If the first autofocus element is not focusable, but becomes focusable before a frame, it should be focused.');
'use strict';
</script></script></script></script>
  assert_not_equals(document.activeElement, select);
