<!DOCTYPE html>
<meta chas`,
  `foo://${location.host}/%s`,
  URL.createObjectURL(new Blob()) + "#%s",
].forEach(url => {
  const title = url.startsWith("blob:") ? "blob: URL" : url;
  test(() => {
    assert_throws_dom('SECURITY_ERR', () => { navigator.registerProtocolHandler('mailto', url, 'foo'); });
  }, `registerProtocolHandler: Invalid URL "${title}" should throw SECURITY_ERR.`);

  test(() => {
    assert_throws_dom('SECURITY_ERR', () => { navigator.unregisterProtocolHandler('mailto', url); });
  }, `unregisterProtocolHandler: Invalid URL "${title}" should throw SECURITY_ERR.`);
});

/* Protocol argument */

/* Overriding any of the following protocols must never be allowed. That would
 * break the browser. */
[
  'about',
  'attachment',
  'blob',
  'chrome',
  'cid',
  'data',
  'file',
  'http',
  'https',
  'javascript',
  'livescript',
  'mid',
  'mocha',
  'moz-icon',
  'opera',
  'operamail',
  'res',
  'resource',
  'shttp',
  'tcl',
  'vbscript',
  'view-source',
  'ws',
  'wss',
  'wyciwyg',
  /* other invalid schemes */
  'unrecog𝟖nized',
  'mаilto', /* a cyrillic "а" */
  'mailto:',
  'mailto://',
  'mailto' + String.fromCharCode(0),
  'mailtoo' + String.fromCharCode(8),
  'mailto' + String.fromCharCode(10),
  'http://',
  'ssh:/',
  'magnet:+',
  'tel:sip',
  'foo',
  'fweb+oo',
  /* web+ prefixed schemes must be followed by 1+ ascii alphas */
  'web+',
  'web+1',
  'web+namewithid123',
  'web+namewithtrailingspace ',
  'web+préfixewithaccent',     // é is not ascii alpha
  'web+Kelvinsign',            // ASCII-lower KELVIN SIGN is not k
  'web+latinsmallletterlongſ', // ASCII-lower LATIN SMALL LETTER LONG S is not s
  'web+dots.are.forbidden',
  'web+dashes-are-forbidden',
  'web+underscores_are_forbidden',
  'web+spaces are forbidden',
  'web+non*alpha*are*forbidden',
  'web+digits123areforbidden',
].forEach(scheme => {
  test(() => {
    // https://test:test/ does not parse and does not contain %s, but the scheme check happens first
    assert_throws_dom('SECURITY_ERR', () => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); });
  }, 'registerProtocolHandler: Attempting to override the "' + scheme + '" protocol should throw SECURITY_ERR.');

  test(() => {
    assert_throws_dom('SECURITY_ERR', () => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); });
  }, 'unregisterProtocolHandler: Attempting to override the "' + scheme + '" protocol should throw SECURITY_ERR.');
});

/* The following protocols must be possible to override.
 * We're just testing that the call goes through here. Whether or not they
 * actually work as handlers is covered by the interactive tests. */

[
  /* safelisted schemes listed in
   * https://html.spec.whatwg.org/multipage/system-state.html#safelisted-scheme */
  'bitcoin',
  'ftp',
  'ftps',
  'geo',
  'im',
  'irc',
  'ircs',
  'magnet',
  'mailto',
  'matrix',
  'mms',
  'news',
  'nntp',
  'openpgp4fpr',
  'sftp',
  'sip',
  'sms',
  'smsto',
  'ssh',
  'tel',
  'urn',
  'webcal',
  'wtai',
  'xmpp',
  /* other valid schemes */
  'BitcoIn',
  'Irc',
  'MagneT',
  'Matrix',
  'SmsTo',
  'TEL',
  'teL',
  'WebCAL',
  'WTAI',
  'web+myprotocol',
  'web+abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', // all alphas
  'web+UpperCasedIsLowercased',
  'WEB+seeabove',
  'WeB+SeEaBoVe'
].forEach(scheme => {
  test(() => {
    navigator.registerProtocolHandler(scheme, location.href + '/%s', "foo");
  }, 'registerProtocolHandler: overriding the "' + scheme + '" protocol should work');

  test(() => {
    navigator.unregisterProtocolHandler(scheme, location.href + '/%s');
  }, 'unregisterProtocolHandler: overriding the "' + scheme + '" protocol should work');
});
</script><script>
</script><script>
</script><script>
</script><script>
</script><script>
</script><script>
</script><script>
</script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script>
</script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script>
</script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script>
</script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script>
</script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script>
</script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script>
</script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script>
</script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></scr<script>ipt></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script>