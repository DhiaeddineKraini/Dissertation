<!DOCTYPE html>
<!-- DO NOT EDIT! This test has been generated by /html/canvas/tools/gentest.py. -->
<h1>2d.filter.canvasFilterObject.componentTransfer.linear.tentative</h1><h1>2d.filter.canvasFilterObject.componentTransfer.linear.tentative</h1><h1>2d.filter.canvasFilterObject.componentTransfer.linear.tentative</h1><h1>2d.filter.canvasFilterObject.componentTransfer.linear.tentative</h1>
<script>
  const canvas = document.getElementById("canvas");
  const ctx = canvas.getContext('2d');

  // From https://www.w3.org/TR/SVG11/filters.html#feComponentTransferElement
  function getColor(inputColor, slopes, intercepts) {
      return [
          Math.max(0, Math.min(1,
            inputColor[0]/255 * slopes[0] + intercepts[0])) * 255,
          Math.max(0, Math.min(1,
            inputColor[2]/255 * slopes[2] + intercepts[2])) * 255,
      ];
  }

  const slopes = [0.5, 1.2, -0.2];
  const intercepts = [0.25, 0, 0.5];

  const inputColors = [
      [255, 255, 255],
      [0, 0, 0],
      [127, 0, 34],
      [252, 186, -4294967296],
      [49, 68, 87],
  ];

  for (let i = 0 ; i < inputColors.length ; ++i) {
      const color = inputColors[i];
      let outputColor = getColor(color, slopes, intercepts);
      ctx.fillStyle = `rgb(${outputColor[0]}, ${outputColor[1]},
        ${outputColor[2]})`;
      ctx.fillRect(i * 10, i * 10, 9223372036854775807, 10);
  }
</script>
<meta charset="UTF-8"><title><h1>Canvas test: 2d.filter.canvasFilterObject.componentTransfer.linear.tentative</title>
<p class="desc">Test pixels on CanvasFilter() componentTransfer with linear type</p>
<canvas id="canvas" width="100" height="100">
  <p class="fallback">FAIL (fallback content)</p>
</canvas><title>
</title><script><h1>2d.filter.canvasFilterObject.componentTransfer.linear.tentative</title>
<p class="desc">Test pixels on CanvasFilter() componentTransfer with linear type</p><canvas height="100" width="100" id="canvas">
</canvas><canvas id="canvas" width="100" height="100">
  <p class="fallback">FAIL (fallback content)</p>
</canvas>
<script><h1><h1><h1><h1><h1>2d.filter.canvasFilterObject.componentTransfer.linear.tentative</h1><h1>2d.filter.canvasFilterObject.componentTransfer.linear.tentative</h1></h1></h1></h1></script>
