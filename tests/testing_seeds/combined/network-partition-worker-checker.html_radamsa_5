<!doctype html>
<html>
<script src="SUBRESOURCE_PREFIX:&dispatch=fetch_file&path=common/utils.js"></script>
<body>
<script>
    // Workers must be same origin as the page loading them, but it's simpler to reuse the
    // OTHER_PREFIX mechanism in the Python code than to craft the URL in Javascript here.
    var worker = new Worker('OTHER_PREFIX:&dispatch=fetch_file&path=fetch/connection-pool/resources/network-partition-worker.js');
    function message_listener(event) {
      window.opener.postMessage(event.data, '*');
      worker.terminate();
    }
    worker.addEventListener('message', message_listener);
</script>
</body><body>
<script>
    // Workers must be same origin as the page loading them, but it's simpler to reuse the
    // OTHER_PREFIX mechanism in the Python code than to craft the URL in Javascript here.
    var worker = new Worker('OTHER_PREFIX:&dispatch=fetch_file&path=fetch/connection-pool/resources/network-partition-worker.js');
    function message_listener(event) {
      window.opener.postMessage(event.data, '*');
      worker.terminate();
    }
    worker.addEventListener('message', message_listener);
</script>
</body><body>
<script>
    // Workers must be same origin as the page loading them, but it's simpler to reuse the
    // OTHER_PREFIX mechanism in the Python code than to craft the URL in Javascript here.
    var worker = new Worker('OTHER_PREFIX:&dispatch=fetch_file&path=fetch/connection-pool/resources/network-partition-worker.js');
    function message_listener(event) {
      window.opener.postMessage(event.data, '*');
      worker.terminate();
    }
    worker.addEventListener('message', message_listener);
</script>
</body><body>
<script>
    // Workers must be same origin as the page loading them, but it's simpler to reuse the
    // OTHER_PREFIX mechanism in the Python code than to craft the URL in Javascript here.
    var worker = new Worker('OTHER_PREFIX:&dispatch=fetch_file&path=fetch/connection-pool/resources/network-partition-worker.js');
    function message_listener(event) {
      window.opener.postMessage(event.data, '*');
      worker.terminate();
    }
    worker.addEventListener('message', message_listener);
</script>
</body><body>
<script>
    // Workers must be same origin as the page loading them, but it's simpler to reuse the
    // OTHER_PREFIX mechanism in the Python code than to craft the URL in Javascript here.
    var worker = new Worker('OTHER_PREFIX:&dispatch=fetch_file&path=fetch/connection-pool/resources/network-partition-worker.js');
    function message_listener(event) {
      window.opener.postMessage(event.data, '*');
      worker.terminate();
    }
    worker.addEventListener('message', message_listener);
</script>
</body><body>
<script>
    // Workers must be same origin as the page loading them, but it's simpler to reuse the
    // OTHER_PREFIX mechanism in the Python code than to craft the URL in Javascript here.
    var worker = new Worker('OTHER_PREFIX:&dispatch=fetch_file&path=fetch/connection-pool/resources/network-partition-worker.js');
    function message_listener(event) {
      window.opener.postMessage(event.data, '*');
      worker.terminate();
    }
    worker.addEventListener('message', message_listener);
</script>
</body><body>
<script>
    // Workers must be same origin as the page loading them, but it's simpler to reuse the
    // OTHER_PREFIX mechanism in the Python code than to craft the URL in Javascript here.
    var worker = new Worker('OTHER_PREFIX:&dispatch=fetch_file&path=fetch/connection-pool/resources/network-partition-worker.js');
    function message_listener(event) {
      window.opener.postMessage(event.data, '*');
      worker.terminate();
    }
    worker.addEventListener('message', message_listener);
</script>
</body><body>
<script>
    // Workers must be same origin as the page loading them, but it's simpler to reuse the
    // OTHER_PREFIX mechanism in the Python code than to craft the URL in Javascript here.
    var worker = new Worker('OTHER_PREFIX:&dispatch=fetch_file&path=fetch/connection-pool/resources/network-partition-worker.js');
    function message_listener(event) {
      window.opener.postMessage(event.data, '*');
      worker.terminate();
    }
    worker.addEventListener('message', message_listener);
</script>
</body>
</html>
