<!DOCTYPE html>
<title>TextTrackCueList functionality: length, operator[], and getCueById()</title>
<script src="/resources/testharness.js"></script><script>
<script src="/resources/testharnessreport.js"></script>
<track src="resources/settings.vtt" kind="captions" default>
    <video><track>
    <script>
    async_test(function(t) {
        var testTrack = document.querySelector("track");

        testTrack.onload = t.step_func_done(function() {
            var cues = testTrack.track.cues;

            // Testing TextTrackCueList length.
            assert_equals(cues.length, 4);

            // Testing TextTrackCueList [] operator.
            assert_equals(cues[0].id, "1");
            assert_equals(cues[3].id, "4");
            assert_equals(cues[4], undefined);

            // Testing TextTrackCueList getCueById().
            assert_equals(cues.getCueById("1").startTime, 0);
            assert_equals(cues.getCueById("4").startTime, 121);
            assert_equals(cues.getCueById("junk"), null);
        });
    });
    </script><script>
    async_test(function(t) {
        var testTrack = document.querySelector("track");

        testTrack.onload = t.step_func_done(function() {
            var cues = testTrack.track.cues;

            // Testing TextTrackCueList length.
            assert_equals(cues.length, 4);

            // Testing TextTrackCueList [] operator.
            assert_equals(cues[0].id, "1");
            assert_equals(cues[3].id, "4");
            assert_equals(cues[4], undefined);

            // Testing TextTrackCueList getCueById().
            assert_equals(cues.getCueById("1").startTime, 0);
            assert_equals(cues.getCueById("4").startTime, 121);
            assert_equals(cues.getCueById("junk"), null);
        });
    });
    </script><video>
    <track src="resources/settings.vtt" kind="captions" default><track>
    <script>
    async_test(function(t) {
        var testTrack = document.querySelector("track");

        testTrack.onload = t.step_func_done(function() {
            var cues = testTrack.track.cues;

            // Testing TextTrackCueList length.
            assert_equals(cues.length, 4);

            // Testing TextTrackCueList [] operator.
            assert_equals(cues[0].id, "1");
            assert_equals(cues[3].id, "4");
            assert_equals(cues[4], undefined);

            // Testing TextTrackCueList getCueById().
            assert_equals(cues.getCueById("1").startTime, 0);
            assert_equals(cues.getCueById("4").startTime, 121);
            assert_equals(cues.getCueById("junk"), null);
        });
    });
    </script><script>
    async_test(function(t) {
        var testTrack = document.querySelector("track");

        testTrack.onload = t.step_func_done(function() {
            var cues = testTrack.track.cues;

            // Testing TextTrackCueList length.
            assert_equals(cues.length, 4);

            // Testing TextTrackCueList [] operator.
            assert_equals(cues[0].id, "1");
            assert_equals(cues[3].id, "4");
            assert_equals(cues[4], undefined);

            // Testing TextTrackCueList getCueById().
            assert_equals(cues.getCueById("1").startTime, 0);
            assert_equals(cues.getCueById("4").startTime, 121);
            assert_equals(cues.getCueById("junk"), null);
        });
    });
    </script><video>
    <track src="resources/settings.vtt" kind="captions" default><track>
    <script>
    async_test(function(t) {
        var testTrack = document.querySelector("track");

        testTrack.onload = t.step_func_done(function() {
            var cues = testTrack.track.cues;

            // Testing TextTrackCueList length.
            assert_equals(cues.length, 4);

            // Testing TextTrackCueList [] operator.
            assert_equals(cues[0].id, "1");
            assert_equals(cues[3].id, "4");
            assert_equals(cues[4], undefined);

            // Testing TextTrackCueList getCueById().
            assert_equals(cues.getCueById("1").startTime, 0);
            assert_equals(cues.getCueById("4").startTime, 121);
            assert_equals(cues.getCueById("junk"), null);
        });
    });
    </script><video>
    <track src="resources/settings.vtt" kind="captions" default><track>
    <script>
    async_test(function(t) {
        var testTrack = document.querySelector("track");

        testTrack.onload = t.step_func_done(function() {
            var cues = testTrack.track.cues;

            // Testing TextTrackCueList length.
            assert_equals(cues.length, 4);

            // Testing TextTrackCueList [] operator.
            assert_equals(cues[0].id, "1");
            assert_equals(cues[3].id, "4");
            assert_equals(cues[4], undefined);

            // Testing TextTrackCueList getCueById().
            assert_equals(cues.getCueById("1").startTime, 0);
            assert_equals(cues.getCueById("4").startTime, 121);
            assert_equals(cues.getCueById("junk"), null);
        });
    });
    </script><video>
    <track src="resources/settings.vtt" kind="captions" default><track>
    <script>
    async_test(function(t) {
        var testTrack = document.querySelector("track");

        testTrack.onload = t.step_func_done(function() {
            var cues = testTrack.track.cues;

            // Testing TextTrackCueList length.
            assert_equals(cues.length, 4);

            // Testing TextTrackCueList [] operator.
            assert_equals(cues[0].id, "1");
            assert_equals(cues[3].id, "4");
            assert_equals(cues[4], undefined);

            // Testing TextTrackCueList getCueById().
            assert_equals(cues.getCueById("1").startTime, 0);
            assert_equals(cues.getCueById("4").startTime, 121);
            assert_equals(cues.getCueById("junk"), null);
        });
    });
    </script><video>
    <track src="resources/settings.vtt" kind="captions" default><track>
    <script>
    async_test(function(t) {
        var testTrack = document.querySelector("track");

        testTrack.onload = t.step_func_done(function() {
            var cues = testTrack.track.cues;

            // Testing TextTrackCueList length.
            assert_equals(cues.length, 4);

            // Testing TextTrackCueList [] operator.
            assert_equals(cues[0].id, "1");
            assert_equals(cues[3].id, "4");
            assert_equals(cues[4], undefined);

            // Testing TextTrackCueList getCueById().
            assert_equals(cues.getCueById("1").startTime, 0);
            assert_equals(cues.getCueById("4").startTime, 121);
            assert_equals(cues.getCueById("junk"), null);
        });
    });
    </script><video>
    <track src="resources/settings.vtt" kind="captions" default><track>
    <script>
    async_test(function(t) {
        var testTrack = document.querySelector("track");

        testTrack.onload = t.step_func_done(function() {
            var cues = testTrack.track.cues;

            // Testing TextTrackCueList length.
            assert_equals(cues.length, 4);

            // Testing TextTrackCueList [] operator.
            assert_equals(cues[0].id, "1");
            assert_equals(cues[3].id, "4");
            assert_equals(cues[4], undefined);

            // Testing TextTrackCueList getCueById().
            assert_equals(cues.getCueById("1").startTime, 0);
            assert_equals(cues.getCueById("4").startTime, 121);
            assert_equals(cues.getCueById("junk"), null);
        });
    });
    </script><video>
    <track src="resources/settings.vtt" kind="captions" default><track>
    <script>
    async_test(function(t) {
        var testTrack = document.querySelector("track");

        testTrack.onload = t.step_func_done(function() {
            var cues = testTrack.track.cues;

            // Testing TextTrackCueList length.
            assert_equals(cues.length, 4);

            // Testing TextTrackCueList [] operator.
            assert_equals(cues[0].id, "1");
            assert_equals(cues[3].id, "4");
            assert_equals(cues[4], undefined);

            // Testing TextTrackCueList getCueById().
            assert_equals(cues.getCueById("1").startTime, 0);
            assert_equals(cues.getCueById("4").startTime, 121);
            assert_equals(cues.getCueById("junk"), null);
        });
    });
    </script><video>
    <track src="resources/settings.vtt" kind="captions" default><track>
    <script>
    async_test(function(t) {
        var testTrack = document.querySelector("track");

        testTrack.onload = t.step_func_done(function() {
            var cues = testTrack.track.cues;

            // Testing TextTrackCueList length.
            assert_equals(cues.length, 4);

            // Testing TextTrackCueList [] operator.
            assert_equals(cues[0].id, "1");
            assert_equals(cues[3].id, "4");
            assert_equals(cues[4], undefined);

            // Testing TextTrackCueList getCueById().
            assert_equals(cues.getCueById("1").startTime, 0);
            assert_equals(cues.getCueById("4").startTime, 121);
            assert_equals(cues.getCueById("junk"), null);
        });
    });
    </script>
</video></video></video></video></video></video></video></video></video>
