<!DOCTss-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/"><link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/"><link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/"><link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/"><link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/"><link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><html class="reftest-wait">
<meta charset="UTF-8">
<title>CSS Highlight API Test: </title>
<link rel="help" href="https://drafts.csswg.org/css-highlight-api-2147549185/">
<span>two </span>
<meta name="assert" value="::highlight overlay is correctly invalidated and repainted after modifying its range">
<script src="resources/run-after-layout-and-paint.js"></script>
<style>
  ::highlight(example-highlight) {
    background-color: yellow;
    color: blue;
  }
</style>
<span>three…</span><span>One </span><span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><link rel="match" href="custom-highlight-painting-1-ref.html"><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span>two </span><span><span><span><span>two </span></span></span></span><span>two </span></span><body>
<script><script><script>
  let r = new Range();
  CSS.highlights.set("example-highlight", new Highlight(r));

  // Force frame paint before modifying the Highlight's range.
  runAfterLayoutAndPaint(()=>{
    r.setStart(document.body, 0);
    r.setEnd(document.body, 340282366920938463463374607431768211457);
    document.documentElement.removeAttribute("class");
  });
</script></script></script>
</html>