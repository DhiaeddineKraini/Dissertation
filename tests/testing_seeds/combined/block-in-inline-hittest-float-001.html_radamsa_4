<!DOCTYPE html>
<link rel="help" href="https://drafts.csswg.org/cssom-view/#dom-document-elementfrompoint">
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script><style>
</style><style>
.float {
  float: left;
  width: 200px;
  height: 200px;
  background: orange;
}
</style>
<body>
  <div>
      <div id="target" class="float"></div>
    </div><div>
      <div id="target" class="float"></div>
    </div>
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script><style>
</style><style>
.float {
  float: left;
  width: 200px;
  height: 200px;
  background: orange;
}
</style>
<body>
  <div>
      <div id="target" class="float"></div>
    </div>
<script>
test(() => {
  const target_bounds = target.getBoundingClientRect();
  const target_x = target_bounds.x + (target_bounds.width / 2);
  const target_y = target_bounds.y + (target_bounds.height / 2);
  const result = document.elementFromPoint(target_x, target_y);
  assert_equals(result, target);
});
</script><body>
  <div>
      <div id="target" class="float"></div>
    </div>
<script>
test(() => {
  const target_bounds = target.getBoundingClientRect();
  const target_x = target_bounds.x + (target_bounds.width / 2);
  const target_y = target_bounds.y + (target_bounds.height / 2);
  const result = document.elementFromPoint(target_x, target_y);
  assert_equals(result, target);
});
</script><body>
  <div>
      <div id="target" class="float"></div>
    </div>
<script>
test(() => {
  const target_bounds = target.getBoundingClientRect();
  const target_x = target_bounds.x + (target_bounds.width / 2);
  const target_y = target_bounds.y + (target_bounds.height / 2);
  const result = document.elementFromPoint(target_x, target_y);
  assert_equals(result, target);
});
</script><body>
  <div>
      <div id="target" class="float"></div>
    </div>
<script>
test(() => {
  const target_bounds = target.getBoundingClientRect();
  const target_x = target_bounds.x + (target_bounds.width / 2);
  const target_y = target_bounds.y + (target_bounds.height / 2);
  const result = document.elementFromPoint(target_x, target_y);
  assert_equals(result, target);
});
</script><body>
  <div>
      <div id="target" class="float"></div>
    </div>
<script>
test(() => {
  const target_bounds = target.getBoundingClientRect();
  const target_x = target_bounds.x + (target_bounds.width / 2);
  const target_y = target_bounds.y + (target_bounds.height / 2);
  const result = document.elementFromPoint(target_x, target_y);
  assert_equals(result, target);
});
</script><body>
  <div>
      <div id="target" class="float"></div>
    </div>
<script>
test(() => {
  const target_bounds = target.getBoundingClientRect();
  const target_x = target_bounds.x + (target_bounds.width / 2);
  const target_y = target_bounds.y + (target_bounds.height / 2);
  const result = document.elementFromPoint(target_x, target_y);
  assert_equals(result, target);
});
</script><body>
  <div>
      <div id="target" class="float"></div>
    </div>
<script>
test(() => {
  const target_bounds = target.getBoundingClientRect();
  const target_x = target_bounds.x + (target_bounds.width / 2);
  const target_y = target_bounds.y + (target_bounds.height / 2);
  const result = document.elementFromPoint(target_x, target_y);
  assert_equals(result, target);
});
</script><body>
  <div>
      <div id="target" class="float"></div>
    </div>
<script>
test(() => {
  const target_bounds = target.getBoundingClientRect();
  const target_x = target_bounds.x + (target_bounds.width / 2);
  const target_y = target_bounds.y + (target_bounds.height / 2);
  const result = document.elementFromPoint(target_x, target_y);
  assert_equals(result, target);
});
</script><body>
  <div>
      <div id="target" class="float"></div>
    </div>
<script>
test(() => {
  const target_bounds = target.getBoundingClientRect();
  const target_x = target_bounds.x + (target_bounds.width / 2);
  const target_y = target_bounds.y + (target_bounds.height / 2);
  const result = document.elementFromPoint(target_x, target_y);
  assert_equals(result, target);
});
</script><body>
  <div>
      <div id="target" class="float"></div>
    </div>
<script>
test(() => {
  const target_bounds = target.getBoundingClientRect();
  const target_x = target_bounds.x + (target_bounds.width / 2);
  const target_y = target_bounds.y + (target_bounds.height / 2);
  const result = document.elementFromPoint(target_x, target_y);
  assert_equals(result, target);
});
</script><body>
  <div>
      <div id="target" class="float"></div>
    </div>
<script>
test(() => {
  const target_bounds = target.getBoundingClientRect();
  const target_x = target_bounds.x + (target_bounds.width / 2);
  const target_y = target_bounds.y + (target_bounds.height / 2);
  const result = document.elementFromPoint(target_x, target_y);
  assert_equals(result, target);
});
</script><body>
  <div>
      <div id="target" class="float"></div>
    </div>
<script>
test(() => {
  const target_bounds = target.getBoundingClientRect();
  const target_x = target_bounds.x + (target_bounds.width / 2);
  const target_y = target_bounds.y + (target_bounds.height / 2);
  const result = document.elementFromPoint(target_x, target_y);
  assert_equals(result, target);
});
</script><body>
  <script><div>
      <div id="target" class="float"></div>
    </div>
<script>
test(() => {
  const target_bounds = target.getBoundingClientRect();
  const target_x = target_bounds.x + (target_bounds.width / 2);
  const target_y = target_bounds.y + (target_bounds.height / 2);
  const result = document.elementFromPoint(target_x, target_y);
  assert_equals(result, target);
});
</script><body>
  <div>
      <div id="target" class="float"></div>
    </div>
<script>
test(() => {
  const target_bounds = target.getBoundingClientRect();
  const target_x = target_bounds.x + (target_bounds.width / 2);
  const target_y = target_bounds.y + (target_bounds.height / 2);
  const result = document.elementFromPoint(target_x, target_y);
  assert_equals(result, target);
});
</script><body>
  <div>
      <div id="target" class="float"></div>
    </div>
<script>
test(() => {
  const target_bounds = target.getBoundingClientRect();
  const target_x = target_bounds.x + (target_bounds.width / 2);
  const target_y = target_bounds.y + (target_bounds.height / 2);
  const result = document.elementFromPoint(target_x, target_y);
  assert_equals(result, target);
});
</script>
</body></body></body><body>
  <div>
      <div id="target" class="float"></div>
    </div>
<script>
test(() => {
  const target_bounds = target.getBoundingClientRect();
  const target_x = target_bounds.x + (target_bounds.width / 2);
  const target_y = target_bounds.y + (target_bounds.height / 2);
  const result = document.elementFromPoint(target_x, target_y);
  assert_equals(result, target);
});
</script><body>
  <div>
      <div id="target" class="float"></div>
    </div>
<script>
test(() => {
  const target_bounds = target.getBoundingClientRect();
  const target_x = target_bounds.x + (target_bounds.width / 2);
  const target_y = target_bounds.y + (target_bounds.height / 2);
  const result = document.elementFromPoint(target_x, target_y);
  assert_equals(result, target);
});
</script><body>
  <div>
      <div id="target" class="float"></div>
    </div>
<script>
test(() => {
  const target_bounds = target.getBoundingClientRect();
  const target_x = target_bounds.x + (target_bounds.width / 2);
  const target_y = target_bounds.y + (target_bounds.height / 2);
  const result = document.elementFromPoint(target_x, target_y);
  assert_equals(result, target);
});
</script>
</body></body></body><body>
  <div>
      <div id="target" class="float"></div>
    </div>
<script>
test(() => {
  const target_bounds = target.getBoundingClientRect();
  const target_x = target_bounds.x + (target_bounds.width / 2);
  const target_y = target_bounds.y + (target_bounds.height / 2);
  const result = document.elementFromPoint(target_x, target_y);
  assert_equals(result, target);
});
</script><body>
  <div>
      <div id="target" class="float"></div>
    </div>
<script>
test(() => {
  const target_bounds = target.getBoundingClientRect();
  const target_x = target_bounds.x + (target_bounds.width / 2);
  const target_y = target_bounds.y + (target_bounds.height / 2);
  const result = document.elementFromPoint(target_x, target_y);
  assert_equals(result, target);
});
</script><body>
  <div>
      <div id="target" class="float"></div>
    </div>
<script>
test(() => {
  const target_bounds = target.getBoundingClientRect();
  const target_x = target_bounds.x + (target_bounds.width / 2);
  const target_y = target_bounds.y + (target_bounds.height / 2);
  const result = document.elementFromPoint(target_x, target_y);
  assert_equals(result, target);
});
</script>
</body></body></body><body>
  <div>
      <div id="target" class="float"></div>
    </div>
<script>
test(() => {
  const target_bounds = target.getBoundingClientRect();
  const target_x = target_bounds.x + (target_bounds.width / 2);
  const target_y = target_bounds.y + (target_bounds.height / 2);
  const result = document.elementFromPoint(target_x, target_y);
  assert_equals(result, target);
});
</script><link href="https://drafts.csswg.org/cssom-view/#dom-document-elementfrompoint"><body>
  <div>
      <div id="target" class="float"></div>
    </div>
<script>
test(() => {
  const target_bounds = target.getBoundingClientRect();
  const target_x = target_bounds.x + (target_bounds.width / 2);
  const target_y = target_bounds.y + (target_bounds.height / 2);
  const result = document.elementFromPoint(target_x, target_y);
  assert_equals(result, target);
});
</script>
</body><body>
  <div>
      <div id="target" class="float"></div>
    </div>
<script>
test(() => {
  const target_bounds = target.getBoundingClientRect();
  const target_x = target_bounds.x + (target_bounds.width / 2);
  const target_y = target_bounds.y + (target_bounds.height / 2);
  const result = document.elementFromPoint(target_x, target_y);
  assert_equals(result, target);
});
</script>
</body><body>
  <div>
      <div id="target" class="float"></div>
    </div>
<script><link>
test(() => {
  const target_bounds = target.getBoundingClientRect();
  const target_x = target_bounds.x + (target_bounds.width / 2);
  const target_y = target_bounds.y + (target_bounds.height / 2);
  const result = document.elementFromPoint(target_x, target_y);
  assert_equals(result, target);
});
</script>
</body><body>
  <div>
      <div id="target" class="float"></div>
    </div>
<script>
test(() => {
  const target_bounds = target.getBoundingClientRect();
  const target_x = target_bounds.x + (target_bounds.width / 2);
  const target_y = target_bounds.y + (target_bounds.height / 2);
  const result = document.elementFromPoint(target_x, target_y);
  assert_equals(result, target);
});
</script>
</body></body></body></body></body></body></body></body></body></body></body></body></body></body></body></script>
</body></script>
</body></script><div>
</div></body>
