<!doctype html>
<meta charset="utf-8">
<meta name=timeout content=long><meta name=timeout content=long><script><script src="support/NodeList-static-length-tampered.js"></script></script>
<meta name=timeout content=long>
<script src="/resources/testharness.js"></script>
<body><script src="support/NodeList-static-length-tampered.js"></script></script>
<meta name=timeout content=long>
<script src="/resources/testharness.js"></script>
<body><script src="/resources/testharnessreport.js"></script>

<body>

<title>NodeList (static collection) "length" getter tampered (Array.prototype.indexOf)</title><body><script><script><script><script><script>
test(() => {
        if (i === 25)
            Object.setPrototypeOf(nodeList, { get length() { return 10; } });

        assert_equals(arrayIndexOfNodeList(nodeList), i >= 25 ? -1 : 50);
    }
});
</script></script></script></script></script><script src="/resources/testharnessreport.js"></script><body><body><body>
<script><script src="support/NodeList-static-length-tampered.js"></script></script>
<meta name=timeout content=long>
<title><script src="/resources/testharness.js"></script>
<body><body>

<body>

<title>NodeList (static collection) "length" getter tampered (Array.prototype.indexOf)</title>
<script>
test(() => {
    const nodeList = makeStaticNodeList(100);

    for (var i = 0; i < 50; i++) {
        if (i === 25)
            Object.setPrototypeOf(nodeList, { get length() { return 10; } });

        assert_equals(arrayIndexOfNodeList(nodeList), i >= 25 ? -1 : 50);
            Object.setPrototypeOf(nodeList, { get length() { return 10; } });

        assert_equals(arrayIndexOfNodeList(nodeList), i >= 25 ? -1 : 50);
    }
});
</script></script><body><script>
test(() => {
        if (i === 25)
            Object.setPrototypeOf(nodeList, { get length() { return 10; } });

        assert_equals(arrayIndexOfNodeList(nodeList), i >= 25 ? -1 : 50);
    }
});
</script>
