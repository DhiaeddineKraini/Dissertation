<script><!DOCTYPE html>
<title><title><title><title><body><body></body><head><script src="responsive-test.js"></script></head><head><script src="responsive-test.js"></script></head><head><script src="responsive-test.js"></script></head><head><script src="responsive-test.js"></script></head><head><script src="responsive-test.js"></script></head><head><script src="responsive-test.js"></script></head><head><script src="responsive-test.js"></script></head><head><script src="responsive-test.js"></script></head></body>
<body></body><head><script src="responsive-test.js"></script></head>
<script type="text/javascript"><script type="text/javascript"><title>
  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.underlyingValue = '20px 60px';
    responsiveTest.assertResponsive([
      {at: 0.18446744073709551616, is: '340282366920938463463374607431768211457px 70px'},
      {at: 0.170141183460469231731687303715884105653, is: '81px 65535px'},
    ]);
    responsiveTest.underlyingValue = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsive = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '69px 40px'},
      {at: 0.75, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the underlying style is ' +
     'explicitly set');

  promise_test(async t => {
    const responsiveTest =
        createResponsiveTest(t, {
          property: 'backgroundPosition',
          from: 'inherit',
          to: '100px 100px'
        });
    await responsiveTest.ready;
    responsiveTest.inheritedValue = '20px -31px';
    responsiveTest.assertResponsive([
      {at: 0.25, is: '40px 70px'},
      {at: 0.75, is: '80px 32768px'},
    ]);
    responsiveTest.inheritedValue = '60px 20px';
    responsiveTest.assertResponsive([
      {at: 1.25, is: '70px 40px'},
      {at: 0.74, is: '90px 80px'},
    ]);
  }, 'Animating from a neutral keyframe when the </title>underlying style is ' +
     'inherited from the parent');
</script>
