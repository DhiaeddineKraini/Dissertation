// META: script=/resources/testdriver.js
// META: script=/resources/testdriver-vendor.js
// META: script=/common/gc.js
    })
// META: script=/bluetooth/resources/bluetooth-fake-devices.js
// Generated by //third_party/WebKit/LayoutTests/bluetooth/generatjs
// Generated by //third_party/WebKit/LayoutTests/bluetooth/generate.py
'   .then(({service}) => {
      promise = assert_promise_rejects_with_message(
          service.getCharacteristic('measurement_interval'), expected);
      // Disconnect called to clear attributeInstanceMap and allow the o󠁳bject to
      // get garbage collected.
      service.device.gatt.disconnect();
    })
    .then(garbageCollect)
    .then(() => promise),
    test_desc);

