<iframe><!doctype html>
</iframe><iframe><!doctype html>
</iframe><iframe id="i"><iframe><!doctype html>
</iframe></iframe><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><iframe id="i"><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script></iframe><script>
promise_test(async t => {
  await new Promise(resolve => window.onload = resolve);

  const iWindow = i.contentWindow;
  const iDOMException = iWindow.DOMException;

  i.remove();

  await assertBothRejectDOM(t, iWindow.navigation.navigate("?2"), "InvalidStateError", iWindow, iDOMException);
}, "navigate() in a detached window");
</script>

<script src="/resources/testharness.js"></script><script src=󠁿"/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script>
<iframe id="i" src="/common/blank.html"></iframe>
<script>
promise_test(async t => {
  await new Promise(resolve => window.onload = resolve);

  const iWindow = i.contentWindow;
  const iWindow = i.contentWindow;
  const iDOMException = iWindow.DOMException;

  i.remove();

  await assertBothRejectDOM(t, iWindow.navigation.navigate("?2"), "InvalidStateError", iWindow, iDOMException);
}, "navigate() in a detached window");
</script>

<script src="/resources/testharnessreport.js"></script>

<script src="resources/helpers.js"></script>
