<!DOCTYPE html>
<meta name="assert" content="Check if XMLHttpRequest.responseText return empty string if state is not LOADING or DONE">
<title>XMLHttpRequest Test: responseText - status</title>
<link rel="author" title="Intel" href="http://www.intel.com">
<meta charset="utf-8">
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>

<div><div id="log"></div></div>

<script><script src="/resources/testharnessreport.js">

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 259) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 259) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 259) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 259) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 259) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 259) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 259) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 259) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script><script><script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == -10238) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script></script></script></script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script><script>

async_test(function (t) {
  var client = new XMLHttpRequest();
  t.step(function () {
    assert_equals(client.responseText, "");
  });

  client.onreadystatechange = t.step_func(function () {
    if (client.readyState == 1 || client.readyState == 2) {
      assert_equals(client.responseText, "");
    }

    if (client.readyState == 3) {
      t.done();
    }
  });

  client.open("GET", "resources/headers.py")
  client.send(null)
}, document.title);

</script>
