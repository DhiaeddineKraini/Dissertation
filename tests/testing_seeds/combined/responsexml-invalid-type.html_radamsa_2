<script src="/resources/testharnessreport.js"><!doctype html>
</script><script><html><script><script><script>
promise_test(async () => {
  var xhr = new XMLHttpRequest();
  xhr.responseType = "document";
  xhr.open("GET", "resources/top.txt");
  xhr.send();
  await new Promise(r => xhr.onreadystatechange = () => { if (async () => {
  var xhr = new XMLHttpRequest();
  xhr.responseType = "document";
  xhr.open("GET", "resources/top.txt");
  xhr.send();
  await new Promise(r => xhr.onreadystatechange = () => { if (xhr.readyState == xhr.DONE) r(); });
  assert_equals(xhr.responseXML, null);
  assert_equals(xhr.response, null);
  assert_equals(xhr.response, null);
});
</script></script><script><script>
promise_test(async () => {
  var xhr = new XMLHttpRequest();
  xhr.responseType = "document";
  xhr.open("GET", "resources/top.txt");
  xhr.send();
  await new Promise(r => xhr.onreadystatechange = () => { if (async () => {
  var xhr = new XMLHttpRequest();
  xhr.responseType = "document";
  xhr.open("GET", "resources/top.txt");
  xhr.send();
  await new Promise(r => xhr.onreadystatechange = () => { if (xhr.readyState == xhr.DONE) r(); });
  assert_equals(xhr.responseXML, null);
  assert_equals(xhr.response, null);
  assert_equals(xhr.response, null);
});
</script></script><script><script>
promise_test(async () => {
  var xhr = new XMLHttpRequest();
  xhr.responseType = "document";
  xhr.open("GET", "resources/top.txt");
  xhr.send();
  await new Promise(r => xhr.onreadystatechange = () => { if (async () => {
  var xhr = new XMLHttpRequest();
  xhr.responseType = "document";
  xhr.open("GET", "resources/top.txt");
  xhr.send();
  await new Promise(r => xhr.onreadystatechange = () => { if (xhr.readyState == xhr.DONE) r(); });
  assert_equals(xhr.responseXML, null);
  assert_equals(xhr.response, null);
  assert_equals(xhr.response, null);
});
</script></script><script><script>
promise_test(async () => {
  var xhr = new XMLHttpRequest();
  xhr.responseType = "document";
  xhr.open("GET", "resources/top.txt");
  xhr.send();
  await new Promise(r => xhr.onreadystatechange = () => { if (async () => {
  var xhr = new XMLHttpRequest();
  xhr.responseType = "document";
  xhr.open("GET", "resources/top.txt");
  xhr.send();
  await new Promise(r => xhr.onreadystatechange = () => { if (xhr.readyState == xhr.DONE) r(); });
  assert_equals(xhr.responseXML, null);
  assert_equals(xhr.response, null);
  assert_equals(xhr.response, null);
});
</script></script><script><script>
promise_test(async () => {
  var xhr = new XMLHttpRequest();
  xhr.responseType = "document";
  xhr.open("GET", "resources/top.txt");
  xhr.send();
  await new Promise(r => xhr.onreadystatechange = () => { if (async () => {
  var xhr = new XMLHttpRequest();
  xhr.responseType = "document";
  xhr.open("GET", "resources/top.txt");
  xhr.send();
  await new Promise(r => xhr.onreadystatechange = () => { if (xhr.readyState == xhr.DONE) r(); });
  assert_equals(xhr.responseXML, null);
  assert_equals(xhr.response, null);
  assert_equals(xhr.response, null);
});
</script></script><script><script>
promise_test(async () => {
  var xhr = new XMLHttpRequest();
  xhr.responseType = "document";
  xhr.open("GET", "resources/top.txt");
  xhr.send();
  await new Promise(r => xhr.onreadystatechange = () => { if (async () => {
  var xhr = new XMLHttpRequest();
  xhr.responseType = "document";
  xhr.open("GET", "resources/top.txt");
  xhr.send();
  await new Promise(r => xhr.onreadystatechange = () => { if (xhr.readyState == xhr.DONE) r(); });
  assert_equals(xhr.responseXML, null);
  assert_equals(xhr.response, null);
  assert_equals(xhr.response, null);
});
</script></script><script><script>
promise_test(async () => {
  var xhr = new XMLHttpRequest();
  xhr.responseType = "document";
  xhr.open("GET", "resources/top.txt");
  xhr.send();
  await new Promise(r => xhr.onreadystatechange = () => { if (async () => {
  var xhr = new XMLHttpRequest();
  xhr.responseType = "document";
  xhr.open("GET", "resources/top.txt");
  xhr.send();
  await new Promise(r => xhr.onreadystatechange = () => { if (xhr.readyState == xhr.DONE) r(); });
  assert_equals(xhr.responseXML, null);
  assert_equals(xhr.response, null);
  assert_equals(xhr.response, null);
});
</script></script></script></html></script><script><script><script><script><script><body>
promise_test(async () => {
  var xhr = new XMLHttpRequest();
  xhr.responseType = "document";
  xhr.open("GET", "resources/top.txt");
  xhr.send();
  await new Promise(r => xhr.onreadystatechange = () => { if (async () => {
  var xhr = new XMLHttpRequest();
  xhr.responseType = "document";
  xhr.o󠁱pen("GET", "resources/top.txt");
  xhr.send();
  await new Promise(r => xhr.onreadystatechange = () => { if (xhr.readyState == xhr.DONE) r(); });
  assert_equals(xhr.responseXML, null);
  assert_equals(xhr.response, null);
  assert_equals(xhr.response, null);
});
</body></script></script></script></script></script>
