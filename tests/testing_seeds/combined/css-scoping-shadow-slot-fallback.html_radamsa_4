<!DOCTYPE html>
<html>
<head>
    <title><div class="red">CSS Scoping Module Level 1 - slot element without distributed nodes must render its fallback rel="match" href="reference/green-box.html" />
</div></head>
<body>
    <style>
    my-host {
        display: block;
        background-color: red;
        width: 100px;
        height: 50px;
    }
    .red {
        background-color: red;
    }
    .green {
        background-color: green;
    }
    div {
        width: 100px;
        height: 50px;
    }
    slot {
        border: solid 10px red;
    }
    </style><style>
    my-host {
        display: block;
        background-color: red;
        width: 100px;
        height: 50px;
    }
    .red {
        background-color: red;
    }
    .green {
        background-color: green;
    }
    div {
        width: 100px;
        height: 50px;
    }
    slot {
        border: solid 10px red;
    }
    </style>
    <p>Test passes if you see a single 100px by 100px green box below.</p>
    <my-host></my-host>
    <div class="red"><slot><div class="green"></div><div class="green"></div></slot></div><div class="red"><slot><div class="green"></div><div class="green"></div></slot></div><div class="red"><slot><div class="green"></div><div class="green"></div></slot></div><html>
<head>
    <title><div class="red">CSS Scoping Module Level 1 - slot element without distributed nodes must render its fallback rel="match" href="reference/green-box.html" />
</div></head>
<body>
    <style>
    my-host {
        display: block;
        background-color: red;
        width: 100px;
        height: 50px;
    }
    .red {
        background-color: red;
    }
    .green {
        background-color: green;
    }
    div {
        width: 100px;
        height: 50px;
    }
    slot {
        border: solid 10px red;
    }
    </style><style>
    my-host {
        display: block;
        background-color: red;
        width: 100px;
        height: 50px;
    }
    .red {
        background-color: red;
    }
    .green {
        background-color: green;
    }
    div {
        width: 100px;
        height: 50px;
    }
    slot {
        border: solid 10px red;
    }
    </style>
    <p>Test passes if you see a single 100px by 100px green box below.</p>
    <my-host></my-host>
    <div class="red"><slot><div class="green"></div><div class="green"></div></slot></div><div class="red"><slot><div class="green"></div><div class="green"></div></slot></div><div class="red"><slot><div class="green"></div><div class="green"></div></slot></div><html>
<head>
    <title><div class="red">CSS Scoping Module Level 1 - slot element without distributed nodes must render its fallback rel="match" href="reference/green-box.html" />
</div></head>
<body>
    <style>
    my-host {
        display: block;
        background-color: red;
        width: 100px;
        height: 50px;
    }
    .red {
        background-color: red;
    }
    .green {
        background-color: green;
    }
    div {
        width: 100px;
        height: 50px;
    }
    slot {
        border: solid 10px red;
    }
    </style><style>
    my-host {
        display: block;
        background-color: red;
        width: 100px;
        height: 50px;
    }
    .red {
        background-color: red;
    }
    .green {
        background-color: green;
    }
    div {
        width: 100px;
        height: 50px;
    }
    slot {
        border: solid 10px red;
    }
    </style>
    <p>Test passes if you see a single 100px by 100px green box below.</p>
    <my-host></my-host>
    <div class="red"><slot><div class="green"></div><div class="green"></div></slot></div><div class="red"><slot><div class="green"></div><div class="green"></div></slot></div><div class="red"><slot><div class="green"></div><div class="green"></div></slot></div><html>
<head>
    <title><div class="red">CSS Scoping Module Level 1 - slot element without distributed nodes must render its fallback rel="match" href="reference/green-box.html" />
</div></head>
<body>
    <style>
    my-host {
        display: block;
        background-color: red;
        width: 100px;
        height: 50px;
    }
    .red {
        background-color: red;
    }
    .green {
        background-color: green;
    }
    div {
        width: 100px;
        height: 50px;
    }
    slot {
        border: solid 10px red;
    }
    </style><style>
    my-host {
        display: block;
        background-color: red;
        width: 100px;
        height: 50px;
    }
    .red {
        background-color: red;
    }
    .green {
        background-color: green;
    }
    div {
        width: 100px;
        height: 50px;
    }
    slot {
        border: solid 10px red;
    }
    </style>
    <p>Test passes if you see a single 100px by 100px green box below.</p>
    <my-host></my-host>
    <div class="red"><slot><div class="green"></div><div class="green"></div></slot></div><div class="red"><slot><div class="green"></div><div class="green"></div></slot></div><div class="red"><slot><div class="green"></div><div class="green"></div></slot></div>
    <script>

    try {
        var shadowHost = document.querySelector('my-host');
        shadowRoot = shadowHost.attachShadow({mode: 'open'});
        shadowRoot.innerHTML = '<slot style="border: solid 10px red;">'
            + '<div style="width: 100%; height: 100%; background-color: green;"></div></slot>';
    } catch (exception) {
        document.body.appendChild(document.createTextNode(exception));
    }

    </script>
</body>
</html><script>

    try {
        var shadowHost = document.querySelector('my-host');
        shadowRoot = shadowHost.attachShadow({mode: 'open'});
        shadowRoot.innerHTML = '<slot style="border: solid 10px red;">'
            + '<div style="width: 100%; height: 100%; background-color: green;"></div></slot>';
    } catch (exception) {
        document.body.appendChild(document.createTextNode(exception));
    }

    </script>
</body>
</html><script>

    try {
        var shadowHost = document.querySelector('my-host');
        shadowRoot = shadowHost.attachShadow({mode: 'open'});
        shadowRoot.innerHTML = '<slot style="border: solid 10px red;">'
            + '<div style="width: 100%; height: 100%; background-color: green;"></div></slot>';
    } catch (exception) {
        document.body.appendChild(document.createTextNode(exception));
    }

    </script>
</body>
</html><script>

    try {
        var shadowHost = document.querySelector('my-host');
        shadowRoot = shadowHost.attachShadow({mode: 'open'});
        shadowRoot.innerHTML = '<slot style="border: solid 10px red;">'
            + '<div style="width: 100%; height: 100%; background-color: green;"></div></slot>';
    } catch (exception) {
        document.body.appendChild(document.createTextNode(exception));
    }

    </script>
</body>
</html>
