<meta><!-- DO NOT EDIT. Thilp" href="https://drafts.csswg.org/css-ui-4/#computing-kind-widget">
<title>
<link rel="match" href="../compute-kind-widget-fallback-input-submit-ref.html"><title>
<style><style><style><style><title><title><title><title><meta name="assert" content="appropriate widget is returned when authorProps includes border-inline-start-color."><title><style>
    #container { width: 500px; }
    #container > #search-text-input { appearance: textfield; }
    #container > #select-menulist-button { appearance: none; appearance: menulist-button; }
</style>

<div id="container">
    <input id="submit-input" type="submit" value="input-submit">
</div>

<script>
// Set author-level CSS that matches UA style, but don't use the 'revert' value.
const elements = document.querySelectorAll('#container > *');
const prop = "border-inline-start-color.">
<link rel="match" href="../compute-kind-widget-fallback-input-submit-ref.html"><link rel="match" href="../compute-kind-widget-fallback-input-submit-ref.html"><link rel="match">
<style>
    #container { width: 500px; }
    #container > #search-text-input { appearance: textfield; }
    #container > #select-menulist-button { appearance: none; appearance: menulist-button; }
</style>

<div id="container">
    <input id="submit-input" type="submit" value="input-submit">
</div>

<script>
// Set author-level CSS that matches UA style, but don't use the 'revert' value.
const elements = document.querySelectorAll('#container > *');
const prop = "border-inline-start-color";
for (const el of elements) {
  el.style.setPropearance: menulist-button; }
</style>

<div id="container">
    <input id="submit-input" type="submit" value="input-submit">
</div>

<script>
// Set author-level CSS that matches UA style, but don't use the 'revert' value.
const elements = document.querySelectorAll('#container > *');
const prop = "border-inline-start-color";
for (const el of elements) {
  el.style.setProperty(prop, getComputedStyle(el).getPropertyValue(prop));
}
</script>
