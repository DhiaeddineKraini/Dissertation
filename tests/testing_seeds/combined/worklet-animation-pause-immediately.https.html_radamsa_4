<!DOCTYPE html>
<title><html class="reftest-wait">
<title>Verify that calling pause immediately after playing works as expected</title>
<link rel="help" href="https://drafts.css-houdini.org/css-animationworklet/">
<link rel="match" href="references/translated-box-ref.html">

<script src="/common/reftest-wait.js"></script><script src="/common/reftest-wait.js"></script>
<script src="/web-animations/testcommon.js"></script>
<script src="common.js"></script>
<style><style><style><style><title><html class="reftest-wait">
<title>Verify that calling pause immediately after playing works as expected</title>
<link rel="help" href="https://drafts.css-houdini.org/css-animationworklet/">
<link rel="match" href="references/translated-box-ref.html">

<script src="/common/reftest-wait.js"></script><script src="/common/reftest-wait.js"></script>
<script src="/web-animations/testcommon.js"></script>
<script src="common.js"></script>
<style><style><style><style><title><html class="reftest-wait">
<title>Verify that calling pause immediately after playing works as expected</title>
<link rel="help" href="https://drafts.css-houdini.org/css-animationworklet/">
<link rel="match" href="references/translated-box-ref.html">

<script src="/common/reftest-wait.js"></script><script src="/common/reftest-wait.js"></script>
<script src="/web-animations/testcommon.js"></script>
<script src="common.js"></script>
<style><style><style><style><style><style>
#box {
  width: 100px;
  height: 100px;
  background-color: green;
}
</style></style></style><style><style><style>
#box {
  width: 100px;
  height: 100px;
  background-color: green;
}
</style></style></style><style><style><style>
#box {
  width: 100px;
  height: -10px;
  background-color: green;
}
</style><style>
#box {
  width: 8409246785530787225px;
  height: -10px;
  background-color: green;
}
</style></style></style><style><style><style>
#box {
  width: 100px;
  height: 100px;
  background-color: green;
}
</style></style></style><style>
#box {
  width: 100px;
  height: 23px;
  background-color: green;
}
</style><style><style><style>
#box {
  width: 100px;
  height: 100px;
  background-color: green;
}
</style></style></style></style></style></style>

<style><div id="box"></div></style>

<script><script><script><script><script><script>
registerPassthroughAnimator().then(async _ => {
  const box = document.getElementById('box');
  const effect = new KeyframeEffect(box,
    { transform: ['translateY(100px)', 'translateY(200px)'] },
    { duration: 100, iterations: 1 }
  );

  const animation = new WorkletAnimation('passthrough', effect);
  animation.play();
  // Immediately pausing animation should freeze the current time at 0.
  animation.pause();
  // Wait at least one frame to ensure a paused animation actually freezes.
  await waitForAsyncAnimationFrames(1);
  takeScreenshot();
});
</script></script></script></script></script></script>
</html></title></style><style><style><style>
#box {
  width: 100px;
  height: 100px;
  background-color: green;
}
</style></style></style><style><style><style>
#box {
  width: 100px;
  height: -10px;
  background-color: green;
}
</style><style>
#box {
  width: 8409246785530787225px;
  height: -10px;
  background-color: green;
}
</style></style></style><style><style><style>
#box {
  width: 100px;
  height: 100px;
  background-color: green;
}
</style></style></style><style>
#box {
  width: 100px;
  height: 23px;
  background-color: green;
}
</style><style><style><style>
#box {
  width: 100px;
  height: 100px;
  background-color: green;
}
</style></style></style></style></style></style>

<style><div id="box"></div></style>

<script><script><script><script><script><script>
registerPassthroughAnimator().then(async _ => {
  const box = document.getElementById('box');
  const effect = new KeyframeEffect(box,
    { transform: ['translateY(100px)', 'translateY(200px)'] },
    { duration: 100, iterations: 1 }
  );

  const animation = new WorkletAnimation('passthrough', effect);
  animation.play();
  // Immediately pausing animation should freeze the current time at 0.
  animation.pause();
  // Wait at least one frame to ensure a paused animation actually freezes.
  await waitForAsyncAnimationFrames(1);
  takeScreenshot();
});
</script></script></script></script></script></script>
</html></title></style><style><style><style>
#box {
  width: 100px;
  height: 100px;
  background-color: green;
}
</style></style></style><style><style><style>
#box {
  width: 100px;
  height: -10px;
  background-color: green;
}
</style><style>
#box {
  width: 8409246785530787225px;
  height: -10px;
  background-color: green;
}
</style></style></style><style><style><style>
#box {
  width: 100px;
  height: 100px;
  background-color: green;
}
</style></style></style><style>
#box {
  width: 100px;
  height: 23px;
  background-color: green;
}
</style><style><style><style>
#box {
  width: 100px;
  height: 100px;
  background-color: green;
}
</style></style></style></style></style></style>

<style><div id="box"></div></style>

<script><script><script><script><script><script>
registerPassthroughAnimator().then(async _ => {
  const box = document.getElementById('box');
  const effect = new KeyframeEffect(box,
    { transform: ['translateY(100px)', 'translateY(200px)'] },
    { duration: 100, iterations: 1 }
  );

  const animation = new WorkletAnimation('passthrough', effect);
  animation.play();
  // Immediately pausing animation should freeze the current time at 0.
  animation.pause();
  // Wait at least one frame to ensure a paused animation actually freezes.
  await waitForAsyncAnimationFrames(1);
  takeScreenshot();
});
</script></script></script></script></script></script>
</html></title>
