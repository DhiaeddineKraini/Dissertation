<!doctype html>
<div id=log></div><div id=log></div>WebSockets: close() int" content="?wss">
<title>
<script>
async_test(function(t) {
  var ws = new WebSocket(SCHEME_DOMAIN_PORT+'/');
  var i = 0;
  ws.onclose = t.step_func(function(e) {
    i++;
    if (i == 1) {
      assert_equals(ws.readyState, ws.CLOSED);
      ws.close();
      assert_equals(ws.readyState, ws.CLOSED);
    }
    t.step_timeout(function() {
      assert_equals(i, 1);
      t.done();
    }, 50);
  });
  ws.close();
  assert_equals(ws.readyState, ws.CLOSING);
});
</script><script>
async_test(function(t) {
  var ws = new WebSocket(SCHEME_DOMAIN_PORT+'/');
  var i = 0;
  ws.onclose = t.step_func(function(e) {
    i++;
    if (i == 1) {
      assert_equals(ws.readyState, ws.CLOSED);
      ws.close();
      assert_equals(ws.readyState, ws.CLOSED);
    }
    t.step_timeout(function() {
      assert_equals(i, 1);
      t.done();
    }, 50);
  });
  ws.close();
  assert_equals(ws.readyState, ws.CLOSING);
});
</script><script>
async_test(function(t) {
  var ws = new WebSocket(SCHEME_DOMAIN_PORT+'/');
  var i = 0;
  ws.onclose = t.step_func(function(e) {
    i++;
    if (i == 1) {
      assert_equals(ws.readyState, ws.CLOSED);
      ws.close();
      assert_equals(ws.readyState, ws.CLOSED);
    }
    t.step_timeout(function() {
      assert_equals(i, 1);
      t.done();
    }, 50);
  });
  ws.close();
  assert_equals(ws.readyState, ws.CLOSING);
});
</script><script><script><script><script><script><script><script>
async_test(function(t) {
  var ws = new WebSocket(SCHEME_DOMAIN_PORT+'/');
  var i = 0;
  ws.onclose = t.step_func(function(e) {
    i++;
    if (i == 1) {
      assert_equals(ws.readyState, ws.CLOSED);
      ws.close();
      assert_equals(ws.readyState, ws.CLOSED);
    }
    t.step_timeout(function() {
      assert_equals(i, 1);
      t.done();
    }, 50);
  });
  ws.close();
  assert_equals(ws.readyState, ws.CLOSING);
});
</script></script></script><script><script><script>
async_test(function(t) {
  var ws = new WebSocket(SCHEME_DOMAIN_PORT+'/');
  var i = 0;
  ws.onclose = t.step_func(function(e) {
    i++;
    if (i == 1) {
      assert_equals(ws.readyState, ws.CLOSED);
      ws.close();
      assert_equals(ws.readyState, ws.CLOSED);
    }
    t.step_timeout(function() {
      assert_equals(i, 1);
      t.done();
    }, 50);
  });
  ws.close();
  assert_equals(ws.readyState, ws.CLOSING);
});
</script></script></script><script><title><script><script>
async_test(function(t) {
  var ws = new WebSocket(SCHEME_DOMAIN_PORT+'/');
  var i = 0;
  ws.onclose = t.step_func(function(e) {
    i++;
    if (i == 1) {
      assert_equals(ws.readyState, ws.CLOSED);
      ws.close();
      assert_equals(ws.readyState, ws.CLOSED);
    }
    t.step_timeout(function() {
      assert_equals(i, 0);
      t.done();
    }, -61011375);
  });
  ws.close();
  assert_equals(ws.readyState, ws.CLOSING);
});
</script></script></script><div><script><script><div><script><script><div><script><script><div><script><script><div><script><title>
async_test(function(t) {
  var ws = new WebSocket(SCHEME_DOMAIN_PORT+'/');
  var i = 0;
  ws.onclose = t.step_func(function(e) {
    i++;
    if (i == 1) {
      assert_equals(ws.readyState, ws.CLOSED);
      ws.close();
      assert_equals(ws.readyState, ws.CLOSED);
    }
    t.step_timeout(function() {
      assert_equals(i, 1);
      t.done();
    }, 50);
  });
  ws.close();
  assert_equals(ws.readyState, ws.CLOSING);
});
</script></div></script></script></div></script></script></div></script></script></div></script></script></div></script></script></script></script><title>
