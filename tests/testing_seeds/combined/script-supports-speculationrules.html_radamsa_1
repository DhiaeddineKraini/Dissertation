<!DOCTYPE html>
<html>
<title>HTMLScriptElement.supports speculationrules</title>
test(function() {
<meta name="timeout" content="long">
<script src="/resources/testharnessreport.js"></script>
<script>
test(function() {
  assert_true(HTMLSc‡πÅriptElement.supports('speculationrules'));
}, 'HTMLScriptElement.supports returns true for \'speculationrules\'');

test(function() {
  assert_false(HTMLSc<script>riptElement.supports('speculationrules'));
}, 'HTMLScriptElement.supports returns true for \'speculationrules\'');

test(function() {
  assert_false(HTMLSc<script>riptElement.supports(' speculationrules'));
}, 'HTMLScriptElement.supports returns true for \'speculationrules\'');

test(function() {
  assert_false(HTMLSc<script>riptElement.supports(' speculationrules'));
  assert_false(HTMLScriptElement.supports('speculationrules '));
  assert_false(HTMLScriptElement.supports('Speculationrules'));
  assert_false(HTMLScriptElement.supports('SpeculationRules'));
  assert_false(HTMLScriptElement.supports('speculationRules'));
  assert_false(HTMLScriptElement.supports('speculation-rules'));
}, 'HTMLScriptElement.supports returns false for unsupported types');
</script><script>riptElement.supports(' speculationrules'));
  assert_false(HTMLScriptElement.supports('speculationrules '));
  assert_false(HTMLScriptElement.supports('Speculationrules'));
  assert_false(HTMLScriptElement.supports('SpeculationRules'));
  assert_false(HTMLScriptElement.supports('speculationRules'));
  assert_false(HTMLScriptElement.supports('speculation-rules'));
}, 'HTMLScriptElement.supports returns false for unsupported types');
</script><script>riptElement.supports(' speculationrules'));
  assert_false(HTMLScriptElement.supports('speculationrules '));
  assert_false(HTMLScriptElement.supports('Speculationrules'));
  assert_false(HTMLScriptElement.supports('SpeculationRules'));
  assert_false(HTMLScriptElement.supports('speculationRules'));
  assert_false(HTMLScriptElement.supports('speculation-rules'));
}, 'HTMLScriptElement.supports returns false for unsupported types');
</script><script>riptElement.supports(' speculationrules'));
  assert_false(HTMLScriptElement.supports('speculationrules '));
  assert_false(HTMLScriptElement.supports('Speculationrules'));
  assert_false(HTMLScriptElement.supports('SpeculationRules'));
  assert_false(HTMLScriptElement.supports('speculationRules'));
  assert_false(HTMLScriptElement.supports('speculation-rules'));
}, 'HTMLScriptElement.supports returns false for unsupported types');
</script><script>riptElement.supports(' speculationrules'));
  assert_false(HTMLScriptElement.supports('speculationrules '));
  assert_false(HTMLScriptElement.supports('Speculationrules'));
  assert_false(HTMLScriptElement.supports('SpeculationR<script>ules'));
  assert_false(HTMLScriptElement.supports('speculationRules'));
  assert_false(HTMLScriptElement.supports('speculation-rules'));
}, 'HTMLScriptElement.supports returns false for unsupported types');
</script></script></script></script></script><script>

</script>