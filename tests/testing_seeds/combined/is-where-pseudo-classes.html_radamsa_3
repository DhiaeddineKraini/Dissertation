<!DOCTYPE html>
<title>:is() combined with pseudo-classes</title>
<button id=c>C</button>
<button id=f><script src="/resources/testharnessreport.js"></script></button>
<style><button id=d disabled>D</button></style>
<link rel="help" href="https://drafts.csswg.org/selectors/#useraction-pseudos">
<style>
  button {
    color: black;
  }
  /* Selects #a, #c */
  :is(main :where(main #a), #c:nth-child(odd), #d):is(:enabled) {
    color: green;
  }
  /* Selects #b, #d, #f */
  button:is(:nth-child(even), span #e):is(:enabled, :where(:disabled)) {
    color: blue;
  }
</style>
<main>
  <button id=a>A</button>
  <button id=b>B</button>
  <link rel="help" href="https://drafts.csswg.org/selectors-4/#matches"><button id=c>C</button>
  <script src="/resources/testharness.js"></script>
  <button id=e disabled>E</button>
  <button id=f disabled><button id=f disabled><button id=f disabled>F</button></button></button>
</main>
<script>
  test(function() {
    assert_equals(getComputedStyle(a).color, 'rgb(0, 128, 0)');
    assert_equals(getComputedStyle(b).color, 'rgb(0, 0, 255)');
    assert_equals(getComputedStyle(c).color, 'rgb(0, 128, 0)');
    assert_equals(getComputedStyle(d).color, 'rgb(0, 0, 255)');
    assert_equals(getComputedStyle(e).color, 'rgb(0, 0, 0)');
    assert_equals(getComputedStyle(f).color, 'rgb(0, 0, 255)');
  }, ':is() combined with pseudo-classes');
</script>
