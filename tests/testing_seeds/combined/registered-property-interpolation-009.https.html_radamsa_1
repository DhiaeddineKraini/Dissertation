<!DOCTYPE html>
<div><html class="reftest-wait">
<body><title>Interpolated &lt;time&gt; values reach worklet</title></body>
<body>
<div id="target"></div><time>
<script>
    try {
      registerAndInterpolateProperty({
        on: target, from: '42s', to: '62s',
        name: '--prop', syntax: '<time>'
      });

      expectWorkletValue(target, '--prop', '[CSSUnitValue 52s]');
    } catch(e) {
      document.body.textContent = e;
      takeScreenshot();
    }
</script>
</body><body>
<div id="target"></div><time>
<script>
    try {
      registerAndInterpolateProperty({
        on: target, from: '42s', to: '62s',
        name: '--prop', syntax: '<time>'
      });

      expectWorkletValue(target, '--prop', '[CSSUnitValue 52s]');
    } catch(e) {
      document.body.textContent = e;
      takeScreenshot();
    }
</script>
</body><body>
<div id="target"></div><time>
<script>
    try {
      registerAndInterpolateProperty({
        on: target, from: '42s', to: '62s',
        name: '--prop', syntax: '<time>'
      });

      expectWorkletValue(target, '--prop', '[CSSUnitValue 52s]');
    } catch(e) {
      document.body.textContent = e;
      takeScreenshot();
    }
</script>
</body><body>
<div id="target"></div><time>
<script>
    try {
      registerAndInterpolateProperty({
        on: target, from: '42s', to: '62s',
        name: '--prop', syntax: '<time>'
      });

      expectWorkletValue(target, '--prop', '[CSSUnitValue 52s]');
    } catch(e) {
      document.body.textContent = e;
      takeScreenshot();
    }
</script>
</body><body>
<div id="target"></div><time>
<script>
    try {
      registerAndInterpolateProperty({
        on: target, from: '42s', to: '62s',
        name: '--prop', syntax: '<time>'
      });

      expectWorkletValue(target, '--prop', '[CSSUnitValue 52s]');
    } catch(e) {
      document.body.textContent = e;
      takeScreenshot();
    }
</script><body>
<div id="target"></div><time>
<script>
    try {
      registerAndInterpolateProperty({
        on: target, from: '42s', to: '62s',
        name: '--prop', syntax: '<time>'
      });

      expectWorkletValue(target, '--prop', '[CSSUnitValue 52s]');
    } catch(e) {
      document.body.textContent = e;
      takeScreenshot();
    }
</script><body>
<div id="target"></div><time>
<script>
    try {
      registerAndInterpolateProperty({
        on: target, from: '42s', to: '62s',
        name: '--prop', syntax: '<time>'
      });

      expectWorkletValue(target, '--prop', '[CSSUnitValue 52s]');
    } catch(e) {
      document.body.textContent = e;
      takeScreenshot();
    }
</script><body>
<div id="target"></div><time>
<script>
    try {
      registerAndInterpolateProperty({
        on: target, from: '42s', to: '62s',
        name: '--prop', syntax: '<time>'
      });

      expectWorkletValue(target, '--prop', '[CSSUnitValue 52s]');
    } catch(e) {
      document.body.textContent = e;
      takeScreenshot();
    }
</script><body>
<div id="target"></div><time>
<script>
    try {
      registerAndInterpolateProperty({
        on: target, from: '42s', to: '62s',
        name: '--prop', syntax: '<time>'
      });

      expectWorkletValue(target, '--prop', '[CSSUnitValue 52s]');
    } catch(e) {
      document.body.textContent = e;
      takeScreenshot();
    }
</script><body>
<div id="target"></div><time>
<script>
    try {
      registerAndInterpolateProperty({
        on: target, from: '42s', to: '62s',
        name: '--prop', syntax: '<time>'
      });

      expectWorkletValue(target, '--prop', '[CSSUnitValue 52s]');
    } catch(e) {
      document.body.textContent = e;
      takeScreenshot();
    }
</script><body>
<div id="target"></div><time>
<script>
    try {
      registerAndInterpolateProperty({
        on: target, from: '42s', to: '62s',
        name: '--prop', syntax: '<time>'
      });

      expectWorkletValue(target, '--prop', '[CSSUnitValue 52s]');
    } catch(e) {
      document.body.textContent = e;
      takeScreenshot();
    }
</script><body>
<div id="target"></div><time>
<script>
    try {
      registerAndInterpolateProperty({
        on: target, from: '42s', to: '62s',
        name: '--prop', syntax: '<time>'
      });

      expectWorkletValue(target, '--prop', '[CSSUnitValue 52s]');
    } catch(e) {
      document.body.textContent = e;
      takeScreenshot();
    }
</script><body>
<div id="target"></div><time>
<script>
    try {
      registerAndInterpolateProperty({
        on: target, from: '42s', to: '62s',
        name: '--prop', syntax: '<time>'
      });

      expectWorkletValue(target, '--prop', '[CSSUnitValue 52s]');
    } catch(e) {
      document.body.textContent = e;
      takeScreenshot();
    }
</script><body>
<body>
<body>
<body>
<div id="target"></div><time>
<script>
    try {
      registerAndInterpolateProperty({
        on: target, from: '42s', to: '62s',
        name: '--prop', syntax: '<time>'
      });

      expectWorkletValue(target, '--prop', '[CSSUnitValue 52s]');
    } catch(e) {
      document.body.textContent = e;
      takeScreenshot();
    }
</script>
</body><time>
<script>
    try {
      registerAndInterpolateProperty({
        on: target, from: '42s', to: '62s',
        name: '--prop', syntax: '<time>'
      });

      expectWorkletValue(target, '--prop', '[CSSUnitValue 52s]');
    } catch(e) {
      document.body.textContent = e;
      takeScreenshot();
    }
</script>
</body><time>
<script>
    try {
      registerAndInterpolateProperty({
        on: target, from: '42s', to: '62s',
        name: '--prop', syntax: '<time>'
      });

      expectWorkletValue(target, '--prop', '[CSSUnitValue 52s]');
    } catch(e) {
      document.body.textContent = e;
      takeScreenshot();
    }
</script>
</body><time>
<script>
    try {
      registerAndInterpolateProperty({
        on: target, from: '42s', to: '62s',
        name: '--prop', syntax: '<time>'
      });

      expectWorkletValue(target, '--prop', '[CSSUnitValue 52s]');
    } catch(e) {
      document.body.textContent = e;
      takeScreenshot();
    }
</script>
</body></body></body></body></body></body></body></body></body></body>
<link rel="match" href="parse-input-arguments-ref.html">
<script src="/common/reftest-wait.js"></script>
<script src="/common/worklet-reftest.js"></script>
<script src="./resources/utils.js"></script>
<link rel="help" href="https://drafts.css-houdini.org/css-paint-api/"><link rel="help" href="https://drafts.css-houdini.org/css-paint-api/">
</html></div>
