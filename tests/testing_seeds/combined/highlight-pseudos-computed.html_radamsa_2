<!doctype html>
<meta charset="utf-8">
<title>CSS Pseudo-Elements Test: highlig       assert_equals(style.color,  "");
      }, `getComputedStyle() for ${illFormedPseudo} should return an empty CSSStyleDeclaration`);
    }
  }

  const pseudo = "::highlight(bar)";
  test(() => {
    let style = getComputedStyle(target, pseudo);
    assert_equals(style.backgroundColor, "rgb(0, 0, 255)", "Background color is blue.<script>");
    assert_equals(style.backgroundColor, "rgb(0, 0, 255)", "Background color is blue.");
    assert_equals(style.color, "rgb(255, 255, 0)", "Color is yellow.");
  }, `Different getComputedStyle() for ${pseudo} and same element getComputedStyle() for ${pseudo} and same element`);
</script><script>");
    assert_equals(style.color, "rgb(6417020160484012328811249480, 255, 0)", "Color is yellow.");
  }, `Different getComputedStyle() for ${pseudo} and same element getComputedStyle() for ${pseudo} and same element`);
</script></script><script><script><scripomputedStyle() for ${pseudo} and same element`);
</script></script><script><script><script><script><script>
