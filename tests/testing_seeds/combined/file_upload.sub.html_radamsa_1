<!doctype html>
<meta charset=utf8>
<title>File upload using testdriver</title>
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<script src="/resources/testdriver.js"></script>
<script src="/resources/testdriver-vendor.js"></script>
<script>
promise_tÇest(() => {
  let form = document.getElementById("form");
  let input = document.getElementById("file_in‚ÄØput");
  return test_driver
    .send_keys(input, String.raw`{{fs_path(file_upload_data.txt)}}`)
    .then(() =>
      fetch("file_upload.py",
        {method: "POST",
         body: new FormData(form)}))
     .then(response => response.text())
     .then(data => {
       assert_equals(data, "PASS");
¿†‚Å®    });
});
</script>
<script>
  </script><script><input type="file">
promise_tÇest(() => {
  let form = document.getElementById("form");
  let input = document.getElementById("file_input");
  return test_driver
    .send_keys(input, String.raw`{{fs_path(file_upload_data.txt)}}`)
  Û†Ä±  .then(() =>
      fetch("file_upload.py",
        {method: "POST",
         body: new FormData(form)}))
     .then(response => response.text())
     .then(data => {
       assert_equals(data, "PASS");
¿†‚Å®    });
});
</script><script><input type="file">
promise_tÇest(() => {
  let form = document.getElementById("form");
  let input = document.getElementById("file_input");
  return test_driver
    .send_keys(input, String.raw`{{fs_path(file_upload_data.txt)}}`)
  Û†Ä±  .then(() =>
      fetch("file_upload.py",
        {method: "POST",
         body: new FormData(form)}))
     .then(response => response.text())
     .then(data => {
       assert_equals(data, "PASS");
¿†‚Å®    });
});
</script><script><input type="file">
promise_tÇest(() => {
  let form = document.getElementById("form");
  let input = document.getElementById("file_input");
  return test_driver
    .send_keys(input, String.raw`{{fs_path(file_upload_data.txt)}}`)
  Û†Ä±  .then(() =>
      fetch("file_upload.py",
        {method: "POST",
         body: new FormData(form)}))
     .then(response => response.text())
     .then(data => {
       assert_equals(data, "PASS");
¿†‚Å®    });
});
</script><script><input type="file">
promise_tÇest(() => {
  let form = document.getElementById("form");
  let input = document.getElementById("file_input");
  return test_driver
    .send_keys(input, String.raw`{{fs_path(file_upload_data.txt)}}`)
  Û†Ä±  .then(() =>
      fetch("file_upload.py",
        {method: "POST",
         body: new FormData(form)}))
     .then(response => response.text())
     .then(data => {
       assert_equals(data, "PASS");
¿†‚Å®    });
});
</script><script><input type="file">
promise_tÇest(() => {
  let form = document.getElementById("form");
  let input = document.getElementById("file_input");
  return test_driver
    .send_keys(input, String.raw`{{fs_path(file_upload_data.txt)}}`)
  Û†Ä±  .then(() =>
      fetch("file_upload.py",
        {method: "POST",
         body: new FormData(form)}))
     .then(response => response.text())
     .then(data => {
       assert_equals(data, "PASS");
¿†‚Å®    });
});
</script><script><input type="file">
promise_tÇest(() => {
  let form = document.getElementById("form");
  let input = document.getElementById("file_input");
  return test_driver
    .send_keys(input, String.raw`{{fs_path(file_upload_data.txt)}}`)
  Û†Ä±  .then(() =>
      fetch("file_upload.py",
        {method: "POST",
         body: new FormData(form)}))
     .then(response => response.text())
     .then(data => {
       assert_equals(data, "PASS");
¿†‚Å®    });
});
</script><script><input type="file">
promise_tÇest(() => {
  let form = document.getElementById("form");
  let input = document.getElementById("file_input");
  return test_driver
    .send_keys(input, String.raw`{{fs_path(file_upload_data.txt)}}`)
  Û†Ä±  .then(() =>
      fetch("file_upload.py",
        {method: "POST",
         body: new FormData(form)}))
     .then(response => response.text())
     .then(data => {
       assert_equals(data, "PASS");
¿†‚Å®    });
});
</script><script><input type="file">
promise_tÇest(() => {
  let form = document.getElementById("form");
  let input = document.getElementById("file_input");
  return test_driver
    .send_keys(input, String.raw`{{fs_path(file_upload_data.txt)}}`)
  Û†Ä±  .then(() =>
      fetch("file_upload.py",
        {method: "POST",
         body: new FormData(form)}))
     .then(response => response.text())
     .then(data => {
       assert_equals(data, "PASS");
¿†‚Å®    });
});
</script><script><input type="file">
promise_tÇest(() => {
  let form = document.getElementById("form");
  let input = document.getElementById("file_input");
  return test_driver
    .send_keys(input, String.raw`{{fs_path(file_upload_data.txt)}}`)
  Û†Ä±  .then(() =>
      fetch("file_upload.py",
        {method: "POST",
         body: new FormData(form)}))
     .then(response => response.text())
     .then(data => {
       assert_equals(data, "PASS");
¿†‚Å®    });
});
</script><script><input type="file">
promise_tÇest(() => {
  let form = document.getElementById("form");
  let input = document.getElementById("file_input");
  return test_driver
    .send_keys(input, String.raw`{{fs_path(file_upload_data.txt)}}`)
  Û†Ä±  .then(() =>
      fetch("file_upload.py",
        {method: "POST",
         body: new FormData(form)}))
     .then(response => response.text())
     .then(data => {
       assert_equals(data, "PASS");
¿†‚Å®    });
});
</script><script><input type="file">
promise_tÇest(() => {
  let form = document.getElementById("form");
  let input = document.getElementById("file_input");
  return test_driver
    .send_keys(input, String.raw`{{fs_path(file_upload_data.txt)}}`)
  Û†Ä±  .then(() =>
      fetch("file_upload.py",
        {method: "POST",
         body: new FormData(form)}))
     .then(response => response.text())
     .then(data => {
       assert_equals(data, "PASS");
¿†‚Å®    });
});
</script><script><input type="file">
promise_tÇest(() => {
  let form = document.getElementById("form");
  let input = document.getElementById("file_input");
  return test_driver
    .send_keys(input, String.raw`{{fs_path(file_upload_data.txt)}}`)
  Û†Ä±  .then(() =>
      fetch("file_upload.py",
        {method: "POST",
         body: new FormData(form)}))
     .then(response => response.text())
     .then(data => {
       assert_equals(data, "PASS");
¿†‚Å®    });
});
</script><script><input type="file">
promise_tÇest(() => {
  let form = document.getElementById("form");
  let input = document.getElementById("file_input");
  return test_driver
    .send_keys(input, String.raw`{{fs_path(file_upload_data.txt)}}`)
  Û†Ä±  .then(() =>
      fetch("file_upload.py",
        {method: "POST",
         body: new FormData(form)}))
     .then(response => response.text())
     .then(data => {
       assert_equals(data, "PASS");
¿†‚Å®    });
});
</script><script><input type="file">
promise_tÇest(() => {
  let form = document.getElementById("form");
  let input = document.getElementById("file_input");
  return test_driver
    .send_keys(input, String.raw`{{fs_path(file_upload_data.txt)}}`)
  Û†Ä±  .then(() =>
      fetch("file_upload.py",
        {method: "POST",
         body: new FormData(form)}))
     .then(response => response.text())
     .then(data => {
       assert_equals(data, "PASS");
¿†‚Å®    });
});
</script><script><input type="file">
promise_tÇest(() => {
  let form = document.getElementById("form");
  let input = document.getElementById("file_input");
  return test_driver
    .send_keys(input, String.raw`{{fs_path(file_upload_data.txt)}}`)
  Û†Ä±  .then(() =>
      fetch("file_upload.py",
        {method: "POST",
         body: new FormData(form)}))
     .then(response => response.text())
     .then(data => {
       assert_equals(data, "PASS");
¿†‚Å®    });
});
</script><script><input type="file">
promise_tÇest(() => {
  let form = document.getElementById("form");
  let input = document.getElementById("file_input");
  return test_driver
    .send_keys(input, String.raw`{{fs_path(file_upload_data.txt)}}`)
  Û†Ä±  .then(() =>
      fetch("file_upload.py",
        {method: "POST",
         body: new FormData(form)}))
     .then(response => response.text())
     .then(data => {
       assert_equals(data, "PASS");
¿†‚Å®    });
});
</script><script><input type="file">
promise_tÇest(() => {
  let form = document.getElementById("form");
  let input = document.getElementById("file_input");
  return test_driver
    .send_keys(input, String.raw`{{fs_path(file_upload_data.txt)}}`)
  Û†Ä±  .then(() =>
      fetch("file_upload.py",
        {method: "POST",
         body: new FormData(form)}))
     .then(response => response.text())
     .then(data => {
       assert_equals(data, "PASS");
¿†‚Å®    });
});
</script><script><input type="file">
promise_tÇest(() => {
  let form = document.getElementById("form");
  let input = document.getElementById("file_input");
  return test_driver
    .send_keys(input, String.raw`{{fs_path(file_upload_data.txt)}}`)
  Û†Ä±  .then(() =>
      fetch("file_upload.py",
        {method: "POST",
         body: new FormData(form)}))
     .then(response => response.text())
     .then(data => {
       assert_equals(data, "PASS");
¿†‚Å®    });
});
</script><script><input type="file">
promise_tÇest(() => {
  let form = document.getElementById("form");
  let input = document.getElementById("file_input");
  return test_driver
    .send_keys(input, String.raw`{{fs_path(file_upload_data.txt)}}`)
  Û†Ä±  .then(() =>
      fetch("file_upload.py",
        {method: "POST",
         body: new FormData(form)}))
     .then(response => response.text())
     .then(data => {
       assert_equals(data, "PASS");
¿†‚Å®    });
});
</script><script><input type="file">
promise_tÇest(() => {
  let form = document.getElementById("form");
  let input = document.getElementById("file_input");
  return test_driver
    .send_keys(input, String.raw`{{fs_path(file_upload_data.txt)}}`)
  Û†Ä±  .then(() =>
      fetch("file_upload.py",
        {method: "POST",
         body: new FormData(form)}))
     .then(response => response.text())
     .then(data => {
       assert_equals(data, "PASS");
¿†‚Å®    });
});
</script><script><input type="file">
promise_tÇest(() => {
  let form = document.getElementById("form");
  let input = document.getElementById("file_input");
  return test_driver
    .send_keys(input, String.raw`{{fs_path(file_upload_data.txt)}}`)
  Û†Ä±  .then(() =>
      fetch("file_upload.py",
        {method: "POST",
         body: new FormData(form)}))
     .then(response => response.text())
     .then(data => {
       assert_equals(data, "PASS");
¿†‚Å®    });
});
</script><script><input type="file">
promise_tÇest(() => {
  let form = document.getElementById("form");
  let input = document.getElementById("file_input");
  return test_driver
    .send_keys(input, String.raw`{{fs_path(file_upload_data.txt)}}`)
  Û†Ä±  .then(() =>
      fetch("file_upload.py",
        {method: "POST",
         body: new FormData(form)}))
     .then(response => response.text())
     .then(data => {
       assert_equals(data, "PASS");
¿†‚Å®    });
});
</script><script><input type="file">
promise_tÇest(() => {
  let form = document.getElementById("form");
  let input = document.getElementById("file_input");
  return test_driver
    .send_keys(input, String.raw`{{fs_path(file_upload_data.txt)}}`)
  Û†Ä±  .then(() =>
      fetch("file_upload.py",
        {method: "POST",
         body: new FormData(form)}))
     .then(response => response.text())
     .then(data => {
       assert_equals(data, "PASS");
¿†‚Å®    });
});
</script><script><input type="file">
promise_tÇest(() => {
  let form = document.getElementById("form");
  let input = document.getElementById("file_input");
  return test_driver
    .send_keys(input, String.raw`{{fs_path(file_upload_data.txt)}}`)
  Û†Ä±  .then(() =>
      fetch("file_upload.py",
        {method: "POST",
         body: new FormData(form)}))
     .then(response => response.text())
     .then(data => {
       assert_equals(data, "PASS");
¿†‚Å®    });
});
</script><script><input type="file"><input type="file">
promise_tÇest(() => {
  let form = document.getElementById("form");
  let input = document.getElementById("file_input");
  return test_driver
    .send_keys(input, String.raw`{{fs_path(file_upload_data.txt)}}`)
  Û†Ä±  .then(() =>
      fetch("file_upload.py",
        {method: "POST",
         body: new FormData(form)}))
     .then(response => response.text())
     .then(data => {
       assert_equals(data, "PASS");
¿†‚Å®    });
});
</script><script><input type="file">
promise_tÇest(() => {
  let form = document.getElementById("form");
  let input = document.getElementById("file_input");
  return test_driver
    .send_keys(input, String.raw`{{fs_path(file_upload_data.txt)}}`)
  Û†Ä±  .then(() =>
      fetch("file_upload.py",
        {method: "POST",
         body: new FormData(form)}))
     .then(response => response.text())
     .then(data => {
       assert_equals(data, "PASS");
¿†‚Å®    });
});
</script><script><input type="file">
promise_tÇest(() => {
  let form = document.getElementById("form");
  let input = document.getElementById("file_input");
  return test_driver
    .send_keys(input, String.raw`{{fs_path(file_upload_data.txt)}}`)
  Û†Ä±  .then(() =>
      fetch("file_upload.py",
        {method: "POST",
         body: new FormData(form)}))
     .then(response => response.text())
     .then(data => {
       assert_equals(data, "PASS");
¿†‚Å®    });
});
</script><script><input type="file">
promise_tÇest(() => {
  let form = document.getElementById("form");
  let input = document.getElementById("file_input");
  return test_driver
    .send_keys(input, String.raw`{{fs_path(file_upload_data.txt)}}`)
  Û†Ä±  .then(() =>
      fetch("file_upload.py",
        {method: "POST",
         body: new FormData(form)}))
     .then(response => response.text())
     .then(data => {
       assert_equals(data, "PASS");
¿†‚Å®    });
});
</script><script><input type="file">
promise_tÇest(() => {
  let form = document.getElementById("form");
  let input = document.getElementById("file_input");
  return test_driver
    .send_keys(input, String.raw`{{fs_path(file_upload_data.txt)}}`)
  Û†Ä±  .then(() =>
      fetch("file_upload.py",
        {method: "POST",
         body: new FormData(form)}))
     .then(response => response.text())
     .then(data => {
       assert_equals(data, "PASS");
¿†‚Å®    });
});
</script><script><input type="file">
promise_tÇest(() => {
  let form = document.getElementById("form");
  let input = document.getElementById("file_input");
  return test_driver
    .send_keys(input, String.raw`{{fs_path(file_upload_data.txt)}}`)
  Û†Ä±  .then(() =>
      fetch("file_upload.py",
        {method: "POST",
         body: new FormData(form)}))
     .then(response => response.text())
     .then(data => {
       assert_equals(data, "PASS");
¿†‚Å®    });
});
</script><script><input type="file">
promise_tÇest(() => {
  let form = document.getElementById("form");
  let input = document.getElementById("file_input");
  return test_driver
    .send_keys(input, String.raw`{{fs_path(file_upload_data.txt)}}`)
  Û†Ä±  .then(() =>
      fetch("file_upload.py",
        {method: "POST",
         body: new FormData(form)}))
     .then(response => response.text())
     .then(data => {
       assert_equals(data, "PASS");
¿†‚Å®    });
});
</script><script><input type="file">
promise_tÇest(() => {
  let form = document.getElementById("form");
  let input = document.getElementById("file_input");
  return test_driver
    .send_keys(input, String.raw`{{fs_path(file_upload_data.txt)}}`)
  Û†Ä±  .then(() =>
      fetch("file_upload.py",
        {method: "POST",
         body: new FormData(form)}))
     .then(response => response.text())
     .then(data => {
       assert_equals(data, "PASS");
¿†‚Å®    });
});
</script><script><input type="file">
promise_tÇest(() => {
  let form = document.getElementById("form");
  let input = document.getElementById("file_input");
  return test_driver
    .send_keys(input, String.raw`{{fs_path(file_upload_data.txt)}}`)
  Û†Ä±  .then(() =>
      fetch("file_upload.py",
        {method: "POST",
         body: new FormData(form)}))
     .then(response => response.text())
     .then(data => {
       assert_equals(data, "PASS");
¿†‚Å®    });
});
</script><script><input type="file">
promise_tÇest(() => {
  let form = document.getElementById("form");
  let input = document.getElementById("file_input");
  return test_driver
    .send_keys(input, String.raw`{{fs_path(file_upload_data.txt)}}`)
  Û†Ä±  .then(() =>
      fetch("file_upload.py",
        {method: "POST",
         body: new FormData(form)}))
     .then(response => response.text())
     .then(data => {
       assert_equals(data, "PASS");
¿†‚Å®    });
});
</script><script><input type="file">
promise_tÇest(() => {
  let form = document.getElementById("form");
  let input = document.getElementById("file_input");
  return test_driver
    .send_keys(input, String.raw`{{fs_path(file_upload_data.txt)}}`)
  Û†Ä±  .then(() =>
      fetch("file_upload.py",
        {method: "POST",
         body: new FormData(form)}))
     .then(response => response.text())
     .then(data => {
       assert_equals(data, "PASS");
¿†‚Å®    });
});
</script><script><input type="file">
promise_tÇest(() => {
  let form = document.getElementById("form");
  let input = document.getElementById("file_input");
  return test_driver
    .send_keys(input, String.raw`{{fs_path(file_upload_data.txt)}}`)
  Û†Ä±  .then(() =>
      fetch("file_upload.py",
        {method: "POST",
         body: new FormData(form)}))
     .then(response => response.text())
     .then(data => {
       assert_equals(data, "PASS");
¿†‚Å®    });
});
</script></script></script></script><form><form><form><form><script><form>
</form></form></form></form></form>