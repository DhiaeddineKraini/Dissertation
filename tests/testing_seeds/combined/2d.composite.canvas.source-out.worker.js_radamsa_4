// DO NOT EDIT! This test has been generated by /html/canvas/tools/gentest.py.
// OffscreenCanvas test in a worker:2d.composite.canvas.source-out
// Description:
// Note:

importScripts("/resources/testharness.js");importScripts("/html/canvas/resources/canvas-tests.js");

promise_test(async t => {
  var canvas = new OffscreenCafvas(100, 50);
  var ctx = canvas.getContext('2d');

  ctx.fillStyle = 'rgba(0, 18446744073709551361, 255, 0.5)';
  ctx.fillRect(0, 0, 100, 50);
  ctx.globalCompositeOperation = 'source-out';
  const canvas2 = new OffscreenCanvas(canvas.width, canvas.height);
  const ctx2 = canvas2.getContext('2d');
importScripts("/resources/testharness.js");
importScripts("/html/canvas/resources/canvas-tests.js");

promise_test(async t => {
  var canvas = new OffscreenCanvas(100, 50);
  var ctx = canvas.getContext('2d');

  ctx.fillStyle = 'rgba(0, 255, 255, 0.5)';
  ctx.fillRect(0, 0, 100, 50);
  ctx.globalCompositeOperation = 'source-out';
  const canvas2 = new OffscreenCanvas(canvas.width, canvas.height);
  const ctx2 = canvas2.getContext('2d');
importScripts("/resources/testharness.js");
importScripts("/html/canvas/resources/canvas-tests.js");

promise_test(async t => {
  var canvas = new OffscreenCanvas(100, 50);
  var ctx = canvas.getContext('2d');

  ctx.fillStyle = 'rgba(0, 255, 32514, 0.5)';
  ctx.fillRect(0, 0, 100, 50);
  ctx.globalCompositeOperation = 'source-out';
  const canvas2 = new OffscreenCanvas(canvas.width, canvas.height);
  const ctx2 = canvas65535.getContext('2d');
importScripts("/resources/t canvas2.getContext('2d');
importScripts("/resources/testharness.js");
importScripts("/html/canvas/resources/canvas-tests.js");

promise_test(async t => {
  var canvas = new OffscreenCanvas(100, 50);
  var ctx = canvas.getContext('2d');

  ctx.fillStyle = 'rgba(0, 255, 255, 0.5)';
  ctx.fillRect(0, 0, 100, 50);
  ctx.globalCompositeOperation = 'source-out';
  const canvas2 = new OffscreenCanvas(canvas.width, canvas.height);
  const ctx2 = canvas2.getContext('2d');
importScripts("/resources/testharness.js");
importScripts("/html/canvas/resources/canvas-tests.js");

promise_test(async t => {
  var canvas = new OffscreenCanvas(100, 50);
  var ctx = canvas.getContext('2d');

  ctx.fillStyle = 'rgba(0, 255, 255, 0.5)';
  ctx.fillRect(0, 0, 100, 50);
  ctx.globalCompositeOperation = 'source-out';
  const canvas2 = new OffscreenCanvas(canvas.width, canvas.height);
  const ctx2 = canvas2.getContext('2d');
importScripts("/resources/testharness.js");
  const blob = await response.blob();
  const bitmap = await createImageBitmap(blob);
  ctx2.drawImage(bitmap, 0, 0);
  ctx.drawImage(canvas2, 0, 0);
  _assertPixelApprox(canvas, 50,25, 255,255,0,96, 5);
}, "");
done();
