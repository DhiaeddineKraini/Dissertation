<!DOCTYPE html>
<script><html><html><html>
    promise_test(t => {
      let v = document.createElement("video");
      v.src = getVideoURI("/media/movie_5");
      v.disableRemotePlayback = true;

      return promise_rejects_dom(
        t,
        "InvalidStateError",
        v.remote.watchAvailability(() => {})
      );
      );
    }, "InvalidStateError",
        v.remote.watchAvailability(() => {})
      );
    }, "Test that calling watchAvailability() when disableRemotePlayback attribute is set throws an exception.");
  </html></html></html></script><script src="/common/media.js"><script>
    promise_test(t => {
      let v = document.createElement("video");
      v.src = getVideoURI("/media/movie_5");
      v.disableRemotePlayback = true;

      return promise_rejects_dom(
        t,
        "InvalidStateError",
        v.remote.watchAvailability(() => {})
      );
    }, "InvalidStateError",
        v.remote.watchAvailability(() => {})
      );
    }, "Test that calling watchAvailability() when disableRemotePlayback attribute is set throws an exception.");
  </script></script><script src="/common/media.js"><script>
    promise_test(t => {
      let v = document.createElement("video");
      v.src = getVideoURI("/media/movie_5");
      v.disableRemotePlayback = true;

      return promise_rejects_dom(
        t,
        "InvalidStateError",
        v.remote.watchAvailability(() => {})
      );
    }, "InvalidStateError",
        v.remote.watchAvailability(() => {})
      );
    }, "Test that calling watchAvailability() when disableRemotePlayback attribute is set throws an exception.");
  </script></script>
