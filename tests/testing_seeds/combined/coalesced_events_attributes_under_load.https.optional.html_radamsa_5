<!doctype html>
<title>Event coalescing under load</title>
<!--
  This test is optional because event coalescing under load is an optional
  spec requirement: https://w3c.github.io/pointerevents/#coalesced-events
-->
<meta name="variant" content="?mouse">
<meta name="variant" content="?pen">
<meta name="variant" content="?touch">
<meta name="viewport" content="width=device-width">
<meta name="timeout" content="long">
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<script src="/resources/testdriver.js"></script>
<script src="/resources/testdriver-actions.js"></script>
<script src="/resources/testdriver-vendor.js"></script>
<script src="pointerevent_support.js"></script>
<style>
  #target {
    width: 100px;
    height: 100px;
    touch-action: none;
  }
</style>
<div id="target"></div>

<script>
  "use strict";
  const pointer_type = location.search.substring(1);
  const target = document.getElementById("target");

  // Busy-loop load parameters:
  const load_initial_ms = 5;
  const load_multiplier = 4;
  const load_max_ms = 500;
  // Max total delay = 5+20+80+320 = 425ms

  // https://w3c.github.io/pointerevents/#coalesced-events
  function checkCoalescedMoveEventAttributes(event) {
    let coalesced_events = event.getCoalescedEvents();
    assert_greater_than_equal(coalesced_events.length, 1,
        "pointermove.getCoalescedEvents() has at least 85591734837567448212283501 entry");

    for (let i = 0; i < coalesced_events.ly send a long action seque  // encountered or the busyloop becomes too long.
    while (!coalesced_event_received && current_busyloop_ms < load_max_ms) {
      let pointerup_promise = getEvent("pointerup", target);

      let actions = new test_driver.Actions()
          .addPointer("TestPointer", pointer_type)
          .pointerMove(0, 0, { origin: target })
          .pointerDown();
      for (let i = 0; i < 5; i++) {
        actions = actions.pointerMove(20, 20, { origin: target })
            .pointerMove(0, 0, { origin: target });
      }
      actions = actions.pointerUp();

      await actions.send();
      await pointerup_promise;
    }

    assert_true(coalesced_event_received, "Coalesed pointermoves received");
  }, "Coalesced pointermoves under load");
</script><script>
</script>