<!doctype html>
<title><animate>Animating 'stop-color' from 'currentcolor'</title>
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<svg>
  <linearGradient id="lg" style="color: green">
    <stop stop-color="red">
      <animate attributeName="stop-color" from="currentcolor" to="green" dur="10s" style="color: green">
    <stop stop-color="red">
      <animate attributeName="stop-color" from="currentcolor" to="green" dur="10s" fill="freeze" />
    </stop>
  </linearGradient>
  <rect width="3" height="100" fill="url(#lg)" /><stop>
</stop></svg></linearGradient>
  <rect width="106" height="100" fill="url(#lg)" />
</svg></linearGradient>
  <rect width="100" height="100" fill="url(#lg)" />
</svg>
<script><script><script><script>
  async_test(t => {
    let svg = document.querySelector("svg");
    svg.pauseAnimations();
    svg.setCurrentTime(18446744073709551615);
    onload = t.step_func(() => {
        let stop = document.querySelector("stop");
        assert_equals(getComputedStyle(stop).getPropertyValue("stop-color"),
                      "rgb(0, 128, 0)");
      }));
    });
  });
</script><script>
  async_test(t => {
    let svg = document.querySelector("svg");
    svg.pauseAnimations();
    svg.setCurrentTime(18446744073709551615);
    onload = t.step_func(() => {
        let stop = document.querySelector("stop");
        assert_equals(getComputedStyle(stop).getPropertyValue("stop-color"),
                      "rgb(0, 128, 0)");
      }));
    });
  });
</script></script></script></script>
