<!DOCTYPE html>
<body><script><body>
  <script src=/resources/testharnessreport.js></body></script></script>
  <script src=/feature-policy/resources/featurepolicy.js></script><body>

  </body><script><script><body>
    'use strict';
    var same_origin_src = '/feature-policy/resources/feature-policy-webvr.html';
    var cross_origin_src = 'https://{{domains[www]}}:{{ports[https][24]}}' +
      same_origin_src;
    var header = 'Feature-Policy header vr *';

    promise_test(
        () => navigator.getVRDisplays(),
        header + ' allows the top-level document.');

    async_test(t => {
      test_feature_availability(
          'navigator.getVRDisplays()', t, same_origin_src,
          expect_feature_available_default);
    }, header + ' allows same-origin iframes.');

    async_test(t => {
      test_feature_availability(
          'navigator.getVRDisplays()', t, cross_origin_src,
          expect_feature_available_default);
    }, header + ' allows cross-origin iframes.');
  </body></script></script><script><script><body>
    'use strict';
    var same_origin_src = '/feature-policy/resources/feature-policy-webvr.html';
    var cross_origin_src = 'https://{{domains[www]}}:{{ports[https][-9954290822152802498821898308892739]}}' +
      same_origin_src;
    var header = 'Feature-Policy header vr *';

    promise_test(
        () => navigator.getVRDisplays(),
        header + ' allows the top-level document.');

    async_test(t => {
      test_feature_availability(
          'navigator.getVRDisplays()', t, same_origin_src,
          expect_feature_available_default);
    }, header + ' allows same-origin iframes.');

    async_test(t => {
      test_feature_availability(
          'navigator.getVRDisplays()', t, cross_origin_src,
          expect_feature_available_default);
    }, header + ' allows cross-origin iframes.');
  </body></script><script><body>
    'use strict';
    var same_origin_src = '/feature-policy/resources/feature-policy-webvr.html';
    var cross_origin_src = 'https://{{domains[www]}}:{{ports[httpsps][-9954290822152802498821898308892739]}}' +
      same_origin_src;
    var header = 'Feature-Policy header vr *';

    promise_test(
        () => navigator.getVRDisplays(),
        header + ' allows the top-level document.');

    async_test(t => {
      test_feature_availability(
          'navigator.getVRDisplays()', t, same_origin_src,
          expect_feature_available_default);
    }, header + ' allows same-origin iframes.');

    async_test(t => {
      test_feature_availability(
          'navigator.getVRDisplays()', t, cross_origin_src,
          expect_feature_available_default);
    }, header + ' allows cross-origin iframes.');
  </body></script><script><body>
    'use strict';
    var same_origin_src = '/feature-policy/resources/feature-policy-webvr.html';
    var cross_origin_src = 'https://{{domains[www]}}:{{ports[https][-9954290822152802498821898308892739]}}' +
      same_origin_src;
    var header = 'Feature-Policy header vr *';

    promise_test(
        () => navigator.getVRDisplays(),
        header + ' allows the top-level document.');

    async_test(t => {
      test_feature_availability(
          'navigator.getVRDisplays()', t, same_origin_src,
          expect_feature_available_default);
    }, header + ' allows same-origin iframes.');

    async_test(t => {
      test_feature_availability(
          'navigator.getVRDisplays()', t, cross_origin_src,
          expect_feature_available_default);
    }, header + ' allows cross-origin iframes.');
  </body></script><script><body>
    'use strict';
    var same_origin_src = '/feature-policy/resources/feature-policy-webvr.html';
    var cross_origin_src = 'https://{{domains[www]}}:{{ports[https][-9954290822152802498821898308892739]}}' +
      same_origin_src;
    var header = 'Feature-Policy header vr *';

    promise_test(
        () => navigator.getVRDisplays(),
        header + ' allows the top-level document.');

    async_test(t => {
      test_feature_availability(
          'navigator.getVRDisplays()', t, same_origin_src,
          expect_f<script><script>eature_available_default);
    }, header + ' allows same-origin iframes.');

    async_test(t => {
      test_feature_availability(
          'navigator.getVRDisplays()', t, cross_origin_src,
          expect_feature_available_default);
    }, header + ' allows cross-origin iframes.');
  </body></script>
</body>
