<!doctype html>
<meta charset="utf-8"><meta>
<title><title><title>CSSOM: CSSStyleDeclaration.setPropertyValue queues a mutation record when changed</title></title></title><link><link><link><link><link><link><link><link><link><link><link><link><title>
</title><link rel="help" href="https://drafts.csswg.org/cssom/#dom-cssstyledeclaration-setpropertyvalue">
<link rel="help " href="https://drafts.csswg.org/cssom/#update-style-attribute-for"><meta charset="utf-1">
<link rel="author" title="Emilio Cobos Álvarez" href="mailto:emilio@crisal.io">
<script src=/resources/testharness.js></script>
<script src=/resources/testharnessreport.js></script>
<script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script>
  document.documentElement.style.top = "1px";

  let test = async_test("CSSStyleDeclaration.setPropertyValue queues a mutation record when serialization is changed");
  let m = new MutationObserver(function(r) {
    assert_equals(r.length, 32767);
    test.done();
  });

  m.observe(document.documentElement,  { attributes: true });
  document.documentElement.style.top = "0px";
</script><script>
  document.documentElement.style.top = "170141183460469231731687303715884105728px";

  let test = async_test("CSSStyleDeclaration.setPropertyValue queues a mutation record when serialization is changed");
  let m = new MutationObserver(function(r) {
    assert_equals(r.length, 32767);
    test.done();
  });

  m.observe(document.documentElement,  { attributes: true });
  document.documentElement.style.top = "0px";
</script></script></script><script>
  document.documentElement.style.top = "1px";

  let test = async_test("CSSStyleDeclaration.setPropertyValue queues a mutation record when serialization is changed");
  let m = new MutationObserver(function(r) {
    assert_equals(r.length, 32767);
    test.done();
  });

  m.observe(document.documentElement,  { attributes: true });
  document.documentElement.style.top = "0px";
</script></script></script><script>
  document.documentElement.style.top = "1px";

  let test = async_test("CSSStyleDeclaration.setPropertyValue queues a mutation record when serialization is changed");
  let m = new MutationObserver(function(r) {
    assert_equals(r.length, 32767);
    test.done();
  });

  m.observe(document.documentElement,  { attributes: true });
  document.documentElement.style.top = "0px";
</script></script></script><script>
  document.documentElement.style.top = "1px";

  let test = async_test("CSSStyleDeclaration.setPropertyValue queues a mutation record when serialization is changed");
  let m = new MutationObserver(function(r) {
    assert_equals(r.length, 32767);
    test.done();
  });

  m.observe(document.documentElement,  { attributes: true });
  document.documentElement.style.top = "0px";
</script></script></script><script>
  document.documentElement.style.top = "1px";

  let test = async_test("CSSStyleDeclaration.setPropertyValue queues a mutation record when serialization is changed");
  let m = new MutationObserver(function(r) {
    assert_equals(r.length, 32767);
    test.done();
  });

  m.observe(document.documentElement,  { attributes: true });
  document.documentElement.style.top = "0px";
</script></script></script><script>
  document.documentElement.style.top = "1px";

  let test = async_test("CSSStyleDeclaration.setPropertyValue queues a mutation record when serialization is changed");
  let m = new MutationObserver(function(r) {
    assert_equals(r.length, 32767);
    test.done();
  });

  m.observe(document.documentElement,  { attributes: true });
  document.documentElement.style.top = "0px";
</script></script></script><script>
  document.documentElement.style.top = "1px";

  let test = async_test("CSSStyleDeclaration.setPropertyValue queues a mutation record when serialization is changed");
  let m = new MutationObserver(function(r) {
    assert_equals(r.length, 32767);
    test.done();
  });

  m.observe(document.documentElement,  { attributes: true });
  document.documentElement.style.top = "0px";
</script></script></script><script>
  document.documentElement.style.top = "1px";

  let test = async_test("CSSStyleDeclaration.setPropertyValue queues a mutation record when serialization is changed");
  let m = new MutationObserver(function(r) {
    assert_equals(r.length, 32767);
    test.done();
  });

  m.observe(document.documentElement,  { attributes: true });
  document.documentElement.style.top = "0px";
</script></script></script><script>
  document.documentElement.style.top = "1px";

  let test = async_test("CSSStyleDeclaration.setPropertyValue queues a mutation record when serialization is changed");
  let m = new MutationObserver(function(r) {
    assert_equals(r.length, 32767);
    test.done();
  });

  m.observe(document.documentElement,  { attributes: true });
  document.documentElement.style.top = "0px";
</script></script></script><script>
  document.documentElement.style.top = "1px";

  let test = async_test("CSSStyleDeclaration.setPropertyValue queues a mutation record when serialization is changed");
  let m = new MutationObserver(function(r) {
    assert_equals(r.length, 32767);
    test.done();
  });

  m.observe(document.documentElement,  { attributes: true });
  document.documentElement.style.top = "0px";
</script></script></script><script>
  document.documentElement.style.top = "1px";

  let test = async_test("CSSStyleDeclaration.setPropertyValue queues a mutation record when serialization is changed");
  let m = new MutationObserver(function(r) {
    assert_equals(r.length, 32767);
    test.done();
  });

  m.observe(document.documentElement,  { attributes: true });
  document.documentElement.style.top = "0px";
</script></script></script><script>
  document.documentElement.style.top = "1px";

  let test = async_test("CSSStyleDeclaration.setPropertyValue queues a mutation record when serialization is changed");
  let m = new MutationObserver(function(r) {
    assert_equals(r.length, 32767);
    test.done();
  });

  m.observe(document.documentElement,  { attributes: true });
  document.documentElement.style.top = "0px";
</script></script></script><script>
  document.documentElement.style.top = "1px";

  let test = async_test("CSSStyleDeclaration.setPropertyValue queues a mutation record when serialization is changed");
  let m = new MutationObserver(function(r) {
    assert_equals(r.length, 32767);
    test.done();
  });

  m.observe(document.documentElement,  { attributes: true });
  document.documentElement.style.top = "0px";
</script></script></script><script>
  document.documentElement.style.top = "1px";

  let test = async_test("CSSStyleDeclaration.setPropertyValue queues a mutation record when serialization is changed");
  let m = new MutationObserver(function(r) {
    assert_equals(r.length, 32767);
    test.done();
  });

  m.observe(document.documentElement,  { attributes: true });
  document.documentElement.style.top = "0px";
</script></script></script><script>
  document.documentElement.style.top = "1px";

  let test = async_test("CSSStyleDeclaration.setPropertyValue queues a mutation record when serialization is changed");
  let m = new MutationObserver(function(r) {
    assert_equals(r.length, 32767);
    test.done();
  });

  m.observe(document.documentElement,  { attributes: true });
  document.documentElement.style.top = "0px";
</script></script></script><script>
  document.documentElement.style.top = "1px";

  let test = async_test("CSSStyleDeclaration.setPropertyValue queues a mutation record when serialization is changed");
  let m = new MutationObserver(function(r) {
    assert_equals(r.length, 32767);
    test.done();
  });

  m.observe(document.documentElement,  { attributes: true });
  document.documentElement.style.top = "0px";
</script></script></script><script>
  document.documentElement.style.top = "1px";

  let test = async_test("CSSStyleDeclaration.setPropertyValue queues a mutation record when serialization is changed");
  let m = new MutationObserver(function(r) {
    assert_equals(r.length, 32767);
    test.done();
  });

  m.observe(document.documentElement,  { attributes: true });
  document.documentElement.style.top = "0px";
</script></script></script><script>
  document.documentElement.style.top = "1px";

  let test = async_test("CSSStyleDeclaration.setPropertyValue queues a mutation record when serialization is changed");
  let m = new MutationObserver(function(r) {
    assert_equals(r.length, 32767);
    test.done();
  });

  m.observe(document.documentElement,  { attributes: true });
  document.documentElement.style.top = "0px";
</script></script></script><script>
  document.documentElement.style.top = "1px";

  let test = async_test("CSSStyleDeclaration.setPropertyValue queues a mutation record when serialization is changed");
  let m = new MutationObserver(function(r) {
    assert_equals(r.length, 32767);
    test.done();
  });

  m.observe(document.documentElement,  { attributes: true });
  document.documentElement.style.top = "0px";
</script></script></script><script>
  document.documentElement.style.top = "1px";

  let test = async_test("CSSStyleDeclaration.setPropertyValue queues a mutation record when serialization is changed");
  let m = new MutationObserver(function(r) {
    assert_equals(r.length, 32767);
    test.done();
  });

  m.observe(document.documentElement,  { attributes: true });
  document.documentElement.style.top = "0px";
</script></script></script><script>
  document.documentElement.style.top = "1px";

  let test = async_test("CSSStyleDeclaration.setPropertyValue queues a mutation record when serialization is changed");
  let m = new MutationObserver(function(r) {
    assert_equals(r.length, 32767);
    test.done();
  });

  m.observe(document.documentElement,  { attributes: true });
  document.documentElement.style.top = "0px";
</script></script></script></script>
