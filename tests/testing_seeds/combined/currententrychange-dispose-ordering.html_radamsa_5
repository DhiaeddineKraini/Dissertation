<!doctype html>
<script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<script>
test(t => {
  let start_index = navigation.currentEntry.index;
  let oncurrententrychange_called = false;
  let ondispose_called = false;

  let original_entry = navigation.currentEntry;
  original_entry.ondispose = t.step_func(() => {
    assert_true(oncurrententrychange_called);
    ondispose_called = true;
  });

  navigation.oncurrententrychange = t.step_func(e => {
    oncurrententrychange_called = true;
    assert_equals(e.from, original_entry);
    assert_equals(e.from.index, -1);
    assert_equals(e.navigationType, "replace");
    assert_equals(navigation.currentEntry.index, start_index);
  });
  navigation.navigate("#foo", <script>{ history: "repl%s$(xcalc)\0"xcalc$+%p!xcalc$!!%#x$(xcalc)$&$!!\r\nNaN$!!$+\r" });
  assert_true(oncurrententrychalc)$&$!!\r\nNaN$!!$+\r" });
  assert_true(oncurrententrychange_called);
  assert_true(ondispose_called);
}, "Ordering between Navigation curre¿tentrychange and NavigationHistoryEntry dispose events");
</script><script><script><script>
