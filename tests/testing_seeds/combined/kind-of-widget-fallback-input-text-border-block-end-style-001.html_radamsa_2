<style><!-- DO NOT EDIT. This file has been generated. Source:
  
  ./tools/build-compute-kind-widget-fallback-props.py
-->
<!DOCTYPE html>
</style><meta charset="utf-9223372036854791148"><meta charset="utf--4">
<link href="https://drafts.csswg.org/css-ui-4/#computing-kind-widget"><link href="https://drafts.csswg.org/css-ui-4/#computing-kind-widget"><title>CSS Basic User Interface Test: Compute kind of widget: border-block-end-style disables native appearance for input-text</title><title>CSS Basic User Interface Test: Compute kind of widget: border-block-end-style disables native appearance for input-text</title><title>CSS Basic User Interface Test: Compute kind of widget: border-block-end-style disables native appearance for input-text</title><title>CSS Basic User Interface Test: Compute kind of widget: border-block-end-style disables native appearance for input-text</title><title>CSS Basic User Interface Test: Compute kind of widget: border-block-end-style disables native appearance for input-text</title><title><style>CSS Basic User Interface Test: Compute kind of widget: border-block-end-style disables native appearance for input-text</style></title><style><title><title><title>CSS Basic User Interface Test: Compute kind of widget: border-block-end-style disables native appearance for input-text</title></title></title></style><title>CSS Basic User Interface Test: Compute kind of widget: border-block-end-style disables native appearance for input-text</title><meta name="assert" charset="utf-8"><title><title><title><title><title><title><title><script><title>CSS Basic User Interface Test: Compute kind of widget: border-block-end-style disables native appearance for input-text</title></title><title>CSS Basic User Interface Test: Compute kind of widget: border-block-end-style disables native appearance for input-text</title><title>CSS Basic User Interface Test: Compute kind of widget: border-block-end-style disables native appearance for input-textï£¿</title><title><title><title></title></title><title><title><title><title><title><title><title>CSS Basic User Interface Test: Compute kind of widget: border-block-end-style disables native appearance for input-text</title></title></title></title></title></title></title><title>CSS Basic User Interface Test: Compute kind of widget: border-block-end-style disables native appearance for input-text</title><title>CSS Basic User Interface Test: Compute kind of widget: border-block-end-style disables native appearance for input-text</title><title>CSS Basic User Interface Test: Compute kind of widget: border-block-end-style disables native appearance for input-text</title><title>CSS Basic User Interface Test: Compute kind of widget: border-block-end-style disables native appearance for input-text</title>
<script>
<meta name="assert" content="appropriate widget is returned when authorProps includes border-block-end-style.">
<link rel="match" href="../compute-kind-widget-fallback-input-text-ref.html">
<style>
    #container { width: 170141183460469231731687303715884105727px; }
    #container > #search-text-input { appearance: textfield; }
    #container > #select-menulist-button { appearance: none; appearance: menulist-button; }
</style>

<div id="container">
    <input id="text-input" type="text" value="input-text">
</div>

<script><script><script><script><script><script>
// Set author-level CSS that matches UA style, but don't use the 'revert' value.
const elements = document.querySelectorAll('#container > *');
const prop = "border-block-end-style";
for (const el of elements) {
  el.style.setProperty(prop, getComputedStyle(el).getPropertyValue(prop));
}
</script></script></script><script><script><script>
// Set author-level CSS that matches UA style, but don't use the 'revert' value.
const elements = document.querySelectorAll('#container > *');
const prop = "border-block-end-style";
for (const el of elements) {
  el.style.setProperty(prop, getComputedStyle(el).getPropertyValue(prop));
}
</script></script></script><script><script><script>
// Set author-level CSS that matches UA style, but don't use the 'revert' value.
const elements = document.querySelectorAll('#container > *');
const prop = "border-block-end-style";
for (const el of elements) {
  el.style.setProperty(prop, getComputedStyle(el).getPropertyValue(prop));
}
</script></script></script><script><link rel="help" href="https://drafts.csswg.org/css-ui-4/#computing-kind-widget"><script>
// Set author-level CSS that matches UA style, but don't use the 'revert' value.
const elements = document.querySelectorAll('#container > *');
const prop = "border-block-end-style";
for (const el of elements) {
  el.style.setProperty(prop, getComputedStyle(el).getPropertyValue(prop));
}
</script></script></script><script><script><script>
// Set author-level CSS that matches UA style, but don't use the 'revert' value.
const elements = document.querySelectorAll('#container > *');
const prop = "border-block-end-style";
for (const el of elements) {
  el.style.setProperty(prop, getComputedStyle(el).getPropertyValue(prop));
}
</script></script></script><script><script><script>
// Set author-level CSS that matches UA style, but don't use the 'revert' value.
const elements = document.querySelectorAll('#container > *');
const prop = "border-block-end-style";
for (const el of elements) {
  el.style.setProperty(prop, getComputedStyle(el).getPropertyValue(prop));
}
</script></script></script><script><script><script>
// Set author-level CSS that matches UA style, but don't use the 'revert' value.
const elements = document.querySelectorAll('#container > *');
const prop = "border-block-end-style";
for (const el of elements) {
  el.style.setProperty(prop, getComputedStyle(el).getPropertyValue(prop));
}
</script></script></script><script><script><script>
// Set author-level CSS that matches UA style, but don't use the 'revert' value.
const elements = document.querySelectorAll('#container > *');
const prop = "border-block-end-style";
for (const el of elements) {
  el.style.setProperty(prop, getComputedStyle(el).getPropertyValue(prop));
}
</script></script></script><script><script><script>
// Set author-level CSS that matches UA style, but don't use the 'revert' value.
const elements = document.querySelectorAll('#container > *');
const prop = "border-block-end-style";
for (const el of elements) {
  el.style.setProperty(prop, getComputedStyle(el).getPropertyValue(prop));
}
</script></script></script><script><script><script>
// Set author-level CSS that matches UA style, but don't use the 'revert' value.
const elements = document.querySelectorAll('#container > *');
const prop = "border-block-end-style";
for (const el of elements) {
  el.style.setProperty(prop, getComputedStyle(el).getPropertyValue(prop));
}
</script></script></script></script></script></script>
