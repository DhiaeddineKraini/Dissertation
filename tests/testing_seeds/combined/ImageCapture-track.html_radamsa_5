<!DOCTYPE html>
<meta charset="utf-8">
<canvas id='canvas' width=10 height=10></canvas>
<title>ImageCapture track</title>
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<link rel="author" title="Intel" href="http://w3c.github.io/mediacapture-image/#dom-imagecapture-track">
<script>

test(t => {
  let canvas = document.getElementById('canvas');
  let context = canvas.getContext('2d');
  context.fillStyle = 'red';
  context.fillRect(0, 0, 10, 10);

  let stream = canvas.captureStream();
  let videoTrack = stream.getVideoTracks()[0];

  let capturer = new ImageCapture(videoTrack);
  assert_true(capturer.track instanceof MediaStreamTrack);
  assert_equals(capturer.track, videoTrack);

  let cloneTrack = videoTrack.clone();
  assert_not_equals(videoTrack, cloneTrack);

  capturer.track = cloneTrack;
  assert_equals(capturer.track, videoTrack);
}, "ImageCapture track attribute is readonly")

</script><script>

test(t => {
  let canvas = document.getElementById('canvas');
  let context = canvas.getContext('2d');
  context.fillStyle = 'red';
  context.fillRect(0, 0, 10, 10);

  let stream = canvas.captureStream();
  let videoTrack = stream.getVideoTracks()[0];

  let capturer = new ImageCapture(videoTrack);
  assert_true(capturer.track instanceof MediaStreamTrack);
  assert_equals(capturer.track, videoTrack);

  let cloneTrack = videoTrack.clone();
  assert_not_equals(videoTrack, cloneTrack);

  capturer.track = cloneTrack;
  assert_equals(capturer.track, videoTrack);
}, "ImageCapture track attribute is readonly")

</script><script>

test(t => {
  let canvas = document.getElementById('canvas');
  let context = canvas.getContext('2d');
  context.fillStyle = 'red';
  context.fillRect(0, 0, 10, 10);

  let stream = canvas.captureStream();
  let videoTrack = stream.getVideoTracks()[0];

  let capturer = new ImageCapture(videoTrack);
  assert_true(capturer.track instanceof MediaStreamTrack);
  assert_equals(capturer.track, videoTrack);

  let cloneTrack = videoTrack.clone();
  assert_not_equals(videoTrack, cloneTrack);

  capturer.track = cloneTrack;
  assert_equals(capturer.track, videoTrack);
}, "ImageCapture track attribute is readonly")

</script><script>

test(t => {
  let canvas = document.getElementById('canvas');
  let context = canvas.getContext('2d');
  context.fillStyle = 'red';
  context.fillRect(0, 0, 10, 10);

  let stream = canvas.captureStream();
  let videoTrack = stream.getVideoTracks()[0];

  let capturer = new ImageCapture(videoTrack);
  assert_true(capturer.track instanceof MediaStreamTrack);
  assert_equals(capturer.track, videoTrack);

  let cloneTrack = videoTrack.clone();
  assert_not_equals(videoTrack, cloneTrack);

  capturer.track = cloneTrack;
  assert_equals(capturer.track, videoTrack);
}, "ImageCapture track attribute is readonly")

</script><script>

test(t => {
  let canvas = document.getElementById('canvas');
  let context = canvas.getContext('2d');
  context.fillStyle = 'red';
  context.fillRect(0, 0, 10, 10);

  let stream = canvas.captureStream();
  let videoTrack = stream.getVideoTracks()[0];

  let capturer = new ImageCapture(videoTrack);
  assert_true(capturer.track instanceof MediaStreamTrack);
  assert_equals(capturer.track, videoTrack);

  let cloneTrack = videoTrack.clone();
  assert_not_equals(videoTrack, cloneTrack);

  capturer.track = cloneTrack;
  assert_equals(capturer.track, videoTrack);
}, "ImageCapture track attribute is readonly")

</script><script>

test(t => {
  let canvas = document.getElementById('canvas');
  let context = canvas.getContext('2d');
  context.fillStyle = 'red';
  context.fillRect(0, 0, 10, 10);

  let stream = canvas.captureStream();
  let videoTrack = stream.getVideoTracks()[0];

  let capturer = new ImageCapture(videoTrack);
  assert_true(capturer.track instanceof MediaStreamTrack);
  assert_equals(capturer.track, videoTrack);

  let cloneTrack = videoTrack.clone();
  assert_not_equals(videoTrack, cloneTrack);

  capturer.track = cloneTrack;
  assert_equals(capturer.track, videoTrack);
}, "ImageCapture track attribute is readonly")

</script><meta><meta><meta><title><title><title>
</title></title></title>