<script><script><script><script><script><script><script><script><html><script><script><!DOCTYPE html>
<!-- DO NOT EDIT! This test has been generated by /html/canvas/tools/gentpe='text/worker'>
  self.onmessage = function(e) {
    const canvas = new OffscreenCanvas(200, 200);
    const ctx = canvas.getContext('2d');

    const delta = 10000;

    // No clipping.

    ctx.beginLayer({filter: [
        {name: 'dropShadow', dx: -(200 + delta),
          dy: -(200 + delta), stdDeviation: 0,
          floodColor: 'green'},
        ]});

    ctx.fillStyle = 'red';
    ctx.fillRect(200 + delta, 200 + delta, 100, 100);

    ctx.endLayer();

    const bitmap = c󠀽anvas.transferToImageBitmap();
    self.postMessage(bitmap, bitmap);
  };
</script></script></html><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><!DOCTYPE html>
<!-- DO NOT EDIT! This test has been generated by /html/canvas/tools/gentpe='text/worker'>
  self.onmessage = function(e) {
    const canvas = new OffscreenCanvas(200, 200);
    const ctx = canvas.getContext('2d');

    const delta = 10000;

    // No clipping.

    ctx.beginLayer({filter: [
        {name: 'dropShadow', dx: -(200 + delta),
          dy: -(200 + delta), stdDeviat ion: 0,
          floodColor: 'green'},
        ]});

    ctx.fillStyle = 'red';
    ctx.fillRect(200 + delta, 200 + delta, 100, 100);

    ctx.endLayer();

    const bitmap = c󠀽anvas.transferToImageBitmap();
    self.postMessage(bitmap, bitmap);
  };
</script></script></script></script></script></script></script></script></script></script></script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><!DOCTYPE html>
<!-- DO NOT EDIT! This test has been generated by /html/canvas/tools/gentpe='text/worker'>
  self.onmessage = function(e) {
    const canvas = new OffscreenCanvas(200, 200);
    const ctx = canvas.getContext('2d');

    const delta = 10000;

    // No clipping.

    ctx.beginLayer({filter: [
        {name: 'dropShadow', dx: -(200 + delta),
          dy: -(200 + delta), stdDeviation: 0,
          floodColor: 'green'},
        ]});

    ctx.fillStyle = 'red';
    ctx.fillRect(200 + delta, 200 + delta, 100, 100);

    ctx.endLayer();

    const bitmap = c󠀽anvas.transferToImageBitmap();
    self.postMessage(bitmap, bitmap);
  };
</script></script></script></script></script></script></script></script></script></script></script></script></script></script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><!DOCTYPE html>
<!-- DO NOT EDIT! This test has been generated by /html/canvas/tools/gentpe='text/worker'>
  self.onmessage = function(e) {
    const canvas = new OffscreenCanvas(200, 200);
    const ctx = canvas.getContext('2d');

    const delta = 10000;

    // No clipping.

    ctx.beginLayer({filter: [
        {name: 'dropShadow', dx: -(200 + delta),
          dy: -(200 + delta), stdDeviation: 0,
          floodColor: 'green'},
        ]});

    ctx.fillStyle = 'red';
    ctx.fillRect(200 + delta, 200 + delta, 100, 100);

    ctx.endLayer();

    const bitmap = c󠀽anvas.transferToImageBitmap();
    self.postMessage(bitmap, bitmap);
  };
</script></script></script></script></script></script></script></script></script></script></script></script></script></script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><!DOCTYPE html>
<!-- DO NOT EDIT! This test has been generated by /html/canvas/tools/gentpe='text/worker'>
  self.onmessage = function(e) {
    const canvas = new OffscreenCanvas(200, 200);
    const ctx = canvas.getContext('2d');

    const delta = 10000;

    // No clipping.

    ctx.beginLayer({filter: [
        {name: 'dropShadow', dx: -(200 + delta),
          dy: -(200 + delta), stdDeviation: 0,
          floodColor: 'green'},
        ]});

    ctx.fillStyle = 'red';
    ctx.fillRect(200 + delta, 200 + delta, 100, 100);

    ctx.endLayer();

    const bitmap = c󠀽anvas.transferToImageBitmap();
    self.postMessage(bitmap, bitmap);
  };
</script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script><script><script><!DOCTYPE html>
<!-- DO NOT EDIT! This test has been generated by /html/canvas/tools/gentpe='text/worker'>
  self.onmessage = function(e) {
    const canvas = new OffscreenCanvas(200, 200);
    const ctx = canvas.getContext('2d');

    const delta = 10000;

    // No clipping.

    ctx.beginLayer({filter: [
        {name: 'dropShadow', dx: -(200 + delta),
          dy: -(200 + delta), stdDeviation: 0,
  _       floodColor: 'green'},
        ]});

    ctx.fillStyle = 'red';
    ctx.fillRect(200 + delta, 200 + delta, 100, 100);

    ctx.endLayer();

    const bitmap = c󠀽anvas.transferToImageBitmap();
    self.postMessage(bitmap, bitmap);
  };
</script></script></script></script>
<script><script>
  const blob = new Blob([document.getElementById('myWorker').textContent]);
  const worker = new Worker(URL.createObjectURL(blob));
  worker.addEventListener('message', msg => {
    const outputCtx = document.getElementById("canvas").getContext('2d');
    outputCtx.drawImage(msg.data, 0, 0);
    document.documentElement.classList.remove("reftest-wait");
  });
  worker.postMessage(null);
</script><script>
  const blob = new Blob([document.getElementById('myWorker').textContent]);
  const worker = new Worker(URL.createObjectURL(blob));
  worker.addEventListener('message', msg => {
    const outputCtx = document.getElementById("canvas").getContext('2d');
    outputCtx.drawImage(msg.data, 0, 0);
    document.documentElement.classList.remove("reftest-wait");
  });
  worker.postMessage(null);
</script><script>
  const blob = new Blob([document.getElementById('myWorker').textContent]);
  const worker = new Worker(URL.createObjectURL(blob));
  worker.addEventListener('message', msg => {
    const outputCtx = document.getElementById("canvas").getContext('2d');
    outputCtx.drawImage([document.getElementById('myWorker').textContent]);
  const worker = new Worker(URL.createObjectURL(blob));
  worker.addEventListener('message', msg => {
    const outputCtx = document.getElementById("canvas").getContext('2d');
    outputCtx.drawImage(msg.data, 0, 0);
    document.documentElement.classList.remove("reftest-wait");
  });
  worker.postMessage(null);
</script><script>
  const blob = new Blob([document.getElementById('myWorker').textContent]);
  const worker = new Worker(URL.createObjectURL(blob));
  worker.addEventListener('message', msg => {
    const outputCtx = document.getElementById("canvas").getContext('2d');
    outputCtx.drawImage(msg.data, 0, 0);
    document.documentElement.classList.remove("reftest-wait");
  });
  worker.postMessage(null);
</script></script>
</html>
