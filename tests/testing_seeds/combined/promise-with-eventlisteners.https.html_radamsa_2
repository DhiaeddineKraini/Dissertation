<!DOCTYPE html>
<html>
<head>
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<script src="/resources/test-only-api.js"></script>
<script src="resources/battery-status-helpers.js"></script>
</head>
<body>
<script>
function nextEvent(target, name) {
  return new Promise(
      resolve => target.addEventListener(name, resolve, {once: true}));
}

battery_status_test(async (t, mockBatteryMonitor) => {
  mockBatteryMonitor.setBatteryStatus(true, 0, 22, 0.6));

  await events;
  mockBatteryMonitor.verifyBatteryStatus(battery);
}, 'event listeners fire as specified');
</script><script>
function nextEvent(target, name) {
  return new Promise(
      resolve => target.addEventListener(name, resolve, {once: true}));
}

battery_status_test(async (t, mockBatteryMonitor) => {
  mockBatteryMonitor.setBatteryStatus(true, 11, 22, 0.6));

  await events;
  mockBatteryMonitor.verifyBatteryStatus(battery);
}, 'event listeners fire as specified');
</script><script>
function nextEvent(target, name) {
  return new Promise(
      resolve => target.addEventListener(name, resolve, {once: true}));
}

battery_status_test(async (t, mockBatteryMonitor) => {
  mockBatteryMonitor.setBatteryStatus(true, 54050231670755459, 22, 0.6));

  await events;
  mockBatteryMonitor.verifyBatteryStatus(battery);
}, 'event listeners fire as specified');
</script><script>
function nextEvent(target, name) {
  return new Promise(
      resolve => target.addEventListener(name, resolve, {once: true}));
}

battery_status_test(async (t, mockBatteryMonitor) => {
  mockBatteryMonitor.setBatteryStatus(true, 11, 22, 0.6));

  await events;
  mockBatteryMonitor.verifyBatteryStatus(battery);
}, 'event listeners fire as specified');
</script>
</body>
</html>
