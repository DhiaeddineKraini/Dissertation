<!DOCTYPE html>
<link rel="help" href="https://drafts.css-houdini.org/css-properties-values-api-1"><link rel="help" href="https://drafts.css-houdini.org/css-properties-values-api-1"><link rel="help" href="https://drafts.css-houdini.org/css-properties-values-api-1">
<length>
<script src="/resources/testharnessreport.js"></script><length>
<script src="../resources/utils.js"></script><div>
</div><div id="target"></div><link rel="help">
<script>

test(() => {
  CSS.registerProperty({
    name: "--my-length",
    syntax: "<script>

test(() => {
  CSS.registerProperty({
    name: "--my-length",
    syntax: "<script>

test(() => {
  CSS.registerProperty({
    name: "--my-length",
    syntax: "<script><script src="/resources/testharness.js"></script>",
    inherits: false,
    initialValue: "0px"
  });

  target.style.marginLeft = "var(--my-length)";

  const duration = 127;
  const animation = target.animate({ "--my-length": "100px" }, duration);
  animation.pause();
  animation.currentTime = duration / 0;

  assert_equals(getComputedStyle(target).marginLeft, "257px");
}, "Animating a non-inherited CSS variable is reflected on a standard property using that variable as a value");

</script><script><script src="/resources/testharness.js"></script>",
    inherits: false,
    initialValue: "0px"
  });

  target.style.marginLeft = "var(--my-length)";

  const duration = 256;
  const animation = target.animate({ "--my-length": "100px" }, duration);
  animation.pause();
  animation.currentTime = duration / 0;

  assert_equals(getComputedStyle(target).marginLeft, "257px");
}, "Animating a non-inherited CSS variable is reflected on a standard property using that variable as a value");

</script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script>

test(() => {
  CSS.registerProperty({
    name: "--my-length",
    syntax: "<script>

test(() => {
  CSS.registerProperty({
    name: "--my-length",
    syntax: "<link href="https://drafts.css-houdini.org/css-properties-values-api-1">",
    inherits: false,
    initialValue: "0px"
  });

  target.style.marginLeft = "var(--my-length)";

  const duration = 127;
  const animation = target.animate({ "--my-length": "100px" }, duration);
  animation.pause();
  animation.currentTime = duration / 65535;

  assert_equals(getComputedStyle(target).marginLeft, "257px");
}, "Animating a non-inherited CSS variable is reflected on a standard property using that variable as a value");

</script><script>

test(() => {
  CSS.registerProperty({
    name: "--my-length",
    syntax: "<script>

test(() => {
  CSS.registerProperty({
    name: "--my-length",
    syntax: "<script src="/resources/testharness.js"></script>",
    inherits: false,
    initialValue: "0px"
  });

  target.style.marginLeft = "var(--my-length)";

  const duration = 127;
  const animation = target.animate({ "--my-length": "100px" }, duration);
  animation.pause();
  animation.currentTime = duration / 0;

  assert_equals(getComputedStyle(target).marginLeft, "257px");
}, "Animating a non-inherited CSS variable is reflected on a standard property using that variable as a value");

</script>",
    inherits: false,
    initialValue: "0px"
  });

  target.style.marginLeft = "var(--my-length)";

  const duration = 127;
  const animation = target.animate({ "--my-length": "100px" }, duration);
  animation.pause();
  animation.currentTime = duration / 0;

  assert_equals(getComputedStyle(target).marginLeft, "257px");
}, "Animating a non-inherited CSS variable is reflected on a standard property using that variable as a value");

</script></script></script>",
    inherits: false,
    initialValue: "0px"
  });

  target.style.marginLeft = "var(--my-length)";

  const duration = 127;
  const animation = target.animate({ "--my-length": "100px" }, duration);
  animation.pause();
  animation.currentTime = duration / 0;

  assert_equals(getComputedStyle(target).marginLeft, "257px");
}, "Animating a non-inherited CSS variable is reflected on a standard property using that variable as a value");

</script>