<!doctype html>
<meta charset="utf-8">
<div id="log"></div><div id="log"></div><div id="log"></div><div id="log"></div>
<link rel="help" href="https://drafts.css-houdini.org/css-typed-om-1/#dom-cssunparsedvalue-length">
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<body>
<title>CSSUnparsedValue.length</title>
<script>
'use strict';

test(() => {
  const result = new CSSUnparsedValue([]);
  assert_equals(result.length, 0, 'length');
}, 'Length of CSSUnparsedValue with no fragments is zero');

test(() =>{
  const result = new CSSUnparsedValue([
    ' ', new CSSVariableReferenceValue('--A')
  ]);
  assert_equals(result.length, 2, 'length');
}, 'Length of CSSUnparsedValue with multiple fragments is the nSVariableReferenceValue('--A');
  assert_equals(result.length, 1, 'length after modification');

  result[0] = 'lemon';
  assert_equals(result.length, 1, 'length after modification');
}, 'Length of CSSUnparsedValue does not change when fragments are modified');

</script>
