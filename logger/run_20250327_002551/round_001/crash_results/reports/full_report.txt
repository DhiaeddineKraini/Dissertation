======================================================================
        WEBPAGE ANOMALY DETECTION REPORT      
======================================================================

Report Generation Time: 2025-03-27 00:29:03

----- OVERALL TEST SUMMARY -----
Total Webpages Tested:        1
Webpages Passed without Issues: 0
Webpages with Detected Issues:   1

----- SEVERITY OF ISSUES FOUND -----
Informational Issues:   1

----- MOST COMMON ISSUES DETECTED -----
The most frequent types of issues detected were:
- Media Playback Incomplete: Detected in 2 webpages
- Media Playback Interaction Error: Detected in 2 webpages
- Console Errors Warnings: Detected in 1 webpages
- Missing Or Invalid Security Headers: Detected in 1 webpages
- Duplicate Ids: Detected in 1 webpages

----- WEBPAGES WITH DETECTED ISSUES (Details) -----

--- Webpage File: mutated_0001.html ---
Test Result: Failed with Issues
Test Duration: 188.98 seconds
Detected Anomalies:
  - Issue Type: Console Errors Warnings, Severity: Informational, Detected by: check_console_errors
    - Errors Warnings: [{'level': 'SEVERE', 'type': 'javascript_error', 'message': 'file:///home/dhia/browser-fuzzer/Dissertation/logger/run_20250327_002551/round_001/mutations/mutated_0001.html 23:17 Uncaught SyntaxError: Invalid or unexpected token', 'source': 'javascript', 'url': ''}, {'level': 'SEVERE', 'type': 'network_error', 'message': 'file:///home/dhia/browser-fuzzer/Dissertation/logger/run_20250327_002551/round_001/mutations/non_existent_huge_resource.js - Failed to load resource: net::ERR_FILE_NOT_FOUND', 'source': 'network', 'url': ''}, {'level': 'SEVERE', 'type': 'javascript_error', 'message': "file:///home/dhia/browser-fuzzer/Dissertation/logger/run_20250327_002551/round_001/mutations/mutated_0001.html 89:82 Uncaught SyntaxError: Identifier 'f' has already been declared", 'source': 'javascript', 'url': ''}, {'level': 'SEVERE', 'type': 'network_error', 'message': 'file:///home/dhia/browser-fuzzer/Dissertation/logger/run_20250327_002551/round_001/mutations/non_existent_huge_resource.js - Failed to load resource: net::ERR_FILE_NOT_FOUND', 'source': 'network', 'url': ''}, {'level': 'SEVERE', 'type': 'javascript_error', 'message': 'file:///home/dhia/browser-fuzzer/Dissertation/logger/run_20250327_002551/round_001/mutations/mutated_0001.html 112:17 Uncaught SyntaxError: Invalid or unexpected token', 'source': 'javascript', 'url': ''}, {'level': 'SEVERE', 'type': 'general', 'message': 'file:///home/dhia/browser-fuzzer/Dissertation/logger/run_20250327_002551/round_001/mutations/mutated_0001.html 151:16 "Deliberate console error from test_page_1!"', 'source': 'console-api', 'url': ''}, {'level': 'WARNING', 'type': 'general', 'message': 'file:///home/dhia/browser-fuzzer/Dissertation/logger/run_20250327_002551/round_001/mutations/mutated_0001.html 178:24 "Blocking \\u003Cscript> in body triggered!"', 'source': 'console-api', 'url': ''}, {'level': 'WARNING', 'type': 'general', 'message': 'file:///home/dhia/browser-fuzzer/Dissertation/logger/run_20250327_002551/round_001/mutations/mutated_0001.html 227:24 "Blocking \\u003Cscript> in body triggered!"', 'source': 'console-api', 'url': ''}, {'level': 'WARNING', 'type': 'general', 'message': 'file:///home/dhia/browser-fuzzer/Dissertation/logger/run_20250327_002551/round_001/mutations/mutated_0001.html 282:24 "Blocking \\u003Cscript> in body triggered!"', 'source': 'console-api', 'url': ''}, {'level': 'WARNING', 'type': 'general', 'message': 'file:///home/dhia/browser-fuzzer/Dissertation/logger/run_20250327_002551/round_001/mutations/mutated_0001.html 300:24 "Blocking \\u003Cscript> in body triggered!"', 'source': 'console-api', 'url': ''}]
    - Error Counts: {'javascript_error': 3, 'network_error': 2, 'general': 5}
  - Issue Type: Missing Or Invalid Security Headers, Severity: Informational, Detected by: check_security_issues
    - X-Content-Type-Options: Missing
    - X-Frame-Options: Missing
    - Strict-Transport-Security: Missing
    - Content-Security-Policy: Missing
    - X-Xss-Protection: Missing
  - Issue Type: Duplicate Ids, Severity: Informational, Detected by: check_dom_structure
    - Ids: ['testForm', 'firstName', 'nested1', 'nested2', 'nested3', 'nested4']
    - Elements: ['<form data-uncovered-attr="fuzz" id="testForm" onabort="triggerFuzz()" onerror="triggerFuzz()">\n<label data-uncovered-attr="fuzz" for="firstName" onabort="triggerFuzz()" onblur="triggerFuzz()">Name:<coverage-gap-fill data-depth="6" data-uncovered-attr="fuzz" onabort="triggerFuzz()"><script data-uncovered-attr="fuzz" onerror="triggerFuzz()">console.log(\'recursive script at step 0\');</script></coverage-gap-fill><coverage-gap-fill data-depth="6"><script>console.log(\'recursive script at step 0\');</script></coverage-gap-fill></label>\n<input data-uncovered-attr="fuzz" id="firstName" onabort="triggerFuzz()" type="text">\n<button data-uncovered-attr="fuzz" onabort="triggerFuzz()" onblur="triggerFuzz()" type="submit">Submit<coverage-gap-fill data-depth="6" data-uncovered-attr="fuzz" onabort="triggerFuzz()"><script data-uncovered-attr="fuzz" onerror="triggerFuzz()">console.log(\'recursive script at step 0\');</script></coverage-gap-fill><coverage-gap-fill data-depth="6"><script>console.log(\'recursive script at step 0\');</script></coverage-gap-fill></button>\n<input data-uncovered-attr="fuzz" name="in0ut" onabort="triggerFuzz()" type="number"><coverage-gap-fill data-depth="5" data-uncovered-attr="fuzz" onblur="triggerFuzz()"><script data-uncovered-attr="fuzz" onerror="triggerFuzz()">console.log(\'recursive script at step 0\');</script></coverage-gap-fill><input name="in`ut" type="number"><coverage-gap-fill data-depth="5"><script>console.log(\'recursive script at step 0\');</script></coverage-gap-fill></form>', '<form data-uncovered-attr="fuzz" id="testForm" onblur="triggerFuzz()" onerror="triggerFuzz()">\n<label data-uncovered-attr="fuzz" for="firstName" onabort="triggerFuzz()" onerror="triggerFuzz()">Name:<coverage-gap-fill data-depth="5" data-uncovered-attr="fuzz" onerror="triggerFuzz()"><script data-uncovered-attr="fuzz" onabort="triggerFuzz()">console.log(\'recursive script at step 0\');</script></coverage-gap-fill><coverage-gap-fill data-depth="5"><script>console.log(\'recursive script at step 0\');</script></coverage-gap-fill></label>\n<input data-uncovered-attr="fuzz" id="firstName" onabort="triggerFuzz()" onblur="triggerFuzz()" type="text">\n<button data-uncovered-attr="fuzz" onerror="triggerFuzz()" type="submit">Submit<coverage-gap-fill data-depth="5" data-uncovered-attr="fuzz" onerror="triggerFuzz()"><script data-uncovered-attr="fuzz" onblur="triggerFuzz()">console.log(\'recursive script at step 0\');</script></coverage-gap-fill><coverage-gap-fill data-depth="5"><script>console.log(\'recursive script at step 0\');</script></coverage-gap-fill></button>\n<input data-uncovered-attr="fuzz" name="ioput" onblur="triggerFuzz()" type="text"><coverage-gap-fill data-depth="4" data-uncovered-attr="fuzz" onabort="triggerFuzz()"><script data-uncovered-attr="fuzz" onblur="triggerFuzz()">console.log(\'recursive script at step 0\');</script></coverage-gap-fill><input name="inpud" type="number"><coverage-gap-fill data-depth="4"><script>console.log(\'recursive script at step 0\');</script></coverage-gap-fill></form>', '<input data-uncovered-attr="fuzz" id="firstName" onabort="triggerFuzz()" type="text">', '<input data-uncovered-attr="fuzz" id="firstName" onabort="triggerFuzz()" onblur="triggerFuzz()" type="text">', '<div data-uncovered-attr="fuzz" id="nested1" onblur="triggerFuzz()" onerror="triggerFuzz()">\n<div data-uncovered-attr="fuzz" id="nested2" onblur="triggerFuzz()" onerror="triggerFuzz()">\n<script data-uncovered-attr="fuzz" onabort="triggerFuzz()" onerror="triggerFuzz()">\n                console.warn("Blocking <script> in body triggered!");\n      </script>\n<div data-uncovered-attr="fuzz" id="nested3" onabort="triggerFuzz()" onerror="triggerFuzz()">\n<div data-uncovered-attr="fuzz" id="nested4" onabort="triggerFuzz()" onblur="triggerFuzz()">\n<p data-uncovered-attr="fuzz" onblur="triggerFuzz()" onerror="triggerFuzz()">Deeply nested content to test layout and DOM-size checks.</p>\n<p data-uncovered-attr="fuzz" onabort="triggerFuzz()" onblur="triggerFuzz()">Some placeholder text: Lorem ipsum dolor sit amet, which might be flagged as untranslated text or placeholders.</p>\n<!-- Keep nesting more to exceed thresholds -->\n<!-- (We won\'t literally type 2000 nodes, but the repeated approach is enough to show a large structure) -->\n<!-- You can replicate the blocks 100+ times if you really want a huge DOM. -->\n<!-- For brevity, let\'s do partial repeats. -->\n<!-- Repeated Section Start -->\n<!-- ~~~ Repeat or generate blocks ~~~ -->\n<!-- Repeated Section End -->\n</div>\n</div>\n</div>\n</div>', '<div data-uncovered-attr="fuzz" id="nested1" onabort="triggerFuzz()" onerror="triggerFuzz()">\n<div data-uncovered-attr="fuzz" id="nested2" onabort="triggerFuzz()">\n<script data-uncovered-attr="fuzz" onblur="triggerFuzz()" onerror="triggerFuzz()">\n                console.warn("Blocking <script> in body triggered!");\n      </script>\n<div data-uncovered-attr="fuzz" id="nested3" load="function handleEvent() {\n    try {\n        try {\n        const res = document.querySelectorAll(\'*\');\n        console.debug(\'Mutation success:\', res);\n    } catch(e) {\n        console.warn(\'Mutation error:\', e);\n        document.dispatchEvent(new CustomEvent(\'mutationFailed\'));\n    }\n    } catch(e) {\n        document.body.classList.add(\'mutation-error\');\n    }\n}" onabort="triggerFuzz()" onerror="triggerFuzz()">\n<div data-uncovered-attr="fuzz" id="nested4" onabort="triggerFuzz()" onblur="triggerFuzz()">\n<p data-uncovered-attr="fuzz" onabort="triggerFuzz()" onerror="triggerFuzz()">Deeply nested content to test layout and DOM-size checks.</p>\n<p data-uncovered-attr="fuzz" onerror="triggerFuzz()">Some placeholder text: Lorem ipsum dolor sit amet, which might be flagged as untranslated text or placeholders.</p>\n<!-- Keep nesting more to exceed thresholds -->\n<!-- (We won\'t literally type 2000 nodes, but the repeated approach is enough to show a large structure) -->\n<!-- You can replicate the blocks 100+ times if you really want a huge DOM. -->\n<!-- For brevity, let\'s do partial repeats. -->\n<!-- Repeated Section Start -->\n<!-- ~~~ Repeat or generate blocks ~~~ -->\n<!-- Repeated Section End -->\n</div>\n</div>\n</div>\n</div>', '<div data-uncovered-attr="fuzz" id="nested1" onblur="triggerFuzz()">\n<div data-uncovered-attr="fuzz" id="nested2" onblur="triggerFuzz()" onerror="triggerFuzz()">\n<script data-uncovered-attr="fuzz" onabort="triggerFuzz()" onblur="triggerFuzz()">\n                console.warn("Blocking <script> in body triggered!");\n      </script>\n<div data-uncovered-attr="fuzz" id="fested3" onblur="triggerFuzz()" onerror="triggerFuzz()">\n<div data-uncovered-attr="fuzz" id="nested4" onabort="triggerFuzz()" onblur="triggerFuzz()">\n<p data-uncovered-attr="fuzz" onabort="triggerFuzz()" onerror="triggerFuzz()">Deeply nested content to test layout and DOM-size checks.</p>\n&lt;!-- Google Analytics --&gt;<p data-uncovered-attr="fuzz" onabort="triggerFuzz()" onblur="triggerFuzz()">Some placeholder text: Lorem ipsum dolor sit amet, which might be flagged as untranslated text or placeholders.</p>\n<!-- Keep nesting more to exceed thresholds -->\n<!-- (We won\'t literally type 2000 nodes, but the repeated approach is enough to show a large structure) -->\n<!-- You can replicate the blocks 100+ times if you really want a huge DOM. -->\n<!-- For brevity, let\'s do partial repeats. -->\n<!-- Repeated Section Start -->\n<!-- ~~~ Repeat or generate blocks ~~~ -->\n<!-- Repeated Section End -->\n</div>\n</div>\n</div>\n</div>', '<div data-uncovered-attr="fuzz" id="nested2" onblur="triggerFuzz()" onerror="triggerFuzz()">\n<script data-uncovered-attr="fuzz" onabort="triggerFuzz()" onerror="triggerFuzz()">\n                console.warn("Blocking <script> in body triggered!");\n      </script>\n<div data-uncovered-attr="fuzz" id="nested3" onabort="triggerFuzz()" onerror="triggerFuzz()">\n<div data-uncovered-attr="fuzz" id="nested4" onabort="triggerFuzz()" onblur="triggerFuzz()">\n<p data-uncovered-attr="fuzz" onblur="triggerFuzz()" onerror="triggerFuzz()">Deeply nested content to test layout and DOM-size checks.</p>\n<p data-uncovered-attr="fuzz" onabort="triggerFuzz()" onblur="triggerFuzz()">Some placeholder text: Lorem ipsum dolor sit amet, which might be flagged as untranslated text or placeholders.</p>\n<!-- Keep nesting more to exceed thresholds -->\n<!-- (We won\'t literally type 2000 nodes, but the repeated approach is enough to show a large structure) -->\n<!-- You can replicate the blocks 100+ times if you really want a huge DOM. -->\n<!-- For brevity, let\'s do partial repeats. -->\n<!-- Repeated Section Start -->\n<!-- ~~~ Repeat or generate blocks ~~~ -->\n<!-- Repeated Section End -->\n</div>\n</div>\n</div>', '<div data-uncovered-attr="fuzz" id="nested2" onabort="triggerFuzz()">\n<script data-uncovered-attr="fuzz" onblur="triggerFuzz()" onerror="triggerFuzz()">\n                console.warn("Blocking <script> in body triggered!");\n      </script>\n<div data-uncovered-attr="fuzz" id="nested3" load="function handleEvent() {\n    try {\n        try {\n        const res = document.querySelectorAll(\'*\');\n        console.debug(\'Mutation success:\', res);\n    } catch(e) {\n        console.warn(\'Mutation error:\', e);\n        document.dispatchEvent(new CustomEvent(\'mutationFailed\'));\n    }\n    } catch(e) {\n        document.body.classList.add(\'mutation-error\');\n    }\n}" onabort="triggerFuzz()" onerror="triggerFuzz()">\n<div data-uncovered-attr="fuzz" id="nested4" onabort="triggerFuzz()" onblur="triggerFuzz()">\n<p data-uncovered-attr="fuzz" onabort="triggerFuzz()" onerror="triggerFuzz()">Deeply nested content to test layout and DOM-size checks.</p>\n<p data-uncovered-attr="fuzz" onerror="triggerFuzz()">Some placeholder text: Lorem ipsum dolor sit amet, which might be flagged as untranslated text or placeholders.</p>\n<!-- Keep nesting more to exceed thresholds -->\n<!-- (We won\'t literally type 2000 nodes, but the repeated approach is enough to show a large structure) -->\n<!-- You can replicate the blocks 100+ times if you really want a huge DOM. -->\n<!-- For brevity, let\'s do partial repeats. -->\n<!-- Repeated Section Start -->\n<!-- ~~~ Repeat or generate blocks ~~~ -->\n<!-- Repeated Section End -->\n</div>\n</div>\n</div>', '<div data-uncovered-attr="fuzz" id="nested2" onblur="triggerFuzz()" onerror="triggerFuzz()">\n<script data-uncovered-attr="fuzz" onabort="triggerFuzz()" onblur="triggerFuzz()">\n                console.warn("Blocking <script> in body triggered!");\n      </script>\n<div data-uncovered-attr="fuzz" id="fested3" onblur="triggerFuzz()" onerror="triggerFuzz()">\n<div data-uncovered-attr="fuzz" id="nested4" onabort="triggerFuzz()" onblur="triggerFuzz()">\n<p data-uncovered-attr="fuzz" onabort="triggerFuzz()" onerror="triggerFuzz()">Deeply nested content to test layout and DOM-size checks.</p>\n&lt;!-- Google Analytics --&gt;<p data-uncovered-attr="fuzz" onabort="triggerFuzz()" onblur="triggerFuzz()">Some placeholder text: Lorem ipsum dolor sit amet, which might be flagged as untranslated text or placeholders.</p>\n<!-- Keep nesting more to exceed thresholds -->\n<!-- (We won\'t literally type 2000 nodes, but the repeated approach is enough to show a large structure) -->\n<!-- You can replicate the blocks 100+ times if you really want a huge DOM. -->\n<!-- For brevity, let\'s do partial repeats. -->\n<!-- Repeated Section Start -->\n<!-- ~~~ Repeat or generate blocks ~~~ -->\n<!-- Repeated Section End -->\n</div>\n</div>\n</div>', '<div data-uncovered-attr="fuzz" id="nested2" onabort="triggerFuzz()">\n&lt;!-- Temporary fix --&gt;<script data-uncovered-attr="fuzz" onabort="triggerFuzz()" onerror="triggerFuzz()">\n                console.warn("Blocking <script> in body triggered!");\n      </script>\n<div data-uncovered-attr="fuzz" id="nested3" onblur="triggerFuzz()">\n<div data-uncovered-attr="fuzz" id="nested4" onabort="triggerFuzz()" onerror="triggerFuzz()">\n<p data-uncovered-attr="fuzz" onabort="triggerFuzz()" onerror="triggerFuzz()">Deeply nested content to test layout and DOM-size checks.</p>\n<p data-uncovered-attr="fuzz" onblur="triggerFuzz()">Some placeholder text: Lorem ipsum dolor sit amet, which might be flagged as untranslated text or placeholders.</p>\n<!-- Keep nesting more to exceed thresholds -->\n<!-- (We won\'t literally type 2000 nodes, but the repeated approach is enough to show a large structure) -->\n<!-- You can replicate the blocks 100+ times if you really want a huge DOM. -->\n<!-- For brevity, let\'s do partial repeats. -->\n<!-- Repeated Section Start -->\n<!-- ~~~ Repeat or generate blocks ~~~ -->\n<!-- Repeated Section End -->\n</div>\n</div>\n</div>', '<div data-uncovered-attr="fuzz" id="nested3" onabort="triggerFuzz()" onerror="triggerFuzz()">\n<div data-uncovered-attr="fuzz" id="nested4" onabort="triggerFuzz()" onblur="triggerFuzz()">\n<p data-uncovered-attr="fuzz" onblur="triggerFuzz()" onerror="triggerFuzz()">Deeply nested content to test layout and DOM-size checks.</p>\n<p data-uncovered-attr="fuzz" onabort="triggerFuzz()" onblur="triggerFuzz()">Some placeholder text: Lorem ipsum dolor sit amet, which might be flagged as untranslated text or placeholders.</p>\n<!-- Keep nesting more to exceed thresholds -->\n<!-- (We won\'t literally type 2000 nodes, but the repeated approach is enough to show a large structure) -->\n<!-- You can replicate the blocks 100+ times if you really want a huge DOM. -->\n<!-- For brevity, let\'s do partial repeats. -->\n<!-- Repeated Section Start -->\n<!-- ~~~ Repeat or generate blocks ~~~ -->\n<!-- Repeated Section End -->\n</div>\n</div>', '<div data-uncovered-attr="fuzz" id="nested3" load="function handleEvent() {\n    try {\n        try {\n        const res = document.querySelectorAll(\'*\');\n        console.debug(\'Mutation success:\', res);\n    } catch(e) {\n        console.warn(\'Mutation error:\', e);\n        document.dispatchEvent(new CustomEvent(\'mutationFailed\'));\n    }\n    } catch(e) {\n        document.body.classList.add(\'mutation-error\');\n    }\n}" onabort="triggerFuzz()" onerror="triggerFuzz()">\n<div data-uncovered-attr="fuzz" id="nested4" onabort="triggerFuzz()" onblur="triggerFuzz()">\n<p data-uncovered-attr="fuzz" onabort="triggerFuzz()" onerror="triggerFuzz()">Deeply nested content to test layout and DOM-size checks.</p>\n<p data-uncovered-attr="fuzz" onerror="triggerFuzz()">Some placeholder text: Lorem ipsum dolor sit amet, which might be flagged as untranslated text or placeholders.</p>\n<!-- Keep nesting more to exceed thresholds -->\n<!-- (We won\'t literally type 2000 nodes, but the repeated approach is enough to show a large structure) -->\n<!-- You can replicate the blocks 100+ times if you really want a huge DOM. -->\n<!-- For brevity, let\'s do partial repeats. -->\n<!-- Repeated Section Start -->\n<!-- ~~~ Repeat or generate blocks ~~~ -->\n<!-- Repeated Section End -->\n</div>\n</div>', '<div data-uncovered-attr="fuzz" id="nested3" onblur="triggerFuzz()">\n<div data-uncovered-attr="fuzz" id="nested4" onabort="triggerFuzz()" onerror="triggerFuzz()">\n<p data-uncovered-attr="fuzz" onabort="triggerFuzz()" onerror="triggerFuzz()">Deeply nested content to test layout and DOM-size checks.</p>\n<p data-uncovered-attr="fuzz" onblur="triggerFuzz()">Some placeholder text: Lorem ipsum dolor sit amet, which might be flagged as untranslated text or placeholders.</p>\n<!-- Keep nesting more to exceed thresholds -->\n<!-- (We won\'t literally type 2000 nodes, but the repeated approach is enough to show a large structure) -->\n<!-- You can replicate the blocks 100+ times if you really want a huge DOM. -->\n<!-- For brevity, let\'s do partial repeats. -->\n<!-- Repeated Section Start -->\n<!-- ~~~ Repeat or generate blocks ~~~ -->\n<!-- Repeated Section End -->\n</div>\n</div>', '<div data-uncovered-attr="fuzz" id="nested4" onabort="triggerFuzz()" onblur="triggerFuzz()">\n<p data-uncovered-attr="fuzz" onblur="triggerFuzz()" onerror="triggerFuzz()">Deeply nested content to test layout and DOM-size checks.</p>\n<p data-uncovered-attr="fuzz" onabort="triggerFuzz()" onblur="triggerFuzz()">Some placeholder text: Lorem ipsum dolor sit amet, which might be flagged as untranslated text or placeholders.</p>\n<!-- Keep nesting more to exceed thresholds -->\n<!-- (We won\'t literally type 2000 nodes, but the repeated approach is enough to show a large structure) -->\n<!-- You can replicate the blocks 100+ times if you really want a huge DOM. -->\n<!-- For brevity, let\'s do partial repeats. -->\n<!-- Repeated Section Start -->\n<!-- ~~~ Repeat or generate blocks ~~~ -->\n<!-- Repeated Section End -->\n</div>', '<div data-uncovered-attr="fuzz" id="nested4" onabort="triggerFuzz()" onblur="triggerFuzz()">\n<p data-uncovered-attr="fuzz" onabort="triggerFuzz()" onerror="triggerFuzz()">Deeply nested content to test layout and DOM-size checks.</p>\n<p data-uncovered-attr="fuzz" onerror="triggerFuzz()">Some placeholder text: Lorem ipsum dolor sit amet, which might be flagged as untranslated text or placeholders.</p>\n<!-- Keep nesting more to exceed thresholds -->\n<!-- (We won\'t literally type 2000 nodes, but the repeated approach is enough to show a large structure) -->\n<!-- You can replicate the blocks 100+ times if you really want a huge DOM. -->\n<!-- For brevity, let\'s do partial repeats. -->\n<!-- Repeated Section Start -->\n<!-- ~~~ Repeat or generate blocks ~~~ -->\n<!-- Repeated Section End -->\n</div>', '<div data-uncovered-attr="fuzz" id="nested4" onabort="triggerFuzz()" onblur="triggerFuzz()">\n<p data-uncovered-attr="fuzz" onabort="triggerFuzz()" onerror="triggerFuzz()">Deeply nested content to test layout and DOM-size checks.</p>\n&lt;!-- Google Analytics --&gt;<p data-uncovered-attr="fuzz" onabort="triggerFuzz()" onblur="triggerFuzz()">Some placeholder text: Lorem ipsum dolor sit amet, which might be flagged as untranslated text or placeholders.</p>\n<!-- Keep nesting more to exceed thresholds -->\n<!-- (We won\'t literally type 2000 nodes, but the repeated approach is enough to show a large structure) -->\n<!-- You can replicate the blocks 100+ times if you really want a huge DOM. -->\n<!-- For brevity, let\'s do partial repeats. -->\n<!-- Repeated Section Start -->\n<!-- ~~~ Repeat or generate blocks ~~~ -->\n<!-- Repeated Section End -->\n</div>', '<div data-uncovered-attr="fuzz" id="nested4" onabort="triggerFuzz()" onerror="triggerFuzz()">\n<p data-uncovered-attr="fuzz" onabort="triggerFuzz()" onerror="triggerFuzz()">Deeply nested content to test layout and DOM-size checks.</p>\n<p data-uncovered-attr="fuzz" onblur="triggerFuzz()">Some placeholder text: Lorem ipsum dolor sit amet, which might be flagged as untranslated text or placeholders.</p>\n<!-- Keep nesting more to exceed thresholds -->\n<!-- (We won\'t literally type 2000 nodes, but the repeated approach is enough to show a large structure) -->\n<!-- You can replicate the blocks 100+ times if you really want a huge DOM. -->\n<!-- For brevity, let\'s do partial repeats. -->\n<!-- Repeated Section Start -->\n<!-- ~~~ Repeat or generate blocks ~~~ -->\n<!-- Repeated Section End -->\n</div>']
  - Issue Type: Blocking Scripts In Body, Severity: Informational, Detected by: check_dom_structure
    - Scripts: ['<script data-uncovered-attr="fuzz" onerror="triggerFuzz()">console.log(\'recursive script at step 0\');</script>', '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()" onblur="triggerFuzz()">console.log(\'Mutation: \');</script>', '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()">console.log(\'recursive script at step 0\');</script>', "<script>console.log('recursive script at step 0');</script>", '<script>function triggerFuzz() {}</script>', '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()">console.log(\'recursive script at step 0\');</script>', '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()" onerror="triggerFuzz()">\n                var script = document.createElement(\'script\');\n    script.src = "http:    document.head.appendChild(script);\n\n                let bigArray = [];\n    for(let i=0; i<500000; i++) {\n      bigArray.push(Math.random());\n    }\n    console.log("Allocated bigArray with 500k elements to stress memory usage.");\n\n            const startPerf = performance.now();\n    while (performance.now() - startPerf < 1000) {  }\n\n        document.cookie = "test_page_2_cookie=some_value; path=/;";\n  </script>', '<script data-uncovered-attr="fuzz" onblur="triggerFuzz()">console.log(\'recursive script at step 0\');</script>', "<script>console.log('recursive script at step 0');</script>", '<script data-uncovered-attr="fuzz" onerror="triggerFuzz()">console.log(\'recursive script at step 0\');</script>', "<script>console.log('recursive script at step 0');</script>", '<script data-uncovered-attr="fuzz" onerror="triggerFuzz()">console.log(\'recursive script at step 0\');</script>', "<script>console.log('recursive script at step 0');</script>", '<script data-uncovered-attr="fuzz" onerror="triggerFuzz()">console.log(\'recursive script at step 0\');</script>', "<script>console.log('recursive script at step 0');</script>", '<script data-uncovered-attr="fuzz" onblur="triggerFuzz()" onerror="triggerFuzz()">\n            document.cookie = "test_page_2_cookie_delete=delete_me; path=/;";\n        document.cookie = "test_page_2_cookie_delete=; path=/; expires=Thu, 01 Jan 1970 00:00:00 UTC;";\n\n        const f = document.getElementById("testForm");\n    f.addEventListener(\'submit\', function(evt) {\n            evt.preventDefault();\n      console.warn("Form submission was prevented in test_page_2!");\n    });\n\n        f.addEventListener(\'mouseover\', () => {\n      f.dataset.mouseoverTest = "true";\n    });\n  </script>', "<script>console.log('recursive script at step 0');</script>", '<script data-uncovered-attr="fuzz" onblur="triggerFuzz()">console.log(\'recursive script at step 0\');</script>', '<script data-uncovered-attr="fuzz" onerror="triggerFuzz()" src="non_existent_huge_resource.js"></script>', '<script data-uncovered-attr="fuzz" onerror="triggerFuzz()">console.log(\'recursive script at step 0\');</script>', "<script>console.log('recursive script at step 0');</script>", '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()">console.log(\'recursive script at step 0\');</script>', "<script>console.log('recursive script at step 0');</script>", '<script data-uncovered-attr="fuzz" onblur="triggerFuzz()">console.log(\'recursive script at step 0\');</script>', "<script>console.log('recursive script at step 0');</script>", '<script data-uncovered-attr="fuzz" onblur="triggerFuzz()">console.log(\'recursive script at step 0\');</script>', "<script>console.log('recursive script at step 0');</script>", '<script data-uncovered-attr="fuzz" onblur="triggerFuzz()" onerror="triggerFuzz()">\n            document.cookie = "test_page_2_cookie_delete=delete_me; path=/;";\n        document.cookie = "test_page_2_cookie_delete=; path=/; expires=Thu, 01 Jan 1970 00:00:00 UTC;";\n\n        const f = document.getElementById("testForm");\n    f.addEventListener(\'submit\', function(evt) {\n            evt.preventDefault();\n      console.warn("Form submission was prevented in test_page_2!");\n    });\n\n        f.addEventListener(\'mouseover\', () => {\n      f.dataset.mouseoverTest = "true";\n    });\n  </script>', "<script>console.log('recursive script at step 0');</script>", '<script data-uncovered-attr="fuzz" onerror="triggerFuzz()">console.log(\'recursive script at step 0\');</script>', '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()" onblur="triggerFuzz()" src="non_existent_huge_resource.js"></script>', '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()">console.log(\'recursive script at step 0\');</script>', '<script data-uncovered-attr="fuzz" onblur="triggerFuzz()">\n                var script = document.createElement(\'script\');\n    script.src = "http:    document.head.appendChild(script);\n\n                let bigArray = [];\n    for(let i=0; i<500000; i++) {\n      bigArray.push(Math.random());\n    }\n    console.log("Allocated bigArray with 500k elements to stress memory usage.");\n\n            const startPerf = performance.now();\n    while (performance.now() - startPerf < 1000) {  }\n\n        document.cookie = "test_page_2_cookie=some_value; path=/;";\n  </script>', '<script data-uncovered-attr="fuzz" onerror="triggerFuzz()">console.log(\'recursive script at step 0\');</script>', "<script>console.log('recursive script at step 0');</script>", '<script data-uncovered-attr="fuzz" onblur="triggerFuzz()">console.log(\'recursive script at step 0\');</script>', '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()" onblur="triggerFuzz()">\n        console.error("Deliberate console error from test_page_1!");\n\n        function suspiciousHandler() {\n            eval("console.log(\'eval call!\');");\n    }\n  </script>', '<script click="function handleEvent() {\n    try {\n        try {\n        const res = new ArrayBuffer(1e6);\n        console.debug(\'Mutation success:\', res);\n    } catch(e) {\n        console.warn(\'Mutation error:\', e);\n        document.dispatchEvent(new CustomEvent(\'mutationFailed\'));\n    }\n    } catch(e) {\n        document.body.classList.add(\'mutation-error\');\n    }\n}" data-uncovered-attr="fuzz" onblur="triggerFuzz()">console.log(\'recursive script at step 0\');</script>', "<script>console.log('recursive script at step 0');</script>", '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()" onerror="triggerFuzz()">\n                console.warn("Blocking <script> in body triggered!");\n      </script>', "<script>console.log('recursive script at step 0');</script>", '<script data-uncovered-attr="fuzz" onerror="triggerFuzz()">console.log(\'recursive script at step 0\');</script>', '<script data-uncovered-attr="fuzz" onblur="triggerFuzz()">console.log(\'recursive script at step 0\');</script>', "<script>console.log('recursive script at step 0');</script>", '<script data-uncovered-attr="fuzz" onerror="triggerFuzz()">console.log(\'recursive script at step 0\');</script>', "<script>console.log('recursive script at step 0');</script>", '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()">console.log(\'recursive script at step 0\');</script>', "<script>console.log('recursive script at step 0');</script>", "<script>console.log('recursive script at step 0');</script>", '<script data-uncovered-attr="fuzz" onblur="triggerFuzz()">console.log(\'recursive script at step 0\');</script>', '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()">console.log(\'recursive script at step 0\');</script>', "<script>console.log('recursive script at step 0');</script>", '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()" onblur="triggerFuzz()">\n        try {\n      localStorage.setItem(\'test_page_1_local_key\', \'test_value_1\');\n      sessionStorage.setItem(\'test_page_1_session_key\', \'session_value_1\');\n    } catch (e) {\n      console.error("Storage error in test_page_1: " + e);\n    }\n  </script>', '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()">console.log(\'recursive script at step 0\');</script>', "<script>console.log('recursive script at step 0');</script>", "<script>console.log('recursive script at step 0');</script>", '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()" onerror="triggerFuzz()">try { document.currentScript.parentNode.setAttribute(\'data-adv-entangle-0\', performance.now().toString()); } catch(e) {}</script>', '<script data-uncovered-attr="fuzz" onblur="triggerFuzz()" onerror="triggerFuzz()">\n                console.warn("Blocking <script> in body triggered!");\n      </script>', "<script>console.log('recursive script at step 0');</script>", '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()">console.log(\'recursive script at step 0\');</script>', '<script data-uncovered-attr="fuzz" onerror="triggerFuzz()">console.log(\'recursive script at step 0\');</script>', "<script>console.log('recursive script at step 0');</script>", '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()">console.log(\'recursive script at step 0\');</script>', "<script>console.log('recursive script at step 0');</script>", '<script data-uncovered-attr="fuzz" onerror="triggerFuzz()">console.log(\'recursive script at step 0\');</script>', "<script>console.log('recursive script at step 0');</script>", "<script>console.log('recursive script at step 0');</script>", '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()">console.log(\'recursive script at step 0\');</script>', '<script data-uncovered-attr="fuzz" onblur="triggerFuzz()">console.log(\'recursive script at step 0\');</script>', "<script>console.log('recursive script at step 0');</script>", '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()" onblur="triggerFuzz()">\n        try {\n      localStorage.setItem(\'test_page_1_local_key\', \'test_value_1\');\n      sessionStorage.setItem(\'test_page_1_session_key\', \'session_value_1\');\n    } catch (e) {\n      console.error("Storage error in test_page_1: " + e);\n    }\n  </script>', '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()" onerror="triggerFuzz()">try { document.currentScript.parentNode.setAttribute(\'data-adv-entangle-0\', performance.now().toString()); } catch(e) {}</script>', '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()" onblur="triggerFuzz()">\n                console.warn("Blocking <script> in body triggered!");\n      </script>', '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()" onerror="triggerFuzz()">\n                console.warn("Blocking <script> in body triggered!");\n      </script>', '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()">console.log(\'recursive script at step 0\');</script>', "<script>console.log('recursive script at step 0');</script>"]
  - Issue Type: Media Playback Incomplete, Severity: Informational, Detected by: check_media_playback
    - Details: readyState: 0
  - Issue Type: Media Playback Interaction Error, Severity: Informational, Detected by: check_media_playback
    - Details: 'WebElement' object has no attribute 'play'
  - Issue Type: Media Playback Incomplete, Severity: Informational, Detected by: check_media_playback
    - Details: readyState: 0
  - Issue Type: Media Playback Interaction Error, Severity: Informational, Detected by: check_media_playback
    - Details: 'WebElement' object has no attribute 'play'
  - Issue Type: Storage Error, Severity: Informational, Detected by: check_storage
    - Details: Message: invalid cookie domain
  (Session info: chrome=135.0.7019.0)
Stacktrace:
#0 0x5816272250b6 <unknown>
#1 0x58162a4adce8 <unknown>
#2 0x58162a4727c9 <unknown>
#3 0x581627331e80 <unknown>
#4 0x5816274a8b90 <unknown>
#5 0x581627438a25 <unknown>
#6 0x58162748d58e <unknown>
#7 0x58162748c5d9 <unknown>
#8 0x58162743bb62 <unknown>
#9 0x5816273d5fc9 <unknown>
#10 0x5816273d2b21 <unknown>
#11 0x5816273d566d <unknown>
#12 0x5816272f1d67 <unknown>
#13 0x58162a2a6bac <unknown>
#14 0x58162a368dd2 <unknown>
#15 0x58162a3671bc <unknown>
#16 0x58162a36a0eb <unknown>
#17 0x58162a2e8459 <unknown>
#18 0x58162a36b3f0 <unknown>
#19 0x58162a267a31 <unknown>
#20 0x58162a41a95c <unknown>
#21 0x58162a41b1e0 <unknown>
#22 0x58162a460ada <unknown>
#23 0x58162727bb87 <unknown>
#24 0x7c683a894ac3 <unknown>
#25 0x7c683a926850 <unknown>

  - Issue Type: Mouseover Event Failed, Severity: Informational, Detected by: check_event_handling
    - Details: Mouseover event handler not executed on element
  - Issue Type: Missing Lang Attribute, Severity: Informational, Detected by: check_localization
    - Details: The 'lang' attribute is missing from the <html> tag.
  - Issue Type: Slow Page Load, Severity: Informational, Detected by: check_performance
    - Details: Page load time exceeds threshold: 6342 ms
  - Issue Type: Potential Xss In Html, Severity: Informational, Detected by: check_xss_patterns
    - Details: [{'pattern': '<script[^>]*>[^<]*</script>', 'match': "<script>console.log('recursive script at step 0');</script>"}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': "<script>console.log('recursive script at step 0');</script>"}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onerror="triggerFuzz()">console.log(\'recursive script at step 0\');</script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()" onblur="triggerFuzz()">console.log(\'Mutation: \');</script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()">console.log(\'recursive script at step 0\');</script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': "<script>console.log('recursive script at step 0');</script>"}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script>function triggerFuzz() {}</script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script async="">\n        window.__jsCoverage = new Proxy({}, {\n            get(t, p) { return t[p] || 0 },\n            set(t, p, v) { t[p] = (t[p] || 0) + 1; return true }\n        });\n        </script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()">console.log(\'recursive script at step 0\');</script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': "<script>console.log('recursive script at step 0');</script>"}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': "<script>console.log('recursive script at step 0');</script>"}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onblur="triggerFuzz()">console.log(\'recursive script at step 0\');</script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': "<script>console.log('recursive script at step 0');</script>"}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onerror="triggerFuzz()">console.log(\'recursive script at step 0\');</script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': "<script>console.log('recursive script at step 0');</script>"}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onerror="triggerFuzz()">console.log(\'recursive script at step 0\');</script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': "<script>console.log('recursive script at step 0');</script>"}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onerror="triggerFuzz()">console.log(\'recursive script at step 0\');</script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': "<script>console.log('recursive script at step 0');</script>"}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onblur="triggerFuzz()" onerror="triggerFuzz()">\n            document.cookie = "test_page_2_cookie_delete=delete_me; path=/;";\n        document.cookie = "test_page_2_cookie_delete=; path=/; expires=Thu, 01 Jan 1970 00:00:00 UTC;";\n\n        const f = document.getElementById("testForm");\n    f.addEventListener(\'submit\', function(evt) {\n            evt.preventDefault();\n      console.warn("Form submission was prevented in test_page_2!");\n    });\n\n        f.addEventListener(\'mouseover\', () => {\n      f.dataset.mouseoverTest = "true";\n    });\n  </script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': "<script>console.log('recursive script at step 0');</script>"}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onblur="triggerFuzz()">console.log(\'recursive script at step 0\');</script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onerror="triggerFuzz()" src="non_existent_huge_resource.js"></script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onerror="triggerFuzz()">console.log(\'recursive script at step 0\');</script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': "<script>console.log('recursive script at step 0');</script>"}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()">console.log(\'recursive script at step 0\');</script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': "<script>console.log('recursive script at step 0');</script>"}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onblur="triggerFuzz()">console.log(\'recursive script at step 0\');</script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': "<script>console.log('recursive script at step 0');</script>"}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onblur="triggerFuzz()">console.log(\'recursive script at step 0\');</script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': "<script>console.log('recursive script at step 0');</script>"}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onblur="triggerFuzz()" onerror="triggerFuzz()">\n            document.cookie = "test_page_2_cookie_delete=delete_me; path=/;";\n        document.cookie = "test_page_2_cookie_delete=; path=/; expires=Thu, 01 Jan 1970 00:00:00 UTC;";\n\n        const f = document.getElementById("testForm");\n    f.addEventListener(\'submit\', function(evt) {\n            evt.preventDefault();\n      console.warn("Form submission was prevented in test_page_2!");\n    });\n\n        f.addEventListener(\'mouseover\', () => {\n      f.dataset.mouseoverTest = "true";\n    });\n  </script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': "<script>console.log('recursive script at step 0');</script>"}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onerror="triggerFuzz()">console.log(\'recursive script at step 0\');</script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()" onblur="triggerFuzz()" src="non_existent_huge_resource.js"></script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()">console.log(\'recursive script at step 0\');</script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': "<script>console.log('recursive script at step 0');</script>"}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': "<script>console.log('recursive script at step 0');</script>"}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onerror="triggerFuzz()">console.log(\'recursive script at step 0\');</script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': "<script>console.log('recursive script at step 0');</script>"}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onblur="triggerFuzz()">console.log(\'recursive script at step 0\');</script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()" onblur="triggerFuzz()">\n        console.error("Deliberate console error from test_page_1!");\n\n        function suspiciousHandler() {\n            eval("console.log(\'eval call!\');");\n    }\n  </script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script click="function handleEvent() {\n    try {\n        try {\n        const res = new ArrayBuffer(1e6);\n        console.debug(\'Mutation success:\', res);\n    } catch(e) {\n        console.warn(\'Mutation error:\', e);\n        document.dispatchEvent(new CustomEvent(\'mutationFailed\'));\n    }\n    } catch(e) {\n        document.body.classList.add(\'mutation-error\');\n    }\n}" data-uncovered-attr="fuzz" onblur="triggerFuzz()">console.log(\'recursive script at step 0\');</script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': "<script>console.log('recursive script at step 0');</script>"}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script> in body triggered!");\n      </script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': "<script>console.log('recursive script at step 0');</script>"}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onerror="triggerFuzz()">console.log(\'recursive script at step 0\');</script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onblur="triggerFuzz()">console.log(\'recursive script at step 0\');</script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': "<script>console.log('recursive script at step 0');</script>"}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onerror="triggerFuzz()">console.log(\'recursive script at step 0\');</script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': "<script>console.log('recursive script at step 0');</script>"}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()">console.log(\'recursive script at step 0\');</script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': "<script>console.log('recursive script at step 0');</script>"}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': "<script>console.log('recursive script at step 0');</script>"}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onblur="triggerFuzz()">console.log(\'recursive script at step 0\');</script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()">console.log(\'recursive script at step 0\');</script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': "<script>console.log('recursive script at step 0');</script>"}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()" onblur="triggerFuzz()">\n        try {\n      localStorage.setItem(\'test_page_1_local_key\', \'test_value_1\');\n      sessionStorage.setItem(\'test_page_1_session_key\', \'session_value_1\');\n    } catch (e) {\n      console.error("Storage error in test_page_1: " + e);\n    }\n  </script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()">console.log(\'recursive script at step 0\');</script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': "<script>console.log('recursive script at step 0');</script>"}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script async="" data-uncovered-attr="fuzz" onabort="triggerFuzz()">console.log(\'Mutation: \');</script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': "<script>console.log('recursive script at step 0');</script>"}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()" onerror="triggerFuzz()">try { document.currentScript.parentNode.setAttribute(\'data-adv-entangle-0\', performance.now().toString()); } catch(e) {}</script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script> in body triggered!");\n      </script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': "<script>console.log('recursive script at step 0');</script>"}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()">console.log(\'recursive script at step 0\');</script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onerror="triggerFuzz()">console.log(\'recursive script at step 0\');</script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': "<script>console.log('recursive script at step 0');</script>"}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()">console.log(\'recursive script at step 0\');</script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': "<script>console.log('recursive script at step 0');</script>"}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onerror="triggerFuzz()">console.log(\'recursive script at step 0\');</script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': "<script>console.log('recursive script at step 0');</script>"}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': "<script>console.log('recursive script at step 0');</script>"}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()">console.log(\'recursive script at step 0\');</script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onblur="triggerFuzz()">console.log(\'recursive script at step 0\');</script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': "<script>console.log('recursive script at step 0');</script>"}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()" onblur="triggerFuzz()">\n        try {\n      localStorage.setItem(\'test_page_1_local_key\', \'test_value_1\');\n      sessionStorage.setItem(\'test_page_1_session_key\', \'session_value_1\');\n    } catch (e) {\n      console.error("Storage error in test_page_1: " + e);\n    }\n  </script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()" onerror="triggerFuzz()">try { document.currentScript.parentNode.setAttribute(\'data-adv-entangle-0\', performance.now().toString()); } catch(e) {}</script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script> in body triggered!");\n      </script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script> in body triggered!");\n      </script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()">console.log(\'recursive script at step 0\');</script>'}, {'pattern': '<script[^>]*>[^<]*</script>', 'match': "<script>console.log('recursive script at step 0');</script>"}, {'element_info': {'tag': 'script', 'outerHTML': '<script data-uncovered-attr="fuzz" onabort="triggerFuzz()" onblur="triggerFuzz()">\n        console.error("Deliberate console error from test_page_1!");\n\n        function suspiciousHandler() {\n            eval("console.log(\'eval call!\');");\n    }\n  </script>'}, 'pattern': 'eval\\(', 'match': 'eval('}]

======================================================================
       END OF ANOMALY REPORT      
======================================================================
