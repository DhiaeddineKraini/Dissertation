{
  "metadata": {
    "system": {
      "system": "Linux",
      "node": "dissertation",
      "release": "6.8.0-1025-gcp",
      "version": "#27~22.04.1-Ubuntu SMP Mon Feb 24 16:42:24 UTC 2025",
      "machine": "x86_64",
      "processor": "x86_64"
    },
    "execution_time": "2025-03-27T00:29:03.395228",
    "chrome_version": "Chromium 135.0.7019.0"
  },
  "tests": {
    "mutated_0001.html": {
      "file": "mutated_0001.html",
      "start_time": "2025-03-27 00:25:54.369184",
      "artifacts": {},
      "metrics": {
        "dom_nodes": 211,
        "load_time": 6342,
        "cpu_usage": 12.4,
        "memory_usage": 0.0,
        "disk_read": 0.0,
        "disk_write": 0.68359375,
        "js_heap": 33812968,
        "performance_data_cdp": [
          {
            "name": "Timestamp",
            "value": 242103.793285
          },
          {
            "name": "AudioHandlers",
            "value": 0
          },
          {
            "name": "AudioWorkletProcessors",
            "value": 0
          },
          {
            "name": "Documents",
            "value": 7
          },
          {
            "name": "Frames",
            "value": 7
          },
          {
            "name": "JSEventListeners",
            "value": 213
          },
          {
            "name": "LayoutObjects",
            "value": 275
          },
          {
            "name": "MediaKeySessions",
            "value": 0
          },
          {
            "name": "MediaKeys",
            "value": 0
          },
          {
            "name": "Nodes",
            "value": 1377
          },
          {
            "name": "Resources",
            "value": 12
          },
          {
            "name": "ContextLifecycleStateObservers",
            "value": 15
          },
          {
            "name": "V8PerContextDatas",
            "value": 1
          },
          {
            "name": "WorkerGlobalScopes",
            "value": 0
          },
          {
            "name": "UACSSResources",
            "value": 6
          },
          {
            "name": "RTCPeerConnections",
            "value": 0
          },
          {
            "name": "ResourceFetchers",
            "value": 7
          },
          {
            "name": "AdSubframes",
            "value": 0
          },
          {
            "name": "DetachedScriptStates",
            "value": 0
          },
          {
            "name": "ArrayBufferContents",
            "value": 0
          },
          {
            "name": "LayoutCount",
            "value": 35
          },
          {
            "name": "RecalcStyleCount",
            "value": 994
          },
          {
            "name": "LayoutDuration",
            "value": 0.505784
          },
          {
            "name": "RecalcStyleDuration",
            "value": 6.317854
          },
          {
            "name": "DevToolsCommandDuration",
            "value": 27.296168
          },
          {
            "name": "ScriptDuration",
            "value": 0.500037
          },
          {
            "name": "V8CompileDuration",
            "value": 0.108148
          },
          {
            "name": "TaskDuration",
            "value": 48.762533
          },
          {
            "name": "TaskOtherDuration",
            "value": 14.034542
          },
          {
            "name": "ThreadTime",
            "value": 48.525693
          },
          {
            "name": "ProcessTime",
            "value": 82.83
          },
          {
            "name": "JSHeapUsedSize",
            "value": 34102408
          },
          {
            "name": "JSHeapTotalSize",
            "value": 53514240
          },
          {
            "name": "FirstMeaningfulPaint",
            "value": 242028.027877
          },
          {
            "name": "DomContentLoaded",
            "value": 242033.313467
          },
          {
            "name": "NavigationStart",
            "value": 242027.01023
          }
        ],
        "coverage_data": [
          {
            "functions": [
              {
                "functionName": "",
                "isBlockCoverage": false,
                "ranges": [
                  {
                    "count": 1,
                    "endOffset": 1,
                    "startOffset": 0
                  }
                ]
              }
            ],
            "scriptId": "1742",
            "url": ""
          },
          {
            "functions": [
              {
                "functionName": "",
                "isBlockCoverage": false,
                "ranges": [
                  {
                    "count": 1,
                    "endOffset": 1,
                    "startOffset": 0
                  }
                ]
              }
            ],
            "scriptId": "1743",
            "url": ""
          },
          {
            "functions": [
              {
                "functionName": "",
                "isBlockCoverage": false,
                "ranges": [
                  {
                    "count": 1,
                    "endOffset": 1,
                    "startOffset": 0
                  }
                ]
              }
            ],
            "scriptId": "1744",
            "url": ""
          },
          {
            "functions": [
              {
                "functionName": "",
                "isBlockCoverage": false,
                "ranges": [
                  {
                    "count": 1,
                    "endOffset": 1,
                    "startOffset": 0
                  }
                ]
              }
            ],
            "scriptId": "1745",
            "url": ""
          },
          {
            "functions": [
              {
                "functionName": "",
                "isBlockCoverage": false,
                "ranges": [
                  {
                    "count": 1,
                    "endOffset": 13937,
                    "startOffset": 0
                  }
                ]
              },
              {
                "functionName": "",
                "isBlockCoverage": false,
                "ranges": [
                  {
                    "count": 1,
                    "endOffset": 13936,
                    "startOffset": 1
                  }
                ]
              },
              {
                "functionName": "",
                "isBlockCoverage": false,
                "ranges": [
                  {
                    "count": 1,
                    "endOffset": 12985,
                    "startOffset": 21
                  }
                ]
              },
              {
                "functionName": "newError",
                "isBlockCoverage": false,
                "ranges": [
                  {
                    "count": 0,
                    "endOffset": 1616,
                    "startOffset": 1507
                  }
                ]
              },
              {
                "functionName": "isNodeReachable",
                "isBlockCoverage": false,
                "ranges": [
                  {
                    "count": 0,
                    "endOffset": 1881,
                    "startOffset": 1618
                  }
                ]
              },
              {
                "functionName": "getNodeRoot",
                "isBlockCoverage": false,
                "ranges": [
                  {
                    "count": 0,
                    "endOffset": 2250,
                    "startOffset": 2137
                  }
                ]
              },
              {
                "functionName": "getNodeRootThroughAnyShadows",
                "isBlockCoverage": false,
                "ranges": [
                  {
                    "count": 0,
                    "endOffset": 2548,
                    "startOffset": 2354
                  }
                ]
              },
              {
                "functionName": "isElement",
                "isBlockCoverage": false,
                "ranges": [
                  {
                    "count": 0,
                    "endOffset": 3660,
                    "startOffset": 2716
                  }
                ]
              },
              {
                "functionName": "isCollection",
                "isBlockCoverage": false,
                "ranges": [
                  {
                    "count": 1,
                    "endOffset": 4114,
                    "startOffset": 3876
                  }
                ]
              },
              {
                "functionName": "cloneWithAlgorithm",
                "isBlockCoverage": false,
                "ranges": [
                  {
                    "count": 1,
                    "endOffset": 5281,
                    "startOffset": 4622
                  }
                ]
              },
              {
                "functionName": "maybeCopyProperty",
                "isBlockCoverage": false,
                "ranges": [
                  {
                    "count": 1,
                    "endOffset": 4949,
                    "startOffset": 4697
                  }
                ]
              },
              {
                "functionName": "cloneWithCircularCheck",
                "isBlockCoverage": false,
                "ranges": [
                  {
                    "count": 0,
                    "endOffset": 5981,
                    "startOffset": 5710
                  }
                ]
              },
              {
                "functionName": "serializationGuard",
                "isBlockCoverage": false,
                "ranges": [
                  {
                    "count": 0,
                    "endOffset": 6684,
                    "startOffset": 6037
                  }
                ]
              },
              {
                "functionName": "preprocessResult",
                "isBlockCoverage": false,
                "ranges": [
                  {
                    "count": 1,
                    "endOffset": 8931,
                    "startOffset": 7053
                  }
                ]
              },
              {
                "functionName": "resolveReferencesRecursive",
                "isBlockCoverage": false,
                "ranges": [
                  {
                    "count": 1,
                    "endOffset": 10157,
                    "startOffset": 9315
                  }
                ]
              },
              {
                "functionName": "resolveReferences",
                "isBlockCoverage": false,
                "ranges": [
                  {
                    "count": 1,
                    "endOffset": 10953,
                    "startOffset": 10467
                  }
                ]
              },
              {
                "functionName": "callFunction",
                "isBlockCoverage": false,
                "ranges": [
                  {
                    "count": 1,
                    "endOffset": 12938,
                    "startOffset": 11809
                  }
                ]
              },
              {
                "functionName": "buildError",
                "isBlockCoverage": false,
                "ranges": [
                  {
                    "count": 0,
                    "endOffset": 12232,
                    "startOffset": 11935
                  }
                ]
              },
              {
                "functionName": "",
                "isBlockCoverage": false,
                "ranges": [
                  {
                    "count": 1,
                    "endOffset": 12845,
                    "startOffset": 12567
                  }
                ]
              },
              {
                "functionName": "",
                "isBlockCoverage": false,
                "ranges": [
                  {
                    "count": 1,
                    "endOffset": 13888,
                    "startOffset": 13001
                  }
                ]
              },
              {
                "functionName": "executeScript",
                "isBlockCoverage": false,
                "ranges": [
                  {
                    "count": 1,
                    "endOffset": 13840,
                    "startOffset": 13477
                  }
                ]
              }
            ],
            "scriptId": "1746",
            "url": ""
          },
          {
            "functions": [
              {
                "functionName": "",
                "isBlockCoverage": false,
                "ranges": [
                  {
                    "count": 1,
                    "endOffset": 69,
                    "startOffset": 0
                  }
                ]
              },
              {
                "functionName": "",
                "isBlockCoverage": false,
                "ranges": [
                  {
                    "count": 1,
                    "endOffset": 68,
                    "startOffset": 1
                  }
                ]
              },
              {
                "functionName": "",
                "isBlockCoverage": false,
                "ranges": [
                  {
                    "count": 1,
                    "endOffset": 66,
                    "startOffset": 32
                  }
                ]
              }
            ],
            "scriptId": "1747",
            "url": ""
          },
          {
            "functions": [
              {
                "functionName": "",
                "isBlockCoverage": false,
                "ranges": [
                  {
                    "count": 1,
                    "endOffset": 1,
                    "startOffset": 0
                  }
                ]
              }
            ],
            "scriptId": "1748",
            "url": ""
          },
          {
            "functions": [
              {
                "functionName": "",
                "isBlockCoverage": false,
                "ranges": [
                  {
                    "count": 1,
                    "endOffset": 1,
                    "startOffset": 0
                  }
                ]
              }
            ],
            "scriptId": "1749",
            "url": ""
          }
        ],
        "duration": 188.98008
      },
      "anomalies": [
        {
          "type": "console_errors_warnings",
          "category": "console",
          "timestamp": "2025-03-27T00:26:12.581784",
          "details": {
            "errors_warnings": [
              {
                "level": "SEVERE",
                "type": "javascript_error",
                "message": "file:///home/dhia/browser-fuzzer/Dissertation/logger/run_20250327_002551/round_001/mutations/mutated_0001.html 23:17 Uncaught SyntaxError: Invalid or unexpected token",
                "source": "javascript",
                "url": ""
              },
              {
                "level": "SEVERE",
                "type": "network_error",
                "message": "file:///home/dhia/browser-fuzzer/Dissertation/logger/run_20250327_002551/round_001/mutations/non_existent_huge_resource.js - Failed to load resource: net::ERR_FILE_NOT_FOUND",
                "source": "network",
                "url": ""
              },
              {
                "level": "SEVERE",
                "type": "javascript_error",
                "message": "file:///home/dhia/browser-fuzzer/Dissertation/logger/run_20250327_002551/round_001/mutations/mutated_0001.html 89:82 Uncaught SyntaxError: Identifier 'f' has already been declared",
                "source": "javascript",
                "url": ""
              },
              {
                "level": "SEVERE",
                "type": "network_error",
                "message": "file:///home/dhia/browser-fuzzer/Dissertation/logger/run_20250327_002551/round_001/mutations/non_existent_huge_resource.js - Failed to load resource: net::ERR_FILE_NOT_FOUND",
                "source": "network",
                "url": ""
              },
              {
                "level": "SEVERE",
                "type": "javascript_error",
                "message": "file:///home/dhia/browser-fuzzer/Dissertation/logger/run_20250327_002551/round_001/mutations/mutated_0001.html 112:17 Uncaught SyntaxError: Invalid or unexpected token",
                "source": "javascript",
                "url": ""
              },
              {
                "level": "SEVERE",
                "type": "general",
                "message": "file:///home/dhia/browser-fuzzer/Dissertation/logger/run_20250327_002551/round_001/mutations/mutated_0001.html 151:16 \"Deliberate console error from test_page_1!\"",
                "source": "console-api",
                "url": ""
              },
              {
                "level": "WARNING",
                "type": "general",
                "message": "file:///home/dhia/browser-fuzzer/Dissertation/logger/run_20250327_002551/round_001/mutations/mutated_0001.html 178:24 \"Blocking \\u003Cscript> in body triggered!\"",
                "source": "console-api",
                "url": ""
              },
              {
                "level": "WARNING",
                "type": "general",
                "message": "file:///home/dhia/browser-fuzzer/Dissertation/logger/run_20250327_002551/round_001/mutations/mutated_0001.html 227:24 \"Blocking \\u003Cscript> in body triggered!\"",
                "source": "console-api",
                "url": ""
              },
              {
                "level": "WARNING",
                "type": "general",
                "message": "file:///home/dhia/browser-fuzzer/Dissertation/logger/run_20250327_002551/round_001/mutations/mutated_0001.html 282:24 \"Blocking \\u003Cscript> in body triggered!\"",
                "source": "console-api",
                "url": ""
              },
              {
                "level": "WARNING",
                "type": "general",
                "message": "file:///home/dhia/browser-fuzzer/Dissertation/logger/run_20250327_002551/round_001/mutations/mutated_0001.html 300:24 \"Blocking \\u003Cscript> in body triggered!\"",
                "source": "console-api",
                "url": ""
              }
            ],
            "error_counts": {
              "javascript_error": 3,
              "network_error": 2,
              "general": 5
            }
          },
          "severity": 1,
          "detected_by": "check_console_errors",
          "artifacts": {}
        },
        {
          "type": "missing_or_invalid_security_headers",
          "category": "security",
          "timestamp": "2025-03-27T00:26:12.855563",
          "details": {
            "x-content-type-options": "Missing",
            "x-frame-options": "Missing",
            "strict-transport-security": "Missing",
            "content-security-policy": "Missing",
            "x-xss-protection": "Missing"
          },
          "severity": 1,
          "detected_by": "check_security_issues",
          "artifacts": {}
        },
        {
          "type": "duplicate_ids",
          "category": "dom_structure",
          "timestamp": "2025-03-27T00:26:56.744216",
          "details": {
            "ids": [
              "testForm",
              "firstName",
              "nested1",
              "nested2",
              "nested3",
              "nested4"
            ],
            "elements": [
              "<form data-uncovered-attr=\"fuzz\" id=\"testForm\" onabort=\"triggerFuzz()\" onerror=\"triggerFuzz()\">\n<label data-uncovered-attr=\"fuzz\" for=\"firstName\" onabort=\"triggerFuzz()\" onblur=\"triggerFuzz()\">Name:<coverage-gap-fill data-depth=\"6\" data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\"><script data-uncovered-attr=\"fuzz\" onerror=\"triggerFuzz()\">console.log('recursive script at step 0');</script></coverage-gap-fill><coverage-gap-fill data-depth=\"6\"><script>console.log('recursive script at step 0');</script></coverage-gap-fill></label>\n<input data-uncovered-attr=\"fuzz\" id=\"firstName\" onabort=\"triggerFuzz()\" type=\"text\">\n<button data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onblur=\"triggerFuzz()\" type=\"submit\">Submit<coverage-gap-fill data-depth=\"6\" data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\"><script data-uncovered-attr=\"fuzz\" onerror=\"triggerFuzz()\">console.log('recursive script at step 0');</script></coverage-gap-fill><coverage-gap-fill data-depth=\"6\"><script>console.log('recursive script at step 0');</script></coverage-gap-fill></button>\n<input data-uncovered-attr=\"fuzz\" name=\"in0ut\" onabort=\"triggerFuzz()\" type=\"number\"><coverage-gap-fill data-depth=\"5\" data-uncovered-attr=\"fuzz\" onblur=\"triggerFuzz()\"><script data-uncovered-attr=\"fuzz\" onerror=\"triggerFuzz()\">console.log('recursive script at step 0');</script></coverage-gap-fill><input name=\"in`ut\" type=\"number\"><coverage-gap-fill data-depth=\"5\"><script>console.log('recursive script at step 0');</script></coverage-gap-fill></form>",
              "<form data-uncovered-attr=\"fuzz\" id=\"testForm\" onblur=\"triggerFuzz()\" onerror=\"triggerFuzz()\">\n<label data-uncovered-attr=\"fuzz\" for=\"firstName\" onabort=\"triggerFuzz()\" onerror=\"triggerFuzz()\">Name:<coverage-gap-fill data-depth=\"5\" data-uncovered-attr=\"fuzz\" onerror=\"triggerFuzz()\"><script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\">console.log('recursive script at step 0');</script></coverage-gap-fill><coverage-gap-fill data-depth=\"5\"><script>console.log('recursive script at step 0');</script></coverage-gap-fill></label>\n<input data-uncovered-attr=\"fuzz\" id=\"firstName\" onabort=\"triggerFuzz()\" onblur=\"triggerFuzz()\" type=\"text\">\n<button data-uncovered-attr=\"fuzz\" onerror=\"triggerFuzz()\" type=\"submit\">Submit<coverage-gap-fill data-depth=\"5\" data-uncovered-attr=\"fuzz\" onerror=\"triggerFuzz()\"><script data-uncovered-attr=\"fuzz\" onblur=\"triggerFuzz()\">console.log('recursive script at step 0');</script></coverage-gap-fill><coverage-gap-fill data-depth=\"5\"><script>console.log('recursive script at step 0');</script></coverage-gap-fill></button>\n<input data-uncovered-attr=\"fuzz\" name=\"ioput\" onblur=\"triggerFuzz()\" type=\"text\"><coverage-gap-fill data-depth=\"4\" data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\"><script data-uncovered-attr=\"fuzz\" onblur=\"triggerFuzz()\">console.log('recursive script at step 0');</script></coverage-gap-fill><input name=\"inpud\" type=\"number\"><coverage-gap-fill data-depth=\"4\"><script>console.log('recursive script at step 0');</script></coverage-gap-fill></form>",
              "<input data-uncovered-attr=\"fuzz\" id=\"firstName\" onabort=\"triggerFuzz()\" type=\"text\">",
              "<input data-uncovered-attr=\"fuzz\" id=\"firstName\" onabort=\"triggerFuzz()\" onblur=\"triggerFuzz()\" type=\"text\">",
              "<div data-uncovered-attr=\"fuzz\" id=\"nested1\" onblur=\"triggerFuzz()\" onerror=\"triggerFuzz()\">\n<div data-uncovered-attr=\"fuzz\" id=\"nested2\" onblur=\"triggerFuzz()\" onerror=\"triggerFuzz()\">\n<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onerror=\"triggerFuzz()\">\n                console.warn(\"Blocking <script> in body triggered!\");\n      </script>\n<div data-uncovered-attr=\"fuzz\" id=\"nested3\" onabort=\"triggerFuzz()\" onerror=\"triggerFuzz()\">\n<div data-uncovered-attr=\"fuzz\" id=\"nested4\" onabort=\"triggerFuzz()\" onblur=\"triggerFuzz()\">\n<p data-uncovered-attr=\"fuzz\" onblur=\"triggerFuzz()\" onerror=\"triggerFuzz()\">Deeply nested content to test layout and DOM-size checks.</p>\n<p data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onblur=\"triggerFuzz()\">Some placeholder text: Lorem ipsum dolor sit amet, which might be flagged as untranslated text or placeholders.</p>\n<!-- Keep nesting more to exceed thresholds -->\n<!-- (We won't literally type 2000 nodes, but the repeated approach is enough to show a large structure) -->\n<!-- You can replicate the blocks 100+ times if you really want a huge DOM. -->\n<!-- For brevity, let's do partial repeats. -->\n<!-- Repeated Section Start -->\n<!-- ~~~ Repeat or generate blocks ~~~ -->\n<!-- Repeated Section End -->\n</div>\n</div>\n</div>\n</div>",
              "<div data-uncovered-attr=\"fuzz\" id=\"nested1\" onabort=\"triggerFuzz()\" onerror=\"triggerFuzz()\">\n<div data-uncovered-attr=\"fuzz\" id=\"nested2\" onabort=\"triggerFuzz()\">\n<script data-uncovered-attr=\"fuzz\" onblur=\"triggerFuzz()\" onerror=\"triggerFuzz()\">\n                console.warn(\"Blocking <script> in body triggered!\");\n      </script>\n<div data-uncovered-attr=\"fuzz\" id=\"nested3\" load=\"function handleEvent() {\n    try {\n        try {\n        const res = document.querySelectorAll('*');\n        console.debug('Mutation success:', res);\n    } catch(e) {\n        console.warn('Mutation error:', e);\n        document.dispatchEvent(new CustomEvent('mutationFailed'));\n    }\n    } catch(e) {\n        document.body.classList.add('mutation-error');\n    }\n}\" onabort=\"triggerFuzz()\" onerror=\"triggerFuzz()\">\n<div data-uncovered-attr=\"fuzz\" id=\"nested4\" onabort=\"triggerFuzz()\" onblur=\"triggerFuzz()\">\n<p data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onerror=\"triggerFuzz()\">Deeply nested content to test layout and DOM-size checks.</p>\n<p data-uncovered-attr=\"fuzz\" onerror=\"triggerFuzz()\">Some placeholder text: Lorem ipsum dolor sit amet, which might be flagged as untranslated text or placeholders.</p>\n<!-- Keep nesting more to exceed thresholds -->\n<!-- (We won't literally type 2000 nodes, but the repeated approach is enough to show a large structure) -->\n<!-- You can replicate the blocks 100+ times if you really want a huge DOM. -->\n<!-- For brevity, let's do partial repeats. -->\n<!-- Repeated Section Start -->\n<!-- ~~~ Repeat or generate blocks ~~~ -->\n<!-- Repeated Section End -->\n</div>\n</div>\n</div>\n</div>",
              "<div data-uncovered-attr=\"fuzz\" id=\"nested1\" onblur=\"triggerFuzz()\">\n<div data-uncovered-attr=\"fuzz\" id=\"nested2\" onblur=\"triggerFuzz()\" onerror=\"triggerFuzz()\">\n<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onblur=\"triggerFuzz()\">\n                console.warn(\"Blocking <script> in body triggered!\");\n      </script>\n<div data-uncovered-attr=\"fuzz\" id=\"fested3\" onblur=\"triggerFuzz()\" onerror=\"triggerFuzz()\">\n<div data-uncovered-attr=\"fuzz\" id=\"nested4\" onabort=\"triggerFuzz()\" onblur=\"triggerFuzz()\">\n<p data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onerror=\"triggerFuzz()\">Deeply nested content to test layout and DOM-size checks.</p>\n&lt;!-- Google Analytics --&gt;<p data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onblur=\"triggerFuzz()\">Some placeholder text: Lorem ipsum dolor sit amet, which might be flagged as untranslated text or placeholders.</p>\n<!-- Keep nesting more to exceed thresholds -->\n<!-- (We won't literally type 2000 nodes, but the repeated approach is enough to show a large structure) -->\n<!-- You can replicate the blocks 100+ times if you really want a huge DOM. -->\n<!-- For brevity, let's do partial repeats. -->\n<!-- Repeated Section Start -->\n<!-- ~~~ Repeat or generate blocks ~~~ -->\n<!-- Repeated Section End -->\n</div>\n</div>\n</div>\n</div>",
              "<div data-uncovered-attr=\"fuzz\" id=\"nested2\" onblur=\"triggerFuzz()\" onerror=\"triggerFuzz()\">\n<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onerror=\"triggerFuzz()\">\n                console.warn(\"Blocking <script> in body triggered!\");\n      </script>\n<div data-uncovered-attr=\"fuzz\" id=\"nested3\" onabort=\"triggerFuzz()\" onerror=\"triggerFuzz()\">\n<div data-uncovered-attr=\"fuzz\" id=\"nested4\" onabort=\"triggerFuzz()\" onblur=\"triggerFuzz()\">\n<p data-uncovered-attr=\"fuzz\" onblur=\"triggerFuzz()\" onerror=\"triggerFuzz()\">Deeply nested content to test layout and DOM-size checks.</p>\n<p data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onblur=\"triggerFuzz()\">Some placeholder text: Lorem ipsum dolor sit amet, which might be flagged as untranslated text or placeholders.</p>\n<!-- Keep nesting more to exceed thresholds -->\n<!-- (We won't literally type 2000 nodes, but the repeated approach is enough to show a large structure) -->\n<!-- You can replicate the blocks 100+ times if you really want a huge DOM. -->\n<!-- For brevity, let's do partial repeats. -->\n<!-- Repeated Section Start -->\n<!-- ~~~ Repeat or generate blocks ~~~ -->\n<!-- Repeated Section End -->\n</div>\n</div>\n</div>",
              "<div data-uncovered-attr=\"fuzz\" id=\"nested2\" onabort=\"triggerFuzz()\">\n<script data-uncovered-attr=\"fuzz\" onblur=\"triggerFuzz()\" onerror=\"triggerFuzz()\">\n                console.warn(\"Blocking <script> in body triggered!\");\n      </script>\n<div data-uncovered-attr=\"fuzz\" id=\"nested3\" load=\"function handleEvent() {\n    try {\n        try {\n        const res = document.querySelectorAll('*');\n        console.debug('Mutation success:', res);\n    } catch(e) {\n        console.warn('Mutation error:', e);\n        document.dispatchEvent(new CustomEvent('mutationFailed'));\n    }\n    } catch(e) {\n        document.body.classList.add('mutation-error');\n    }\n}\" onabort=\"triggerFuzz()\" onerror=\"triggerFuzz()\">\n<div data-uncovered-attr=\"fuzz\" id=\"nested4\" onabort=\"triggerFuzz()\" onblur=\"triggerFuzz()\">\n<p data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onerror=\"triggerFuzz()\">Deeply nested content to test layout and DOM-size checks.</p>\n<p data-uncovered-attr=\"fuzz\" onerror=\"triggerFuzz()\">Some placeholder text: Lorem ipsum dolor sit amet, which might be flagged as untranslated text or placeholders.</p>\n<!-- Keep nesting more to exceed thresholds -->\n<!-- (We won't literally type 2000 nodes, but the repeated approach is enough to show a large structure) -->\n<!-- You can replicate the blocks 100+ times if you really want a huge DOM. -->\n<!-- For brevity, let's do partial repeats. -->\n<!-- Repeated Section Start -->\n<!-- ~~~ Repeat or generate blocks ~~~ -->\n<!-- Repeated Section End -->\n</div>\n</div>\n</div>",
              "<div data-uncovered-attr=\"fuzz\" id=\"nested2\" onblur=\"triggerFuzz()\" onerror=\"triggerFuzz()\">\n<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onblur=\"triggerFuzz()\">\n                console.warn(\"Blocking <script> in body triggered!\");\n      </script>\n<div data-uncovered-attr=\"fuzz\" id=\"fested3\" onblur=\"triggerFuzz()\" onerror=\"triggerFuzz()\">\n<div data-uncovered-attr=\"fuzz\" id=\"nested4\" onabort=\"triggerFuzz()\" onblur=\"triggerFuzz()\">\n<p data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onerror=\"triggerFuzz()\">Deeply nested content to test layout and DOM-size checks.</p>\n&lt;!-- Google Analytics --&gt;<p data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onblur=\"triggerFuzz()\">Some placeholder text: Lorem ipsum dolor sit amet, which might be flagged as untranslated text or placeholders.</p>\n<!-- Keep nesting more to exceed thresholds -->\n<!-- (We won't literally type 2000 nodes, but the repeated approach is enough to show a large structure) -->\n<!-- You can replicate the blocks 100+ times if you really want a huge DOM. -->\n<!-- For brevity, let's do partial repeats. -->\n<!-- Repeated Section Start -->\n<!-- ~~~ Repeat or generate blocks ~~~ -->\n<!-- Repeated Section End -->\n</div>\n</div>\n</div>",
              "<div data-uncovered-attr=\"fuzz\" id=\"nested2\" onabort=\"triggerFuzz()\">\n&lt;!-- Temporary fix --&gt;<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onerror=\"triggerFuzz()\">\n                console.warn(\"Blocking <script> in body triggered!\");\n      </script>\n<div data-uncovered-attr=\"fuzz\" id=\"nested3\" onblur=\"triggerFuzz()\">\n<div data-uncovered-attr=\"fuzz\" id=\"nested4\" onabort=\"triggerFuzz()\" onerror=\"triggerFuzz()\">\n<p data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onerror=\"triggerFuzz()\">Deeply nested content to test layout and DOM-size checks.</p>\n<p data-uncovered-attr=\"fuzz\" onblur=\"triggerFuzz()\">Some placeholder text: Lorem ipsum dolor sit amet, which might be flagged as untranslated text or placeholders.</p>\n<!-- Keep nesting more to exceed thresholds -->\n<!-- (We won't literally type 2000 nodes, but the repeated approach is enough to show a large structure) -->\n<!-- You can replicate the blocks 100+ times if you really want a huge DOM. -->\n<!-- For brevity, let's do partial repeats. -->\n<!-- Repeated Section Start -->\n<!-- ~~~ Repeat or generate blocks ~~~ -->\n<!-- Repeated Section End -->\n</div>\n</div>\n</div>",
              "<div data-uncovered-attr=\"fuzz\" id=\"nested3\" onabort=\"triggerFuzz()\" onerror=\"triggerFuzz()\">\n<div data-uncovered-attr=\"fuzz\" id=\"nested4\" onabort=\"triggerFuzz()\" onblur=\"triggerFuzz()\">\n<p data-uncovered-attr=\"fuzz\" onblur=\"triggerFuzz()\" onerror=\"triggerFuzz()\">Deeply nested content to test layout and DOM-size checks.</p>\n<p data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onblur=\"triggerFuzz()\">Some placeholder text: Lorem ipsum dolor sit amet, which might be flagged as untranslated text or placeholders.</p>\n<!-- Keep nesting more to exceed thresholds -->\n<!-- (We won't literally type 2000 nodes, but the repeated approach is enough to show a large structure) -->\n<!-- You can replicate the blocks 100+ times if you really want a huge DOM. -->\n<!-- For brevity, let's do partial repeats. -->\n<!-- Repeated Section Start -->\n<!-- ~~~ Repeat or generate blocks ~~~ -->\n<!-- Repeated Section End -->\n</div>\n</div>",
              "<div data-uncovered-attr=\"fuzz\" id=\"nested3\" load=\"function handleEvent() {\n    try {\n        try {\n        const res = document.querySelectorAll('*');\n        console.debug('Mutation success:', res);\n    } catch(e) {\n        console.warn('Mutation error:', e);\n        document.dispatchEvent(new CustomEvent('mutationFailed'));\n    }\n    } catch(e) {\n        document.body.classList.add('mutation-error');\n    }\n}\" onabort=\"triggerFuzz()\" onerror=\"triggerFuzz()\">\n<div data-uncovered-attr=\"fuzz\" id=\"nested4\" onabort=\"triggerFuzz()\" onblur=\"triggerFuzz()\">\n<p data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onerror=\"triggerFuzz()\">Deeply nested content to test layout and DOM-size checks.</p>\n<p data-uncovered-attr=\"fuzz\" onerror=\"triggerFuzz()\">Some placeholder text: Lorem ipsum dolor sit amet, which might be flagged as untranslated text or placeholders.</p>\n<!-- Keep nesting more to exceed thresholds -->\n<!-- (We won't literally type 2000 nodes, but the repeated approach is enough to show a large structure) -->\n<!-- You can replicate the blocks 100+ times if you really want a huge DOM. -->\n<!-- For brevity, let's do partial repeats. -->\n<!-- Repeated Section Start -->\n<!-- ~~~ Repeat or generate blocks ~~~ -->\n<!-- Repeated Section End -->\n</div>\n</div>",
              "<div data-uncovered-attr=\"fuzz\" id=\"nested3\" onblur=\"triggerFuzz()\">\n<div data-uncovered-attr=\"fuzz\" id=\"nested4\" onabort=\"triggerFuzz()\" onerror=\"triggerFuzz()\">\n<p data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onerror=\"triggerFuzz()\">Deeply nested content to test layout and DOM-size checks.</p>\n<p data-uncovered-attr=\"fuzz\" onblur=\"triggerFuzz()\">Some placeholder text: Lorem ipsum dolor sit amet, which might be flagged as untranslated text or placeholders.</p>\n<!-- Keep nesting more to exceed thresholds -->\n<!-- (We won't literally type 2000 nodes, but the repeated approach is enough to show a large structure) -->\n<!-- You can replicate the blocks 100+ times if you really want a huge DOM. -->\n<!-- For brevity, let's do partial repeats. -->\n<!-- Repeated Section Start -->\n<!-- ~~~ Repeat or generate blocks ~~~ -->\n<!-- Repeated Section End -->\n</div>\n</div>",
              "<div data-uncovered-attr=\"fuzz\" id=\"nested4\" onabort=\"triggerFuzz()\" onblur=\"triggerFuzz()\">\n<p data-uncovered-attr=\"fuzz\" onblur=\"triggerFuzz()\" onerror=\"triggerFuzz()\">Deeply nested content to test layout and DOM-size checks.</p>\n<p data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onblur=\"triggerFuzz()\">Some placeholder text: Lorem ipsum dolor sit amet, which might be flagged as untranslated text or placeholders.</p>\n<!-- Keep nesting more to exceed thresholds -->\n<!-- (We won't literally type 2000 nodes, but the repeated approach is enough to show a large structure) -->\n<!-- You can replicate the blocks 100+ times if you really want a huge DOM. -->\n<!-- For brevity, let's do partial repeats. -->\n<!-- Repeated Section Start -->\n<!-- ~~~ Repeat or generate blocks ~~~ -->\n<!-- Repeated Section End -->\n</div>",
              "<div data-uncovered-attr=\"fuzz\" id=\"nested4\" onabort=\"triggerFuzz()\" onblur=\"triggerFuzz()\">\n<p data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onerror=\"triggerFuzz()\">Deeply nested content to test layout and DOM-size checks.</p>\n<p data-uncovered-attr=\"fuzz\" onerror=\"triggerFuzz()\">Some placeholder text: Lorem ipsum dolor sit amet, which might be flagged as untranslated text or placeholders.</p>\n<!-- Keep nesting more to exceed thresholds -->\n<!-- (We won't literally type 2000 nodes, but the repeated approach is enough to show a large structure) -->\n<!-- You can replicate the blocks 100+ times if you really want a huge DOM. -->\n<!-- For brevity, let's do partial repeats. -->\n<!-- Repeated Section Start -->\n<!-- ~~~ Repeat or generate blocks ~~~ -->\n<!-- Repeated Section End -->\n</div>",
              "<div data-uncovered-attr=\"fuzz\" id=\"nested4\" onabort=\"triggerFuzz()\" onblur=\"triggerFuzz()\">\n<p data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onerror=\"triggerFuzz()\">Deeply nested content to test layout and DOM-size checks.</p>\n&lt;!-- Google Analytics --&gt;<p data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onblur=\"triggerFuzz()\">Some placeholder text: Lorem ipsum dolor sit amet, which might be flagged as untranslated text or placeholders.</p>\n<!-- Keep nesting more to exceed thresholds -->\n<!-- (We won't literally type 2000 nodes, but the repeated approach is enough to show a large structure) -->\n<!-- You can replicate the blocks 100+ times if you really want a huge DOM. -->\n<!-- For brevity, let's do partial repeats. -->\n<!-- Repeated Section Start -->\n<!-- ~~~ Repeat or generate blocks ~~~ -->\n<!-- Repeated Section End -->\n</div>",
              "<div data-uncovered-attr=\"fuzz\" id=\"nested4\" onabort=\"triggerFuzz()\" onerror=\"triggerFuzz()\">\n<p data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onerror=\"triggerFuzz()\">Deeply nested content to test layout and DOM-size checks.</p>\n<p data-uncovered-attr=\"fuzz\" onblur=\"triggerFuzz()\">Some placeholder text: Lorem ipsum dolor sit amet, which might be flagged as untranslated text or placeholders.</p>\n<!-- Keep nesting more to exceed thresholds -->\n<!-- (We won't literally type 2000 nodes, but the repeated approach is enough to show a large structure) -->\n<!-- You can replicate the blocks 100+ times if you really want a huge DOM. -->\n<!-- For brevity, let's do partial repeats. -->\n<!-- Repeated Section Start -->\n<!-- ~~~ Repeat or generate blocks ~~~ -->\n<!-- Repeated Section End -->\n</div>"
            ]
          },
          "severity": 1,
          "detected_by": "check_dom_structure",
          "artifacts": {}
        },
        {
          "type": "blocking_scripts_in_body",
          "category": "performance",
          "timestamp": "2025-03-27T00:26:56.804243",
          "details": {
            "scripts": [
              "<script data-uncovered-attr=\"fuzz\" onerror=\"triggerFuzz()\">console.log('recursive script at step 0');</script>",
              "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onblur=\"triggerFuzz()\">console.log('Mutation: ');</script>",
              "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\">console.log('recursive script at step 0');</script>",
              "<script>console.log('recursive script at step 0');</script>",
              "<script>function triggerFuzz() {}</script>",
              "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\">console.log('recursive script at step 0');</script>",
              "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onerror=\"triggerFuzz()\">\n                var script = document.createElement('script');\n    script.src = \"http:    document.head.appendChild(script);\n\n                let bigArray = [];\n    for(let i=0; i<500000; i++) {\n      bigArray.push(Math.random());\n    }\n    console.log(\"Allocated bigArray with 500k elements to stress memory usage.\");\n\n            const startPerf = performance.now();\n    while (performance.now() - startPerf < 1000) {  }\n\n        document.cookie = \"test_page_2_cookie=some_value; path=/;\";\n  </script>",
              "<script data-uncovered-attr=\"fuzz\" onblur=\"triggerFuzz()\">console.log('recursive script at step 0');</script>",
              "<script>console.log('recursive script at step 0');</script>",
              "<script data-uncovered-attr=\"fuzz\" onerror=\"triggerFuzz()\">console.log('recursive script at step 0');</script>",
              "<script>console.log('recursive script at step 0');</script>",
              "<script data-uncovered-attr=\"fuzz\" onerror=\"triggerFuzz()\">console.log('recursive script at step 0');</script>",
              "<script>console.log('recursive script at step 0');</script>",
              "<script data-uncovered-attr=\"fuzz\" onerror=\"triggerFuzz()\">console.log('recursive script at step 0');</script>",
              "<script>console.log('recursive script at step 0');</script>",
              "<script data-uncovered-attr=\"fuzz\" onblur=\"triggerFuzz()\" onerror=\"triggerFuzz()\">\n            document.cookie = \"test_page_2_cookie_delete=delete_me; path=/;\";\n        document.cookie = \"test_page_2_cookie_delete=; path=/; expires=Thu, 01 Jan 1970 00:00:00 UTC;\";\n\n        const f = document.getElementById(\"testForm\");\n    f.addEventListener('submit', function(evt) {\n            evt.preventDefault();\n      console.warn(\"Form submission was prevented in test_page_2!\");\n    });\n\n        f.addEventListener('mouseover', () => {\n      f.dataset.mouseoverTest = \"true\";\n    });\n  </script>",
              "<script>console.log('recursive script at step 0');</script>",
              "<script data-uncovered-attr=\"fuzz\" onblur=\"triggerFuzz()\">console.log('recursive script at step 0');</script>",
              "<script data-uncovered-attr=\"fuzz\" onerror=\"triggerFuzz()\" src=\"non_existent_huge_resource.js\"></script>",
              "<script data-uncovered-attr=\"fuzz\" onerror=\"triggerFuzz()\">console.log('recursive script at step 0');</script>",
              "<script>console.log('recursive script at step 0');</script>",
              "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\">console.log('recursive script at step 0');</script>",
              "<script>console.log('recursive script at step 0');</script>",
              "<script data-uncovered-attr=\"fuzz\" onblur=\"triggerFuzz()\">console.log('recursive script at step 0');</script>",
              "<script>console.log('recursive script at step 0');</script>",
              "<script data-uncovered-attr=\"fuzz\" onblur=\"triggerFuzz()\">console.log('recursive script at step 0');</script>",
              "<script>console.log('recursive script at step 0');</script>",
              "<script data-uncovered-attr=\"fuzz\" onblur=\"triggerFuzz()\" onerror=\"triggerFuzz()\">\n            document.cookie = \"test_page_2_cookie_delete=delete_me; path=/;\";\n        document.cookie = \"test_page_2_cookie_delete=; path=/; expires=Thu, 01 Jan 1970 00:00:00 UTC;\";\n\n        const f = document.getElementById(\"testForm\");\n    f.addEventListener('submit', function(evt) {\n            evt.preventDefault();\n      console.warn(\"Form submission was prevented in test_page_2!\");\n    });\n\n        f.addEventListener('mouseover', () => {\n      f.dataset.mouseoverTest = \"true\";\n    });\n  </script>",
              "<script>console.log('recursive script at step 0');</script>",
              "<script data-uncovered-attr=\"fuzz\" onerror=\"triggerFuzz()\">console.log('recursive script at step 0');</script>",
              "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onblur=\"triggerFuzz()\" src=\"non_existent_huge_resource.js\"></script>",
              "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\">console.log('recursive script at step 0');</script>",
              "<script data-uncovered-attr=\"fuzz\" onblur=\"triggerFuzz()\">\n                var script = document.createElement('script');\n    script.src = \"http:    document.head.appendChild(script);\n\n                let bigArray = [];\n    for(let i=0; i<500000; i++) {\n      bigArray.push(Math.random());\n    }\n    console.log(\"Allocated bigArray with 500k elements to stress memory usage.\");\n\n            const startPerf = performance.now();\n    while (performance.now() - startPerf < 1000) {  }\n\n        document.cookie = \"test_page_2_cookie=some_value; path=/;\";\n  </script>",
              "<script data-uncovered-attr=\"fuzz\" onerror=\"triggerFuzz()\">console.log('recursive script at step 0');</script>",
              "<script>console.log('recursive script at step 0');</script>",
              "<script data-uncovered-attr=\"fuzz\" onblur=\"triggerFuzz()\">console.log('recursive script at step 0');</script>",
              "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onblur=\"triggerFuzz()\">\n        console.error(\"Deliberate console error from test_page_1!\");\n\n        function suspiciousHandler() {\n            eval(\"console.log('eval call!');\");\n    }\n  </script>",
              "<script click=\"function handleEvent() {\n    try {\n        try {\n        const res = new ArrayBuffer(1e6);\n        console.debug('Mutation success:', res);\n    } catch(e) {\n        console.warn('Mutation error:', e);\n        document.dispatchEvent(new CustomEvent('mutationFailed'));\n    }\n    } catch(e) {\n        document.body.classList.add('mutation-error');\n    }\n}\" data-uncovered-attr=\"fuzz\" onblur=\"triggerFuzz()\">console.log('recursive script at step 0');</script>",
              "<script>console.log('recursive script at step 0');</script>",
              "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onerror=\"triggerFuzz()\">\n                console.warn(\"Blocking <script> in body triggered!\");\n      </script>",
              "<script>console.log('recursive script at step 0');</script>",
              "<script data-uncovered-attr=\"fuzz\" onerror=\"triggerFuzz()\">console.log('recursive script at step 0');</script>",
              "<script data-uncovered-attr=\"fuzz\" onblur=\"triggerFuzz()\">console.log('recursive script at step 0');</script>",
              "<script>console.log('recursive script at step 0');</script>",
              "<script data-uncovered-attr=\"fuzz\" onerror=\"triggerFuzz()\">console.log('recursive script at step 0');</script>",
              "<script>console.log('recursive script at step 0');</script>",
              "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\">console.log('recursive script at step 0');</script>",
              "<script>console.log('recursive script at step 0');</script>",
              "<script>console.log('recursive script at step 0');</script>",
              "<script data-uncovered-attr=\"fuzz\" onblur=\"triggerFuzz()\">console.log('recursive script at step 0');</script>",
              "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\">console.log('recursive script at step 0');</script>",
              "<script>console.log('recursive script at step 0');</script>",
              "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onblur=\"triggerFuzz()\">\n        try {\n      localStorage.setItem('test_page_1_local_key', 'test_value_1');\n      sessionStorage.setItem('test_page_1_session_key', 'session_value_1');\n    } catch (e) {\n      console.error(\"Storage error in test_page_1: \" + e);\n    }\n  </script>",
              "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\">console.log('recursive script at step 0');</script>",
              "<script>console.log('recursive script at step 0');</script>",
              "<script>console.log('recursive script at step 0');</script>",
              "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onerror=\"triggerFuzz()\">try { document.currentScript.parentNode.setAttribute('data-adv-entangle-0', performance.now().toString()); } catch(e) {}</script>",
              "<script data-uncovered-attr=\"fuzz\" onblur=\"triggerFuzz()\" onerror=\"triggerFuzz()\">\n                console.warn(\"Blocking <script> in body triggered!\");\n      </script>",
              "<script>console.log('recursive script at step 0');</script>",
              "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\">console.log('recursive script at step 0');</script>",
              "<script data-uncovered-attr=\"fuzz\" onerror=\"triggerFuzz()\">console.log('recursive script at step 0');</script>",
              "<script>console.log('recursive script at step 0');</script>",
              "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\">console.log('recursive script at step 0');</script>",
              "<script>console.log('recursive script at step 0');</script>",
              "<script data-uncovered-attr=\"fuzz\" onerror=\"triggerFuzz()\">console.log('recursive script at step 0');</script>",
              "<script>console.log('recursive script at step 0');</script>",
              "<script>console.log('recursive script at step 0');</script>",
              "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\">console.log('recursive script at step 0');</script>",
              "<script data-uncovered-attr=\"fuzz\" onblur=\"triggerFuzz()\">console.log('recursive script at step 0');</script>",
              "<script>console.log('recursive script at step 0');</script>",
              "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onblur=\"triggerFuzz()\">\n        try {\n      localStorage.setItem('test_page_1_local_key', 'test_value_1');\n      sessionStorage.setItem('test_page_1_session_key', 'session_value_1');\n    } catch (e) {\n      console.error(\"Storage error in test_page_1: \" + e);\n    }\n  </script>",
              "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onerror=\"triggerFuzz()\">try { document.currentScript.parentNode.setAttribute('data-adv-entangle-0', performance.now().toString()); } catch(e) {}</script>",
              "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onblur=\"triggerFuzz()\">\n                console.warn(\"Blocking <script> in body triggered!\");\n      </script>",
              "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onerror=\"triggerFuzz()\">\n                console.warn(\"Blocking <script> in body triggered!\");\n      </script>",
              "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\">console.log('recursive script at step 0');</script>",
              "<script>console.log('recursive script at step 0');</script>"
            ]
          },
          "severity": 1,
          "detected_by": "check_dom_structure",
          "artifacts": {}
        },
        {
          "type": "media_playback_incomplete",
          "category": "media",
          "timestamp": "2025-03-27T00:26:57.314430",
          "details": "readyState: 0",
          "severity": 1,
          "detected_by": "check_media_playback",
          "artifacts": {
            "element_screenshot": "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"
          }
        },
        {
          "type": "media_playback_interaction_error",
          "category": "media",
          "timestamp": "2025-03-27T00:26:58.022620",
          "details": "'WebElement' object has no attribute 'play'",
          "severity": 1,
          "detected_by": "check_media_playback",
          "artifacts": {
            "element_screenshot": "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"
          }
        },
        {
          "type": "media_playback_incomplete",
          "category": "media",
          "timestamp": "2025-03-27T00:26:59.108266",
          "details": "readyState: 0",
          "severity": 1,
          "detected_by": "check_media_playback",
          "artifacts": {
            "element_screenshot": "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"
          }
        },
        {
          "type": "media_playback_interaction_error",
          "category": "media",
          "timestamp": "2025-03-27T00:26:59.766765",
          "details": "'WebElement' object has no attribute 'play'",
          "severity": 1,
          "detected_by": "check_media_playback",
          "artifacts": {
            "element_screenshot": "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"
          }
        },
        {
          "type": "storage_error",
          "category": "storage",
          "timestamp": "2025-03-27T00:27:00.847325",
          "details": "Message: invalid cookie domain\n  (Session info: chrome=135.0.7019.0)\nStacktrace:\n#0 0x5816272250b6 <unknown>\n#1 0x58162a4adce8 <unknown>\n#2 0x58162a4727c9 <unknown>\n#3 0x581627331e80 <unknown>\n#4 0x5816274a8b90 <unknown>\n#5 0x581627438a25 <unknown>\n#6 0x58162748d58e <unknown>\n#7 0x58162748c5d9 <unknown>\n#8 0x58162743bb62 <unknown>\n#9 0x5816273d5fc9 <unknown>\n#10 0x5816273d2b21 <unknown>\n#11 0x5816273d566d <unknown>\n#12 0x5816272f1d67 <unknown>\n#13 0x58162a2a6bac <unknown>\n#14 0x58162a368dd2 <unknown>\n#15 0x58162a3671bc <unknown>\n#16 0x58162a36a0eb <unknown>\n#17 0x58162a2e8459 <unknown>\n#18 0x58162a36b3f0 <unknown>\n#19 0x58162a267a31 <unknown>\n#20 0x58162a41a95c <unknown>\n#21 0x58162a41b1e0 <unknown>\n#22 0x58162a460ada <unknown>\n#23 0x58162727bb87 <unknown>\n#24 0x7c683a894ac3 <unknown>\n#25 0x7c683a926850 <unknown>\n",
          "severity": 1,
          "detected_by": "check_storage",
          "artifacts": {}
        },
        {
          "type": "mouseover_event_failed",
          "category": "event_handling",
          "timestamp": "2025-03-27T00:27:03.618958",
          "details": "Mouseover event handler not executed on element",
          "severity": 1,
          "detected_by": "check_event_handling",
          "artifacts": {}
        },
        {
          "type": "missing_lang_attribute",
          "category": "localization",
          "timestamp": "2025-03-27T00:27:06.564115",
          "details": "The 'lang' attribute is missing from the <html> tag.",
          "severity": 1,
          "detected_by": "check_localization",
          "artifacts": {}
        },
        {
          "type": "slow_page_load",
          "category": "performance",
          "timestamp": "2025-03-27T00:27:06.880523",
          "details": "Page load time exceeds threshold: 6342 ms",
          "severity": 1,
          "detected_by": "check_performance",
          "artifacts": {}
        },
        {
          "type": "potential_xss_in_html",
          "category": "security",
          "timestamp": "2025-03-27T00:27:21.834436",
          "details": [
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script>console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script>console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onerror=\"triggerFuzz()\">console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onblur=\"triggerFuzz()\">console.log('Mutation: ');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\">console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script>console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script>function triggerFuzz() {}</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script async=\"\">\n        window.__jsCoverage = new Proxy({}, {\n            get(t, p) { return t[p] || 0 },\n            set(t, p, v) { t[p] = (t[p] || 0) + 1; return true }\n        });\n        </script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\">console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script>console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script>console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onblur=\"triggerFuzz()\">console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script>console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onerror=\"triggerFuzz()\">console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script>console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onerror=\"triggerFuzz()\">console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script>console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onerror=\"triggerFuzz()\">console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script>console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onblur=\"triggerFuzz()\" onerror=\"triggerFuzz()\">\n            document.cookie = \"test_page_2_cookie_delete=delete_me; path=/;\";\n        document.cookie = \"test_page_2_cookie_delete=; path=/; expires=Thu, 01 Jan 1970 00:00:00 UTC;\";\n\n        const f = document.getElementById(\"testForm\");\n    f.addEventListener('submit', function(evt) {\n            evt.preventDefault();\n      console.warn(\"Form submission was prevented in test_page_2!\");\n    });\n\n        f.addEventListener('mouseover', () => {\n      f.dataset.mouseoverTest = \"true\";\n    });\n  </script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script>console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onblur=\"triggerFuzz()\">console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onerror=\"triggerFuzz()\" src=\"non_existent_huge_resource.js\"></script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onerror=\"triggerFuzz()\">console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script>console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\">console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script>console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onblur=\"triggerFuzz()\">console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script>console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onblur=\"triggerFuzz()\">console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script>console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onblur=\"triggerFuzz()\" onerror=\"triggerFuzz()\">\n            document.cookie = \"test_page_2_cookie_delete=delete_me; path=/;\";\n        document.cookie = \"test_page_2_cookie_delete=; path=/; expires=Thu, 01 Jan 1970 00:00:00 UTC;\";\n\n        const f = document.getElementById(\"testForm\");\n    f.addEventListener('submit', function(evt) {\n            evt.preventDefault();\n      console.warn(\"Form submission was prevented in test_page_2!\");\n    });\n\n        f.addEventListener('mouseover', () => {\n      f.dataset.mouseoverTest = \"true\";\n    });\n  </script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script>console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onerror=\"triggerFuzz()\">console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onblur=\"triggerFuzz()\" src=\"non_existent_huge_resource.js\"></script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\">console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script>console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script>console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onerror=\"triggerFuzz()\">console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script>console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onblur=\"triggerFuzz()\">console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onblur=\"triggerFuzz()\">\n        console.error(\"Deliberate console error from test_page_1!\");\n\n        function suspiciousHandler() {\n            eval(\"console.log('eval call!');\");\n    }\n  </script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script click=\"function handleEvent() {\n    try {\n        try {\n        const res = new ArrayBuffer(1e6);\n        console.debug('Mutation success:', res);\n    } catch(e) {\n        console.warn('Mutation error:', e);\n        document.dispatchEvent(new CustomEvent('mutationFailed'));\n    }\n    } catch(e) {\n        document.body.classList.add('mutation-error');\n    }\n}\" data-uncovered-attr=\"fuzz\" onblur=\"triggerFuzz()\">console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script>console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script> in body triggered!\");\n      </script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script>console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onerror=\"triggerFuzz()\">console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onblur=\"triggerFuzz()\">console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script>console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onerror=\"triggerFuzz()\">console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script>console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\">console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script>console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script>console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onblur=\"triggerFuzz()\">console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\">console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script>console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onblur=\"triggerFuzz()\">\n        try {\n      localStorage.setItem('test_page_1_local_key', 'test_value_1');\n      sessionStorage.setItem('test_page_1_session_key', 'session_value_1');\n    } catch (e) {\n      console.error(\"Storage error in test_page_1: \" + e);\n    }\n  </script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\">console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script>console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script async=\"\" data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\">console.log('Mutation: ');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script>console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onerror=\"triggerFuzz()\">try { document.currentScript.parentNode.setAttribute('data-adv-entangle-0', performance.now().toString()); } catch(e) {}</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script> in body triggered!\");\n      </script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script>console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\">console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onerror=\"triggerFuzz()\">console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script>console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\">console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script>console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onerror=\"triggerFuzz()\">console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script>console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script>console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\">console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onblur=\"triggerFuzz()\">console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script>console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onblur=\"triggerFuzz()\">\n        try {\n      localStorage.setItem('test_page_1_local_key', 'test_value_1');\n      sessionStorage.setItem('test_page_1_session_key', 'session_value_1');\n    } catch (e) {\n      console.error(\"Storage error in test_page_1: \" + e);\n    }\n  </script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onerror=\"triggerFuzz()\">try { document.currentScript.parentNode.setAttribute('data-adv-entangle-0', performance.now().toString()); } catch(e) {}</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script> in body triggered!\");\n      </script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script> in body triggered!\");\n      </script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\">console.log('recursive script at step 0');</script>"
            },
            {
              "pattern": "<script[^>]*>[^<]*</script>",
              "match": "<script>console.log('recursive script at step 0');</script>"
            },
            {
              "element_info": {
                "tag": "script",
                "outerHTML": "<script data-uncovered-attr=\"fuzz\" onabort=\"triggerFuzz()\" onblur=\"triggerFuzz()\">\n        console.error(\"Deliberate console error from test_page_1!\");\n\n        function suspiciousHandler() {\n            eval(\"console.log('eval call!');\");\n    }\n  </script>"
              },
              "pattern": "eval\\(",
              "match": "eval("
            }
          ],
          "severity": 1,
          "detected_by": "check_xss_patterns",
          "artifacts": {}
        }
      ],
      "status": "failed",
      "root_cause": "N/A"
    }
  }
}