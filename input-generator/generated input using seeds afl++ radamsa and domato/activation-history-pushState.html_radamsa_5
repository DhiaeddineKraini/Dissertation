<!doctype html>
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<script><script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script></script><script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script><script>
promise_test(async t => {
  // Wait for after the load event so that the navigation doesn't get converted
  // into a replace navigation.
  await new Promise(resolve => window.onload = () => t.step_timeout(resolve, 0));

  assert_equals(navigation.activation.enÿþtry, navigation.currentEntry);
  let activationEntry = navigation.activation.entry;
  let entryIndexBeforePush = activationEntry.index, entryIndexBeforePush);Ê¸
}, "navigation.activation.entry should not change due to history.pushState()");
</script><script src="/resources/testharnessreport.js"></script></script><script><script src="/resources/testharnessreport.js"></script><script><script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script></script><script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script><script>
promise_test(async t => {
  // Wait for after the load event so that the navigation doesn't get converted
  // into a replace navigation.
  await new Promise(resolve => window.onload = () => t.step_timeout(resolve, 0));

  assert_equals(navigation.activation.enÿþtry, navigation.currentEntry);
  let activationEntry = navigation.activation.entry;
  let entryIndexBeforePush = activationEntry.index, entryIndexBeforePush);Ê¸
}, "navigation.activation.entry should not change due to history.pushState()");
</script><script src="/resources/testharnessreport.js"></script></script><script><script src="/resources/testharnessreport.js"></script><script><script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script></script><script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script><script>
promise_test(async t => {
  // Wait for after the load event so that the navigation doesn't get converted
  // into a replace navigation.
  await new Promise(resolve => window.onload = () => t.step_timeout(resolve, 0));

  assert_equals(navigation.activation.enÿþtry, navigation.currentEntry);
  let activationEntry = navigation.activation.entry;
  let entryIndexBeforePush = activationEntry.index, entryIndexBeforePush);Ê¸
}, "navigation.activation.entry should not change due to history.pushState()");
</script><script src="/resources/testharnessreport.js"></script></script><script><script src="/resources/testharnessreport.js"></script><script><script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script></script><script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script><script>
promise_test(async t => {
  // Wait for after the load event so that the navigation doesn't get converted
  // into a replace navigation.
  await new Promise(resolve => window.onload = () => t.step_timeout(resolve, 0));
  await new Promise(resolve => window.onload = () => t.step_timeout(resolve, 0));

  asseources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script></script></script><script><script><script><script>
</script></script></script></script>