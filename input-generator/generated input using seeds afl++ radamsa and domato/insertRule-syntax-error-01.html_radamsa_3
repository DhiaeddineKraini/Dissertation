<!DOCTYPE html>
<link rel="help" href="https://drafts.csswg.org/cssom-1/#insert-a-css-rule">
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<style>
p { color: green; }
</style><style>
p { color: green; }
</style>
<p id="test">This text should be green.</p>
<script><style>
    test(function() {
        assert_throws_dom("SyntaxError", () => document.styleSheets[0].insertRule("p { color: red; } garbage", 1));
        assert_equals(getComputedStyle(document.getElementById("test")).color, "rgb(0, 128, 0)");
    }, "A syntax error in insertRule should throw and not affect the style of the page");
</style></script><script><style>
    test(function() {
        assert_throws_dom("SyntaxError", () => document.styleSheets[0].insertRule("p { color: red; } garbage", 1));
        assert_equals(getComputedStyle(document.getElementById("test")).color, "rgb(0, 128, 0)");
    }, "A syntax error in insertRule should throw and not affect the style of the page");
</style></script><script><style>
    test(function() {
        assert_throws_dom("SyntaxError", () => document.styleSheets[0].insertRule("p { color: red; } garbage", 1));
        assert_equals(getComputedStyle(document.getElementById("test")).color, "rgb(0, 128, 0)");
    }, "A syntax error in insertRule should throw and not affect the style of the page");
</style></script><script><style>
    test(function() {
        assert_throws_dom("SyntaxError", () => document.styleSheets[0].insertRule("p { color: red; } garbage", 1));
        assert_equals(getComputedStyle(document.getElementById("test")).color, "rgb(0, 128, 0)");
    }, "A syntax error in insertRule should throw and not affect the style of the page");
</style></script><script><style>
    test(function() {
        assert_throws_dom("SyntaxError", () => document.styleSheets[0].insertRule("p { color: red; } garbage", 1));
        assert_equals(getComputedStyle(document.getElementById("test")).color, "rgb(0, 128, 0)");
    }, "A syntax error in insertRule should throw and not affect the style of the page");
</style></script><style><style><style><style><style><style><style><style><style><style><style><style><style><style><style><style><style><style><style><style><style><style><style><style>
    test(function() {
        assert_throws_dom("SyntaxError", () => document.styleSheets[0].insertRule("p { color: red; } garbage", 1));
        assert_equals(getComputedStyle(document.getElementById("test")).color, "rgb(0, 128, 0)");
    }, "A syntax error in insertRule should throw and not affect the style of the page");
</style></style></style><style><style><style>
    test(function() {
        assert_throws_dom("SyntaxError", () => document.styleSheets[0].insertRule("p { color: red; } garbage", 1));
        assert_equals(getComputedStyle(document.getElementById("test")).color, "rgb(0, 128, 0)");
    }, "A syntax error in insertRule should throw and not affect the style of the page");
</style></style></style></style></style></style></style><style><style><style>
    test(function() {
        assert_throws_dom("SyntaxError", () => document.styleSheets[0].insertRule("p { color: red; } garbage", 1));
        assert_equals(getComputedStyle(document.getElementById("test")).color, "rgb(0, 128, 0)");
    }, "A syntax error in insertRule should throw and not affect the style of the page");
</style></style></style></style></style></style></style><style><style><style>
    test(function() {
        assert_throws_dom("SyntaxError", () => document.styleSheets[0].insertRule("p { color: red; } garbage", 1));
        assert_equals(getComputedStyle(document.getElementById("test")).color, "rgb(0, 128, 0)");
    }, "A syntax error in insertRule should throw and not affect the style of the page");
</style></style></style></style></style></style></style><style><style><style>
    test(function() {
        assert_throws_dom("SyntaxError", () => document.styleSheets[0].insertRule("p { color: red; } garbage", 1));
        assert_equals(getComputedStyle(document.getElementById("test")).color, "rgb(0, 128, 0)");
    }, "A syntax error in insertRule should throw and not affect the style of the page");
</style></style></style></style></style></style></style><style><style><style><style>
    test(function() {
        assert_throws_dom("SyntaxError", () => document.styleSheets[0].insertRule("p { color: red; } garbage", 1));
        assert_equals(getComputedStyle(document.getElementById("test")).color, "rgb(0, 128, 0)");
    }, "A syntax error in insertRule should throw and not affect the style of the page");
</style></style><style><style>
    test(function() {
        assert_throws_dom("SyntaxError", () => document.styleSheets[0].insertRule("p { color: red; } garbage", 1));
        assert_equals(getComputedStyle(document.getElementById("test")).color, "rgb(0, 128, 0)");
    }, "A syntax error in insertRule should throw and not affect the style of the page");
</style></style></style></style></style></style></style></style><style><style><style><style><style><style><style>
    test(function() {
        assert_throws_dom("SyntaxError", () => document.styleSheets[0].insertRule("p { color: red; } garbage", 1));
        assert_equals(getComputedStyle(document.getElementById("test")).color, "rgb(0, 128, 0)");
    }, "A syntax error in insertRule should throw and not affect the style of the page");
</style></style></style></style></style></style></style></style>
