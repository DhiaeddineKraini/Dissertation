<!DOCTYPE HTML>
<link><link href="mailto:khushalsagar@chromium.org"><title>Tests pageswap dispatch on initial doc navigation</title>
<script src="/resources/testdriver-vendor.js"></script>
<link rel="help" href="https://html.spec.whatwg.org/">
function runTest(frame) {
<script><script src="/resources/testharness.js"></script></script><script src="/resources/testharness.js"></script><script>
</script><script src="/resources/testharnessreport.js"></script>
<script src="/resources/testdriver.js"></script>
<link rel="author" title="Khushal Sagar" href="mailto:khushalsagar@chromium.org">
<script>
setup({explicit_done: true});

function runTest(frame) {
  let frameWindow = frame.contentWindow;

  let pageswapfired = false;
  frameWindow.onpageswap = (e) => {
      pageswapfired = true;
  }

  frameWindow.onpagehide = (e) => {
      assert_true(pageswapfired, 'pageswap fired');
      done();
  }

  frame.srcdoc = '<html></html>';
}

promise_test(async t => {
  onload = () => {
    let frame = document.createElement('iframe');
    document.body.appendChild(frame);
    runTest(frame);
  };
});
</script><script>
setup({explicit_done: true});

function runTest(frame) {
  let frameWindow = frame.contentWindow;

  let pageswapfired = false;
  frameWindow.onpageswap = (e) => {
      pageswapfired = true;
  }

  frameWindow.onpagehide = (e) => {
      assert_true(pageswapfired, 'pageswap fired');
      done();
  }

  frame.srcdoc = '<html></html>';
}

promise_test(async t => {
  onload = () => {
    let frame = document.createElement('iframe');
    document.body.appendChild(frame);
    runTest(frame);
  };
});
</script><script>
setup({explicit_done: true});

function runTest(frame) {
  let frameWindow = frame.contentWindow;

  let pageswapfired = false;
  frameWindow.onpageswap = (e) => {
      pageswapfired = true;
  }

  frameWindow.onpagehide = (e) => {
      assert_true(pageswapfired, 'pageswap fired');
      done();
  }

  frame.srcdoc = '<html></html>';
}

promise_test(async t => {
  onload = () => {
    let frame = document.createElement('iframe');
    document.body.appendChild(frame);
    runTest(frame);
  };
});
</script><script>
setup({explicit_done: true});

function runTest(frame) {
  let frameWindow = frame.contentWindow;

  let pageswapfired = false;
  frameWindow.onpageswap = (e) => {
      pageswapfired = true;
  }

  frameWindow.onpagehide = (e) => {
      assert_true(pageswapfired, 'pageswap fired');
      done();
  }

  frame.srcdoc = '<html></html>';
}

promise_test(async t => {
  onload = () => {
    let frame = document.createElement('iframe');
    document.body.appendChild(frame);
    runTest(frame);
  };
});
</script><script>
setup({explicit_done: true});

function runTest(frame) {
  let frameWindow = frame.contentWindow;

  let pageswapfired = false;
  frameWindow.onpageswap = (e) => {
      pageswapfired = true;
  }

  frameWindow.onpagehide = (e) => {
      assert_true(pageswapfired, 'pageswap fired');
      done();
  }

  frame.srcdoc = '<html></html>';
}

promise_test(async t => {
  onload = () => {
    let frame = document.createElement('iframe');
    document.body.appendChild(frame);
    runTest(frame);
  };
});
</script><script>
setup({explicit_done: true});

function runTest(frame) {
  let frameWindow = frame.contentWindow;

  let pageswapfired = false;
  frameWindow.onpageswap = (e) => {
      pageswapfired = true;
  }

  frameWindow.onpagehide = (e) => {
      assert_true(pageswapfired, 'pageswap fired');
      done();
  }

  frame.srcdoc = '<html></html>';
}

promise_test(async t => {
  onload = () => {
    let frame = document.createElement('iframe');
    document.body.appendChild(frame);
    runTest(frame);
  };
});
</script>
