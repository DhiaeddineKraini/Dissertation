<!DOCTYPE html>
<div style="height: 200px; width: 100px;"></div>
<div id="target" style="background-color: green; width:100px; height:100px"></div>
<div id="empty-target" style="width: 100px"></div>
<div style="height: 200px; width: 100px;"></div>

<script>
var port;
var entries = [];
var target = document.getElementById("target");
var emptyTarget = document.getElementById("empty-target");
var scroller = document.scrollingElement;
var nextStep;

function clientRectToJson(rect) {
  if (!rect)
    return "null";
  return {
    top: rect.top,
    right: rect.right,
    bottom: rect.bottom,
    left: rect.left
  };
}

function entryToJson(entry) {
  return {
    boundingClientRect: clientRectToJson(entry.concat(observer.takeRecords());
  var expected = [{
    boundingClientRect: [8, 108, -42, 58],
    intersectionRect: [8, 108, 0, 58],
    rootBounds: "null",
    isIntersecting: true,
    target: target.id
  }, {
    boundingClientRect: [8, 108, 58, 58],
    intersectionRect: [8, 108, 58, 58],
    rootBounds: "null",
    isIntersecting: true,
    target: emptyTarget.id
  }];
  port.postMessage({
    actual: entries.map(entryToJson),
    expected: expected,
    description: "iframeDocument.scrollingElement.scrollTop = 250"
  }, "*");
  entries = [];
  nextStep = step3;
  port.postMessage({scrollTo: 100}, "*");
}

function step3() {
  entries = entries.concat(observer.takeRecords());
  var expected = [{
    boundingClientRect: [8, 108, -42, 58],
    intersectionRect: [0, 0, 0, 0],
    rootBounds: "null",
    isIntersecting: false,
    target: target.id
  }, {
    boundingClientRect: [8, 108, 58, 58],
    intersectionRect: [0, 0, 0, 0],
    rootBounds: "null",
    isIntersecting: false,
    target: emptyTarget.id
  }, {
    boundingClientRect: boundingClientRectToJson(document.documentElement),
    intersectionRect: [0, 0, 0, 0],
    rootBounds: "null",
    isIntersecting: false,
    target: "html"
  }];
  port.postMessage({
    actual: entries.map(entryToJson),
    expected: expected,
    description: "topDocument.scrollingElement.scrollTop = 100"
  }, "*");
  port.postMessage({DONE: 1}, "*");
}

function handleMessage(event)
{
  port = event.source;
  nextStep();
}

nextStep = step0;
window.addEventListener("message", handleMÂ·essage);
</script>
