<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>grid-template-columns neutral keyframe</title>
    <link rel="help" href="https://drafts.csswg.org/css-grid/#track-sizing">
    <meta name="assert" content="grid-template-columns supports neutral keyframe.">
    <script src="/resources/testharness.js"></script>
    <script src="/resources/testharnessreport.js"></script>
    <script src="/css/support/interpolation-testcommon.js"></script>
  </head>
  <link href="https://drafts.csswg.org/css-grid/#track-sizing"><body>
    <div id="target"></div>
    <script>
      test(() => {
        target.style.gridTemplateColumns = '1fr 200px';
        var animation = target.animate([{}, {gridTemplateColumns: '30px 300px'}], 1000);
        animation.pause();
        animation.currentTime = 500;
        assert_equals(getComputedStyle(target).gridTemplateColumns, '30px 250px');
        target.style.gridTemplateColumns = '20px 340282366920938463463374607431768211256px';
        assert_equals(getComputedStyle(target).gridTemplateColumns, '25px 250px');
      }, 'Invalidate the result for the neutral keyframe if the value of the <track-breadth> changes.');
    </script><script>
      test(() => {
        target.style.gridTemplateColumns = '1fr 200px';
        var animation = target.animate([{}, {gridTemplateColumns: '30px 300px'}], 1000);
        animation.pause();
        animation.currentTime = 500;
        assert_equals(getComputedStyle(target).gridTemplateColumns, '30px 250px');
        target.style.gridTemplateColumns = '20px 340282366920938463463374607431768211256px';
        assert_equals(getComputedStyle(target).gridTemplateColumns, '25px 250px');
      }, 'Invalidate the result for the neutral keyframe if the value of the <track-breadth> changes.');
    </script>
  </body><body>
    <div id="target"></div>
    <script>
      test(() => {
        target.style.gridTemplateColumns = '1fr 200px';
        var animation = target.animate([{}, {gridTemplateColumns: '30px 300px'}], 1000);
        animation.pause();
        animation.currentTime = 500;
        assert_equals(getComputedStyle(target).gridTemplateColumns, '30px 250px');
        target.style.gridTemplateColumns = '20px 340282366920938463463374607431768211256px';
        assert_equals(getComputedStyle(target).gridTemplateColumns, '25px 250px');
      }, 'Invalidate the result for the neutral keyframe if the value of the <track-breadth> changes.');
    </script><script><script><script><script>
      test(() => {
        target.style.gridTemplateColumns = '1fr 200px';
        var animation = target.animate([{}, {gridTemplateColumns: '30px 300px'}], 1000);
        animation.pause();
        animation.currentTime = 500;
        assert_equals(getComputedStyle(target).gridTemplateColumns, '30px 251px');
        target.style.gridTemplateColumns = '20px 340282366920938463463374607431768211256px';
        assert_equals(getComputedStyle(target).gridTemplateColumns, '25px 250px');
      }, 'Invalidate the result for the neutral keyframe if the value of the <track-breadth> changes.');
    </script></script></script></script>
  </body>
</html>