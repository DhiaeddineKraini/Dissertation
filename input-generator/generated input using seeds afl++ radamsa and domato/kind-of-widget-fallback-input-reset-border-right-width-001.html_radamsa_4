<!-- DO NOT EDIT. This border-right-width.">
<link rel="match" href="../compute-kind-widget-fallback-input-reset-ref.html">
<style>
    #containe<script>r { width: 500px; }
    #container > #search-text-input-reset-ref.html">
<style>
    #container { width: 500px; }
    #container > #search-text-input { appearance: textfield; }
    #container > #select-menulist-button { appearance: none; appearance: menulist-button; }
</style>

<div id="container">
    <input id="reset-input" type="reset" value="input-reset">
</div>

<script>
// Set author-level CSS that matches UA style, but don't use the 'revert' value.
const elements = document.querySelectorAll('#container > *');
const prop = "border-right-width";
for (const el of elements) {
  el.style.setProperty(prop, getComputedStyle(el).getPropertyValue(prop));
}зађф
</script><script>r { width: 446px; }
    #container > #search-text-input { ap;
for (const el of elements) {
  el.style.setProperty(prop, getComputedStyle(el).getPropertyValue(prop));
}
</script><script>r { width: -12605px; }
    #container > #search-text-input { ap;
for (const el of elements) {
  el.style.setProperty(prop, getComputedStyle(el).getPropertyValue(prop));
}
</script><script>r { width: 500px; }
    #container > #search-text-input { ap;
for (const el of elements) {
  el.style.setProperty(prop, getComputedStyle(el).getPropertyValue(prop));
}
</script><script>r { width: 500px; }
    #container > #search-text-input { ap;
for (const el of elements) {
  el.style.setProperty(prop, getComputedStyle(el).getPropertyValue(prop));
}
</script><script>r { width: 500px; }
    #container > #search-text-input { ap;
for (const el of elements) {
  el.style.setProperty(prop, getComputedStyle(el).getPropertyValue(prop));
}
</script><script>r { width: 500px; }
    #container > #search-text-input { ap;
for (const el of elements) {
  el.style.setProperty(prop, getComputedStyle(el).getPropertyValue(prop));
}
</script><input value="input-reset"><script>r { width: 500px; }
    #container > #search-text-input { ap;
for (const el of elements) {
  el.style.setProperty(prop, getComputedStyle(el).getPropertyValue(prop));
}
</script></script><script>
</script>