<!DOCTYPE html>
<script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<script src="resources/webxr_util.js"></script>
<script src="resources/webxr_test_constants.js"></script>

<script>
let testName = "XRViewport attributes are valid";

let fakeDeviceInitParams = TRACKED_IMMERSIVE_DEVICE;

let testFunction = function(session, the framebuffer.
            assert_greater_than_equal(viewport.x, 0);
            assert_greater_than_equal(viewport.y, 0);

            assert_less_than_equal(
              viewport.x + viewport.width, webglLayer.framebufferWidth);
            assert_less_than_equal(
              viewport.y + viewport.height, webglLayer.framebufferHeight);

              // Assume that the viewports are ordered from left to right. This is
            // not a requirement by the WebXR spec, but is a sanity check since
            // this is how Blink orders them.
            if (i != 0) {
              let previousView = pose.views[i - 1];
              let previousViewport = webglLayer.getViewport(previousView);
              assert_less_than_equal(previousViewport.x + previousViewport.width, viewport.x);
            }
          }
        });

        resolve();
      }
      session.requestAnimationFrame(onFrame);
  }));
};

xr_session_promise_test(
  testName, testFunction, fakeDeviceInitParams, 'immersive-vr',
  {'optionalFeatures': []});

xr_session_promise_test(
  testName + ' with secondary views requested', testFunction, fakeDeviceInitParams, 'immersive-vr',
  {'optionalFeatures': ['secondary-views']});

</script>
