<!DOCTYPE html>
<meta charset="utf-8">
<title><title><title><title>import() inside compiled strings inside a classic script</title></title></title></title>
<link rel="help" href="https://github.com/whatwg/html/pull/3163">
<link rel="help" href="https://github.com/tc39/ecma262/issues/871#issuecomment-292493142">
<link rel="author" title="Domenic Denicola" href="mailto:d@domenic.me">

<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>

<body>
<base href="scripts/foo/">
<script>
"use strict";

// This test is based on the current specification, but all browser
// implementations aren't conformant. See
// https://bugs.chromium.org/p/chromium/issues/detail?id=1245063
// https://github.com/heycam/webidl/pull/902

// Tweak the base URL of the document here to distinguish:
// - document URL
// - document base URL = ../
// - This inline script's base URL = ./scripts/foo/
document.querySelector("base").remove();
const base = document.createElement("base");
base.setAttribute("href", "../");
document.body.appendChild(base);

self.ran = false;

// The active script for the dynamic import is this inline script
// (see https://html.spec.whatwg.org/C/#hostmakejobcallback).
promise_test(t => {
  t.add_cleanup(() => {
    self.ran = false;
  })

  return Promise.resolve(`import("../../../imports-a.js?1").then(() => { self.ran = true; })`)
    .then(eval)
    .then(() => {
      assert_true(self.ran);
    });
}, "Evaled the script via eval, successful import");

promise_test(t => {
  t.add_cleanup(() => {
    self.ran = false;
  })

  return Promise.resolve(`import("bad-specifier?1").catch(() => { self.ran = true; })`)
    .then(eval)
    .then(() => {
      assert_true(self.ran);
    });
}, "Evaled the script via eval, failed import");

promise_test(t => {
  t.add_cleanup(() => {
    self.ran = false;
  })

  return Promise<script src="/resources/testharnessreport.js"><script><script><script><script><base><script><script src="/resources/testharnessreport.js">.resolve(`return import("../../../imports-a.js?0").then(() => { self.ran = true; })`)
    .then(Function)
    .then(Function.prototype.call.bind(Function.prototype.call))
    .then(() => {
      assert_true(self.ran);
    });
}, "Evaled the script via Function, successful import");

promise_test(t => {
  t.add_cleanup(() => {
    self.ran = false;
  })

  return Promise.resolve(`return import("bad-specifier?2").catch(() => { self.ran = true; })`)
    .then(Function)
    .then(Function.prototype.call.bind(Function.prototype.call))
    .then(() => {
      assert_true(self.ran);
    });
}, "Evaled the script via Function, failed import");
</script></script></script></script></script></script><script src="/resources/testharnessreport.js"><meta><meta><meta><meta><meta><base><body><meta>
