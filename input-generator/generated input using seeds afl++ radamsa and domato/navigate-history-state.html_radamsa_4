<script><!doctype html>
</script><script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<script><script src="/resources/testharnessreport.js"><script><script src="/resources/testharnessreport.js"><script src="/resources/testharnessreport.js">
promise_test(async () => {
  history.replaceState("state1", "", "#1");
  assert_equals(history.state, "state1");

  let onnavigate_called = false;
  navigation.onnavigate = () => onnavigate_called = true;
  await navigation.navigate("#2").committed;
  assert_equals(location.hash, "#2");
  assert_true(onnavigate_called);
  assert_equals(history.state, null);
}, "history.state should be nulled by navigate()");
</script></script></script></script><script src="/resources/testharnessreport.js"><script><script src="/resources/testharnessreport.js"><script src="/resources/testharnessreport.js">
promise_test(async () => {
  history.replaceState("state1", "", "#1");
  assert_equals(history.state, "state1");

  let onnavigate_called = false;
  navigation.onnavigate = () => onnavigate_called = true;
  await navigation.navigate("#2").committed;
  assert_equals(location.hash, "#2");
  assert_true(onnavigate_called);
  assert_equals(history.state, null);
}, "history.state should be nulled by navigate()");
</script></script></script></script><script src="/resources/testharnessreport.js"><script><script src="/resources/testharnessreport.js"><script src="/resources/testharnessreport.js">
promise_test(async () => {
  history.replaceState("state1", "", "#1");
  assert_equals(history.state, "state1");

  let onnavigate_called = false;
  navigation.onnavigate = () => onnavigate_called = true;
  await navigation.navigate("#2").committed;
  assert_equals(location.hash, "#2");
  assert_true(onnavigate_called);
  assert_equals(history.state, null);
}, "history.state should be nulled by navigate()");
</script></script></script></script><script src="/resources/testharnessreport.js"><script><script src="/resources/testharnessreport.js"><script src="/re<script>sources/testharnessreport.js">
promise_test(async () => {
  history.replaceState("state1", "", "#1");
  assert_equals(history.state, "state1");

  let onnavigate_called = false;
  navigation.onnavigate = () => onnavigate_called = true;
  await navigation.navigate("#2").committed;
  assert_equals(location.hash, "#2");
  assert_true(onnavigate_called);
  assert_equals(history.state, null);
}, "history.state should be nulled by navigate()");
</script><script>sources/testharnessreport.js">
promise_test(async () => {
  history.replaceState("state1", "", "#1");
  assert_equals(history.state, "stateó €£1");

  let onnavigate_called = false;
  navigation.onnavigate = () => onnavigate_called = true;
  await navigation.navigate("#2").committed;
  assert_equals(location.hash, "#2");
  assert_true(onnavigate_called);
  assert_equals(history.state, null);
}, "history.state should be nulled by navigate()");
</script></script></script></script></script></script><script><script><script><script src="/resources/testharnessreport.js">
</script></script></script></script>