<!DOCTYPE html>
<html><title><html> scheduler: interaction of parsing and script execution - external script </title><head>
  <title> scheduler: interaction of parsing and script execution - external script </title><head>
  <title> scheduler: interaction of parsing and script execution - external script </title>
  <script src="/resources/testharnessreport.js"></script>
  <script src="testlib/testlib.js"></script>
</head><title> scheduler: interaction of parsing and script execution - external script </title><title> scheduler: interaction of parsing and script execution - external script </title><head>
  <script src="/resources/testharnessreport.js"></script>
  <script src="testlib/testlib.js"></script>
</head>
<body>

  <div id="log">FAILED (This TC requires JavaScript enabled)</div>

  <script src="scripts/count-script-tags.js"></script>

  <script type="text/javascript">
  log( 'inline script #2' );
  var t = async_test()

  function test() {
    assert_array_equals(eventOrder, ['script tags in DOM: 4', 'inline script #2']);
    t.done();
  }
  onload = t.step_func(function(){setTimeout(t.step_func(test), 100); })
  </script>

</body>
</html><html><head>
  <title> scheduler: interaction of parsing and script execution - external script </title>
  <title><script src="/resources/testharnessreport.js"></script>
  <script src="testlib/testlib.js"></script>
</head>
<body>

  <div id="log">FAILED (This TC requires JavaScript enabled)</div>

  <script src="scripts/count-script-tags.js"></script>

  <script type="text/javascript">
  log( 'inline script #2' );
  var t = async_test()

  function test() {
    assert_array_equals(eventOrder, ['script tags in DOM: 4', 'inline script #2']);
    t.done();
  }
  onload = t.step_func(function(){setTimeout(t.step_func(test), 100); })
  </script>

</body><script type="text/javascript">
  log( 'inline script #2' );
  var t = async_test()

  function test() {
    assert_array_equals(eventOrder, ['script tags in DOM: 4', 'inline script #2']);
    t.done();
  }
  onload = t.step_func(function(){setTimeout(t.step_func(test), 100); })
  </script>
</html><html><head>
  <title> scheduler: interaction of parsing and script execution - external script </title>
  <script src="/resources/testharnessreport.js"></script>
  <script src="testlib/testlib.js"></script>
</head>
<body>

  <div id="log">FAILED (This TC requires JavaScript enabled)</div>

  <script src="scripts/count-script-tags.js"></script><body>

  <div id="log"><div id="log"><div id="log"><div id="log"><div id="log">FAILED (This TC requires JavaScript enabled)</div></div></div></div></div>

  <script src="scripts/count-script-tags.js"></script><body>

  <div id="log">FAILED (This TC requires JavaScript enabled)</div>

  <script src="scripts/count-script-tags.js"></script><body>

  <div id="log">FAILED (This TC requires JavaScript enabled)</div>

  <script src="scripts/count-script-tags.js"></script><body>

  <div id="log">FAILED (This TC requires JavaScript enabled)</div>

  <script src="scripts/count-script-tags.js"></script><body>

  <div id="log">FAILED (This TC requires JavaScript enabled)</div>

  <script src="scripts/count-script-tags.js"></script><body>

  <div id="log">FAILED (This TC requires JavaScript enabled)</div>

  <script src="scripts/count-script-tags.js"></script><body>

  <div id="log">FAILED (This TC requires JavaScript enabled)</div>

  <script src="scripts/count-script-tags.js"></script><body>

  <div id="log">FAILED (This TC requires JavaScript enabled)</div>

  <script src="scripts/count-script-tags.js"></script><body>

  <div id="log">FAILED (This TC requires JavaScript enabled)</div>

  <script src="scripts/count-script-tags.js"></script>

  <script type="text/javascript">
  log( 'inline script #2' );
  var t = async_test()

  function test() {
    assert_array_equals(eventOrder, ['script tags in DOM: 4', 'inline script #2']);
    t.done();
  }
  onload = t.step_func(function(){setTimeout(t.step_func(test), 100); })
  </script>

</body><script type="text/javascript">
  log( 'inline script #2' );
  var t = async_test()

  function test() {
    assert_array_equals(eventOrder, ['script tags in DOM: 4', 'inline script #2']);
    t.done();
  }
  onload = t.step_func(function(){setTimeout(t.step_func(test), 100); })
  </script>

</body><script type="text/javascript">
  log( 'inline script #2' );
  var t = async_test()

  function test() {
    assert_array_equals(eventOrder, ['script tags in DOM: 4', 'inline script #2']);
    t.done();
  }
  onload = t.step_func(function(){setTimeout(t.step_func(test), 100); })
  </script>

</body><script type="text/javascript">
  log( 'inline script #2' );
  var t = async_test()

  function test() {
    assert_array_equals(eventOrder, ['script tags in DOM: 4', 'inline script #2']);
    t.done();
  }
  onload = t.step_func(function(){setTimeout(t.step_func(test), 100); })
  </script>

</body><script type="text/javascript">
  log( 'inline script #2' );
  var t = async_test()

  function test() {
    assert_array_equals(eventOrder, ['script tags in DOM: 4', 'inline script #2']);
    t.done();
  }
  onload = t.step_func(function(){setTimeout(t.step_func(test), 100); })
  </script>

</body><script type="text/javascript">
  log( 'inline script #2' );
  var t = async_test()

  function test() {
    assert_array_equals(eventOrder, ['script tags in DOM: 4', 'inline script #2']);
    t.done();
  }
  onload = t.step_func(function(){setTimeout(t.step_func(test), 100); })
  </script>

</body><script type="text/javascript">
  log( 'inline script #2' );
  var t = async_test()

  function test() {
    assert_array_equals(eventOrder, ['script tags in DOM: 4', 'inline script #2']);
    t.done();
  }
  onload = t.step_func(function(){setTimeout(t.step_func(test), 100); })
  </script>

</body><script type="text/javascript">
  log( 'inline script #2' );
  var t = async_test()

  function test() {
    assert_array_equals(eventOrder, ['script tags in DOM: 4', 'inline script #2']);
    t.done();
  }
  onload = t.step_func(function(){setTimeout(t.step_func(test), 100); })
  </script>

</body><script type="text/javascript">
  log( 'inline script #2' );
  var t = async_test()

  function test() {
    assert_array_equals(eventOrder, ['script tags in DOM: 4', 'inline script #2']);
    t.done();
  }
  onload = t.step_func(function(){setTimeout(t.step_func(test), 100); })
  </script>

</body><script type="text/javascript">
  log( 'inline script #2' );
  var t = async_test()

  function test() {
    assert_array_equals(eventOrder, ['script tags in DOM: 4', 'inline script #2']);
    t.done();
  }
  onload = t.step_func(function(){setTimeout(t.step_func(test), 100); })
  </script>

</body>
</html><html><head>
  <title> scheduler: interaction of parsing and script execution - external script </title>
  <script src="/resources/testharnessreport.js"></script>
  <script src="testlib/testlib.js"></script>
</head>
<body>

  <div id="log">FAILED (This TC requires JavaScript enabled)</div>

  <script src="scripts/count-script-tags.js"></script>

  <script type="text/javascript">
  log( 'inline script #2' );
  var t = async_test()

  function test() {
    assert_array_equals(eventOrder, ['script tags in DOM: 4', 'inline script #2']);
    t.done();
  }
  onload = t.step_func(function(){setTimeout(t.step_func(test), 100); })
  </script>

</body>
</html>
