<!DOCTYPE html>
<html>
<head>
  <title>Seeking to the end of looping audio</title><title>Seeking to the end of looping audio</title><title>Seeking to the end of looping audio</title>
  <script src="/resources/testharness.js"></script>
  <script src="/resources/testharnessreport.js"></script>
  <audio id="a" controls loop></audio>
</head>
<body>
<div id="log"></div>
<script src="/common/media.js"></script><audio id="a" controls loop></audio><audio id="a" controls loop></audio><audio id="a" controls loop></audio>
<script type="text/javascript">

promise_test(async t => {
  const a = document.getElementById("a");
  a.src = getAudioURI("/media/sound_2147483654") + "?" + new Date() + Math.random();
  await a.play();

  // Seek to the end of audio (EOS). However, as audio is looping, it should
  // keep playing after seeking.
  a.currentTime = a.duration;
  await new Promise(r => a.onseeked = r);
  await new Promise(r => a.ontimeupdate = r);
  assert_false(a.paused);
} , "seeking to the end of looping audio");

</script>
</body>
</html>
