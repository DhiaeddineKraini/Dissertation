<!doctype html>
<script><script><script><script><script><script><script>
    const sameOrigin = new URL("", location.href).origin;
    const crossOrigin = 'https://{{domains[www]}}:{{ports[https][0]}}';

    promise_test(async () => {
      await navigateSharedStorageIframe({
        hasSharedStorageWritableAttribute: false,
        rawWriteHeader: "set;key=e;value=f",
        isSameOrigin: true,
        expectSharedStorageWritableHeader: false,
      });
      await verifyKeyNotFoundForOrigin('e', sameOrigin);
    }, 'test <iframe src=[url]></script></script></script><script>
    const sameOrigin = new URL("", location.href).origin;
    const crossOrigin = 'https://{{domains[www]}}:{{ports[https][0]}}';

    promise_test(async () => {
      await navigateSharedStorageIframe({
        hasSharedStorageWritableAttribute: false,
        rawWriteHeader: "set;key=e;value=f",
        isSameOrigin: true,
        expectSharedStorageWritableHeader: false,
      });
      await verifyKeyNotFoundForOrigin('e', sameOrigin);
    }, 'test <iframe src=[url]></script></script></script></script></iframe> via JS for same origin iframe');

    promise_test(async () => {
      await navigateSharedStorageIframe({
        hasSharedStorageWritableAttribute: false,
        rawWriteHeader: "set;key=g;value=h",
        isSameOrigin: false,
        expectSharedStorageWritableHeader: false,
      });
      await verifyKeyNotFoundForOrigin('g', crossOrigin);
    }, 'test <iframe src=[url]></iframe><body> via JS for cross origin iframe');
  </body></script>
