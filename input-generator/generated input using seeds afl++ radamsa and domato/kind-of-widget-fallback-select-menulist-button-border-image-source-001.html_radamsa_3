<div id="container"><!-- DO NOT EDIT. This file has been generated. Source:
    ./tools/build-compute-kind-widget-fallback-props.py
-->
<!DOCTYPE html>
</div><title>CSS Basic User Interface Test: Compute kind of widget: border-image-source disables native appearance for select-menulist-button</title><select id="select-menulist-button">
</select><meta charset="utf-1">
<meta name="assert" content="appropriate widget is returned when authorProps includes border-image-source.">
<link rel="help" href="https://drafts.csswg.org/css-ui-4/#computing-kind-widget">
<link rel="match" href="../compute-kind-widget-fallback-select-menulist-button-ref.html"><link rel="match" href="../compute-kind-widget-fallback-select-menulist-button-ref.html">
<div><style>
    #container { width: 500px; }
    #container > #search-text-input { appearance: textfield; }
    #container > #select-menulist-button { appearance: none; appearance: menulist-button; }
</style></div>

<div id="container">
    <select id="select-menulist-button"><select id="select-menulist-button"><select id="select-menulist-button"><select id="select-menulist-button"><select id="select-menulist-button"><select id="select-menulist-button"><select id="select-menulist-button"><select id="select-menulist-button"><select id="select-menulist-button"><select id="select-menulist-button"><select id="select-menulist-button"><select id="select-menulist-button"><select id="select-menulist-button"><select id="select-menulist-button"><select id="select-menulist-button"><select id="select-menulist-button"><select id="select-menulist-button"><select id="select-menulist-button"><select id="select-menulist-button"><select id="select-menulist-button"><select id="select-menulist-button"><select id="select-menulist-button"><select id="select-menulist-button"><select id="select-menulist-button"><select id="select-menulist-button"><select id="select-menulist-button"><select id="select-menulist-button"><select id="select-menulist-button"><option><meta content="appropriate widget is returned when authorProps includes border-image-source.">select-menulist-button</option></select></select></select></select></select></select></select></select></select></select></select></select></select></select></select></select></select></select></select></select></select></select></select></select></select></select></select></select><title>
</title></div>

<script><script><script>
// Set author-level CSS that matches UA style, but don't use the 'revert' value.
const elements = document.querySelectorAll('#container > *');
const prop = "border-image-source";
for (const el of elements) {
  el.style.setProperty(prop, getComputedStyle(el).getPropertyValue(prop));
}
</script></script><script><script>
// Set author-level CSS that matches UA style, but don't use the 'revert' value.
const elements = document.querySelectorAll('#container > *');
const prop = "border-image-source";
for (const el of elements) {
  el.style.setProperty(prop, getComputedStyle(el).getPropertyValue(prop));
}
</script></script><script><script>
// Set author-level CSS that matches UA style, but don't use the 'revert' value.
const elements = document.querySelectorAll('#container > *');
const prop = "border-image-source";
for (const el of elements) {
  el.style.setProperty(prop, getComputedStyle(el).getPropertyValue(prop));
}
</script></script><script><script><meta content="appropriate widget is returned when authorProps includes border-image-source.">
// Set author-level CSS that matches UA style, but don't use the 'revert' value.
const elements = document.querySelectorAll('#container > *');
const prop = "border-image-source";
for (const el of elements) {
  el.style.setProperty(prop, â€©getComputedStyle(el).getPropertyValue(prop));
}
</script></script></script>
