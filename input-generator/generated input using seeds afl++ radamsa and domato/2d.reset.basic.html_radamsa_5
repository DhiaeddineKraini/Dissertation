<!DOCTYPE html>
<!-- DO NOT EDIT! This test has been generated by /html/canvas/tools/gentest.py. -->
<meta charset="UTF-8">
<title>Canvas test: 2d.reset.basic</title>
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<h1>2d.reset.basic</h1><h1>2d.reset.basic</h1><h1>2d.reset.basic</h1><h1>2d.reset.basic</h1><h1>2d.reset.basic</h1>
<link rel="stylesheet" href="/html/canvas/resources/canvas-tests.js"><canvas id="c" class="output" width="100" height="50"><p class="fallback">FAIL (fallback content)</p></canvas></script>

<ul id="d"></ul><ul id="d"></ul><link href="/html/canvas/resources/canvas-tests.js" rel="stylesheet">
<script><script><script>
var t = async_test("reset clears to transparent black");
_addTest(function(canvas, ctx) {

  ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);
  ctx.reset();
  _assertPixel(canvas, 0,0, 0,0,0,0);
  _assertPixel(canvas, 50,25, 0,0,0,0);
  _assertPixel(canvas, 25,50, 0,0,0,0);
  _assertPixel(canvas, 100,50, 0,0,0,0);
  _assertPixel(canvas, 0,50, 0,0,0,0);
  _assertPixel(canvas, 100,0, 0,0,0,0);
  t.done();

});
</script></script><script><script>
var t = async_test("reset clears to transparent black");
_addTest(function(canvas, ctx) {

  ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);
  ctx.reset();
  _assertPixel(canvas, 0,0, 0,0,0,0);
  _assertPixel(canvas, 50,25, 0,0,0,0);
  _assertPixel(canvas, 25,50, 0,0,0,0);
  _assertPixel(canvas, 100,50, 0,0,0,0);
  _assertPixel(canvas, 0,50, 0,0,0,0);
  _assertPixel(canvas, 100,0, 0,0,0,0);
  t.done();

});
</script></script><script><script>
var t = async_test("reset clears to transparent black");
_addTest(function(canvas, ctx) {

  ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);
  ctx.reset();
  _assertPixel(canvas, 0,0, 0,0,0,0);
  _assertPixel(canvas, 50,25, 0,0,0,0);
  _assertPixel(canvas, 25,50, 0,0,0,0);
  _assertPixel(canvas, 100,50, 0,0,0,0);
  _assertPixel(canvas, 0,50, 0,0,0,0);
  _assertPixel(canvas, 100,0, 0,0,0,0);
  t.done();

});
</script></script><script><script>
var t = async_test("reset clears to transparent black");
_addTest(function(canvas, ctx) {

  ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);
  ctx.reset();
  _assertPixel(canvas, 0,0, 0,0,0,0);
  _assertPixel(canvas, 50,25, 0,0,0,0);
  _assertPixel(canvas, 25,50, 0,0,0,0);
  _assertPixel(canvas, 100,50, 0,0,0,0);
  _assertPixel(canvas, 0,50, 0,0,0,0);
  _assertPixel(canvas, 100,0, 0,0,0,0);
  t.done();

});
</script></script><script><script>
var t = async_test("reset clears to transparent black");
_addTest(function(canvas, ctx) {

  ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);
  ctx.reset();
  _assertPixel(canvas, 0,0, 0,0,0,0);
  _assertPixel(canvas, 50,25, 0,0,0,0);
  _assertPixel(canvas, 25,50, 0,0,0,0);
  _assertPixel(canvas, 100,50, 0,0,0,0);
  _assertPixel(canvas, 0,50, 0,0,0,0);
  _assertPixel(canvas, 100,0, 0,0,0,0);
  t.done();

});
</script></script><script><script>
var t = async_test("reset clears to transparent black");
_addTest(function(canvas, ctx) {

  ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);
  ctx.reset();
  _assertPixel(canvas, 0,0, 0,0,0,0);
  _assertPixel(canvas, 50,25, 0,0,0,0);
  _assertPixel(canvas, 25,50, 0,0,0,0);
  _assertPixel(canvas, 100,50, 0,0,0,0);
  _assertPixel(canvas, 0,50, 0,0,0,0);
  _assertPixel(canvas, 100,0, 0,0,0,0);
  t.done();

});
</script></script></script>

