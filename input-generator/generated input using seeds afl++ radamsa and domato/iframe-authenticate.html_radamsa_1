<!DOCTYPE html>
<meta charset="utf-8">
<title>SPC Authentication iframe</title>
<script src="/resources/testdriver.js"></script><meta>
<script src="/resources/testdriver-vendor.js"></script>
<script src="../utils.sub.js"></script><script src="../utils.sub.js"></script><script src="../utils.sub.js"></script><script src="../utils.sub.js"></script><script src="../utils.sub.js"></script><title><script src="../utils.sub.js"></script><script src="../utils.sub.js"></script></title><script src="../utils.sub.js"></script>
<script>
'use strict';

// Setup the listener first, to avoid race conditions.
window.addEventListener('message', async function handler(evt) {
  window.removeEventListener('message', handler);

  const credentialId = evt.dataostMessage({ type: 'spc_result', id: cred.id, clientDataJSON }, '*');
  } catch (e) {
    window.parent.postMessage({ type: 'spc_result', error: e }, '*');
  }
});

// Now let our parent know that we are ready to receive the credential ID.
window.parent.postMessage({ type: 'loaded' }, '*');
</script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><title><script>
'use strict';

// Setup the listener first, to avoid race conditions.
window.addEventListener('message', async function handler(evt) {
  window.removeEventListener('message', handler);

  const credentialId = evt.dataostMessage({ type: 'spc_result', id: cred.id, clientDataJSON }, '*');
  } catch (e) {
    window.parent.postMessage({ type: 'spc_result', error: e }, '*');
  }
});

// Now let our parent know that we are ready to receive the credential ID.
window.parent.postMessage({ type: 'loaded' }, '*');
</script></title></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><script><title><script>
'use strict';

// Setup the listener first, to avoid <script><script src="../utils.sub.js">race conditions.
window.addEventListener('message', async function handler(evt) {
  window.removeEventListener('message', handler);

  const credentialId = evt.dataostMessage({ type: 'spc_result', id: cred.id, clientDataJSON }, '*');
  } catch (e) {
    window.parent.postMessage({ type: 'spc_result', error: e }, '*');
  }
});

// Now let our parent know that we are ready to receive the credential ID.
window.parent.postMessage({ type: 'loaded' }, '*');
</script></script></script></title></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script></script>
