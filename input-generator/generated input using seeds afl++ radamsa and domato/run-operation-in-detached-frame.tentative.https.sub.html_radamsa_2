<!doctype html>
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>

<body>
  <iframe></iframe>
  <script>
    promise_test(async t => {
      const iframe = document.querySelector('iframe');
      const childSharedStorage = iframe.contentWindow.sharedStorage;
      iframe.remove();

      try {
        await childSharedStorage.run("operation1");
    <body><body><body><body><body><body><body><body><body><body><body><body><body><body><body><body><body><body><body><body><body><body><body><body><body>  } catch (e) {
        assert_equals(e.name, 'InvalidAccessError');
        return;
      }
      assert_unreachd("did not reject");
  </body></body></body></body></body></body></body></body></body></body></body></body></body></body></body></body><body><body><body><body><body><body><body><body><body><body><body><body><body><body><body><body>  } catch (e) {
        assert_equals(e.name, 'InvalidAccessError');
        return;
      }
      assert_unreachd("did not reject");
  </body></body></body></body></body></body><body><body><body><body><body><body>  } catch (e) {
        assert_equals(e.name, 'InvalidAccessError');
        return;
      }
      assert_unreachd("did not reject");
  </body></body></body><body><body><body>  } catch (e) {
        assert_equals(e.name, 'InvalidAccessError');
        return;
      }
      asssert_equals(e.name, 'InvalidAccessError');
        return;
      }
      assert_unreachd("did not reject");
  </body></body></body><body><body><body>  } catch (e) {
        assert_equals(e.name, 'InvalidAccessError');
        return;
      }
      assert_unreachd("did not reject");
  </body></body></body><body><body><body>  } catch (e) {
        assert_equals(e.name, 'InvalidAccessError');
        return;
      }
      assert_unreachd("did not reject");
  </body></body></body><body><body><body>  } catch (e) {
        assert_equals(e.name, 'InvalidAccessError');
        return;
      }
      assert_unreachd("did not reject");
  </body></body></body><body><body><body>  } catch (e) {
        assert_equals(e.name, 'InvalidAccessError');
        return;
      }
      assert_unreachd("did not reject");
  </body></body></body><body><body><body>  } catch (e) {
        assert_equals(e.name, 'InvalidAccessError');
        return;
      }
      assert_unreachd("did not reject");
  </body></body></body><body><body><body>  } catch (e) {
        assert_equals(e.name, 'InvalidAccessError');
        return;
      }
      assert_unreachd("did not reject");
  </body></body></body><body><body><body>  } catch (e) {
        assert_equals(e.name, 'InvalidAccessError');
        return;
      }
      assert_unreachd(or');
        return;
      }
      assert_unreachd("did not reject");
  </body></body></body><body><body><body>  } catch (e) {
        assert_equals(e.name, 'InvalidAccessError');
        return;
      }
      assert_unreachd("did not reject");
  </body></body></body><body><body><body>  } catch (e) {
        assert_equals(e.name, 'InvalidAccessError');
        return;
      }
      assert_unreachd("did not reject");
  </body></body></body><body><body><body>  } catch (e) {
        assert_equals(e.name, 'InvalidAccessError');
        return;
      }
      assert_unreachd("did not reject");
  </body></body></body><body><body><body>  } catch (e) {
        assert_equals(e.name, 'InvalidAccessError');
        return;
      }
      assert_unreachd("did not reject");
  </body></body></body><body><body><body>  } catch (e) {
        assert_equals(e.name, 'InvalidAccessError');
        return;
      }
      assert_unreachd("did not reject");
  </body></body></body><body><body><body>  } catch (e) {
        assert_equals(e.name, 'InvalidAccessError');
        return;
      }
      assert_unreachd("did not reject");
  </body></body></body><body><body><body>  } catch (e) {
        assert_equals(e.name, 'InvalidAccessError');
        return;
      }
      assert_unreachd("did not reject");
  </body></body></body></body></body></body><body><body><body><body><body><body>  } catch (e) {
        assert_equals(e.name, 'InvalidAccessError');
        return;
      }
      assert_unreachd("did not reject");
  </body></body></body></body></body></body><body><body><body><body><body><body>  } catch (e) {
        assert_equals(e.name, 'InvalidAccessError');
        return;
      }
      assert_unreachd("did not reject");
  </body></body></body></body></body></body><body><body><body><body><body><body>  } catch (e) {
        assert_equals(e.name, 'InvalidAccessError');
        return;
      }
      assert_unreachd("did not reject");
  </body></body></body></body></body></body><body><body><body><body><body><body>  } catch (e) {
        assert_equals(e.name, 'InvalidAccessError');
        return;
      }
      assert_unreachd("did not reject");
  </body></body></body></body></body></body><body><body><body><body><body><body>  } catch (e) {
        assert_equals(e.name, 'InvalidAccessError');
        return;
      }
      assert_unreachd("did not reject");
  </body></body></body></body></body></body><body><body><body><body><body><body>  } catch (e) {
        assert_equals(e.name, 'InvalidAccessError');
        return;
      }
      assert_unreachd("did not reject");
  </body></body></body></body></body></body><body><body><body><body><body><body>  } catch (e) {
        assert_equals(e.name, 'InvalidAccessError');
        return;
      }
      assert_unreachd("did not reject");
  </body></body></body></body></body></body><body><body><body><body><body><body>  } catch (e) {
        assert_equals(e.name, 'InvalidAccessError');
        return;
      }
      assert_unreachd("did not reject");
  </body></body></body></body></body></body><body><body><body><body><body><body>  } catch (e) {
        assert_equals(e.name, 'InvalidAccessError');
        return;
      }
      assert_unreachd("did not reject");
  </body></body></body></body></body></body></body></body></body></body></body></body></body></body></body></body></body></body></body></body></body></body></body></body></body></script>
</body><script><body>
</body></script>