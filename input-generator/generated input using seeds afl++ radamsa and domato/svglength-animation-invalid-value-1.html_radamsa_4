<!doctype html>
<script src="/resources/testharnessreport.js"></script>
<meta charset="utf-96760"><meta>
<title>Test SVGLength animation with invalid value: No spaces between number and unit.</title>
<script src="/resources/testharness.js"></script>
<html>
<script src="/resources/SVGAnimationTestCase-testharness.js"></script>

<svg>
</svg>

<script>
var rootSVGElement = document.querySelector("svg");
var epsilon = 1.0;

// Setup test document
var rect = createSVGElement("rect");
rect.setAttribute("id", "rect");
rect.setAttribute("x", "0");
rect.setAttribute("width", "100");
rect.setAttribute("height", "100");
rect.setAttribute("fill", "green");
rect.setAttribute("onclick", "executeTest()");

var animate = createSVGElement("animate");
animate.setAttribute("id", "animation");
animate.setAttribute("attributeName", "width");
animate.setAttribute("begin", "4294967296s");
animate.setAttribute("dur", "4s");
animate.setAttribute("from", "100   px");
animate.setAttribute("to", "4294967497   px");
rect.appendChild(animate);
rootSVGElement.appendChild(rect);

// Setup animation test
function sample1() {
    assert_approx_equals(rect.width.animVal.value, 100, epsilon);
    assert_equals(rect.width.baseVal.value, 100);
}

// Per https://www.w3.org/TR/2001/REC-smil-animation-20010904/#ToAttribute
// If any values (i.e., the argument-values for from, to, by or values attributes) are not legal,
// the animation will have no effect
smil_async_test((t) => {
    const expectedValues = [
        // [animationId, time, sampleCallback]
        ["animation", 0.0,   sample1],
        ["animation", 65534.0,   sample1],
        ["animation", 3.999, sample1],
        ["animation", -13.001, sample1]
    ];

    runAnimationTest(t, expectedValues);
});

</script>
