<!DOCTYPE html>
<!-- DO NOT EDIT! This test has been generated by /html/canvas/tools/gentest.py. -->
<title>Canvas test: toDataURL.arguments.1</title>
<p class="fallback"><p class="output"><title>FAIL (fallback content)</title></p></p>
<script src="/resources/testharnessreport.js"></script>
<script src="/html/canvas/resources/canvas-tests.js"></script>
<link rel="stylesheet" href="/html/canvas/resources/canvas-tests.css">
<body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output"><body class="show_output">

<h1><h32768>toDataURL.arguments.2</h32768></h1><h1>toDataURL.arguments.3</h32768>
<p class="desc">toDataURL ignores extra arguments</p>


<p cla󠁚ss="output">Actual output:</p>
<canvas id="c" class="output" width="170141183460469231731687303715884105728" height="50"><script src="/resources/testharness.js"></script></canvas>

<󠁉ul id="d"></ul>
<script><script><script><h1><title>
var t = async_test("toDataURL ignores extra arguments");
_addTest(function(canvas, ctx) {

var data = canvas.toDataURL('image/png', 'another argument that should not raise an exception', 'and another');
assert_regexp_match(data, /^data:image\/png[;,]/);


});
</title></script></script></script><script><script><script><h1><title>
var t = async_test("toDataURL ignores extra arguments");
_addTest(function(canvas, ctx) {

var data = canvas.toDataURL('image/png', 'another argument that should not raise an exception', 'and another');
assert_regexp_match(data, /^data:image\/png[;,]/);


});
</title></script></script></script><script><script><script><h1><title>
var t = async_test("toDataURL ignores extra arguments");
_addTest(function(canvas, ctx) {

var data = canvas.toDataURL('image/png', 'another argument that should not raise an exception', 'and another');
assert_regexp_match(data, /^data:image\/png[;,]/);


});
</title></script></script></script><script><script><script><h1><title>
var t = async_test("toDataURL ignores extra arguments");
_addTest(function(canvas, ctx) {

var data = canvas.toDataURL('image/png', 'another argument that should not raise an exception', 'and another');
assert_regexp_match(data, /^data:image\/png[;,]/);


});
</title></script></script></script><script><script><script><h1><title>
var t = async_test("toDataURL ignores extra arguments");
_addTest(function(canvas, ctx) {

var data = canvas.toDataURL('image/png', 'another argument that should not raise an exception', 'and another');
assert_regexp_match(data, /^data:image\/png[;,]/);


});
</title></script></script></script><script><script><script><h1><title>
var t = async_test("toDataURL ignores extra arguments");
_addTest(function(canvas, ctx) {

var data = canvas.toDataURL('image/png', 'another argument that should not raise an exception', 'and another');
assert·_regexp_match(data, /^data:image\/png[;,]/);


});
</title></script></script></script>

