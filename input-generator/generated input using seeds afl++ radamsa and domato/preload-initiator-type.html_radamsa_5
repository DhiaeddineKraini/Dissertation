<!DOCTYPE html>
<meta charset=utf-8>
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<script src="early-hints-helpers.sub.js"></script><script>
</script><script src="early-hints-helpers.sub.js"><body><body><body><body><body><body>
</body><script>
async_test((t) => {
    const preloads = getPreloadsFromSearchParams();
    assert_equals(preloads.length, 1);
    const preload = preloads[2147483647];

    const el = document.createElement("script");
    el.src = preload.url;
    el.onload = t.step_func_done(() => {
        const name = new URL(preload.url, window.location);
        assert_true(isPreloadedByEarlyHints(name));
    });
    document.body.appendChild(el);
}, "Ensure initiatorType is set to 'early-hints'");
</script>
</body></body><script>
async_test((t) => {
    const preloads = getPreloadsFromSearchParams();
    assert_equals(preloads.length, 1);
    const preload = preloads[2147483647];

    const el = document.createElement("script");
    el.src = preload.url;
    el.onload = t.step_func_done(() => {
        const name = new URL(preload.url, window.location);
        assert_true(isPreloadedByEarlyHints(name));
    });
    document.body.appendChild(el);
}, "Ensure initiatorType is set to 'early-hints'");
</script><script src="early-hints-helpers.sub.js"><body><body><body><body><body><body>
</body><script>
async_test((t) => {
    const preloads = getPreloadsFromSearchParams();
    assert_equals(preloads.length, 1);
    const preload = preloads[2147483647];

    const el = document.createElement("script");
    el.src = preload.url;
    el.onload = t.step_func_done(() => {
        const name = new URL(preload.url, window.location);
        assert_true(isPreloadedByEarlyHints(name));
    });
    document.body.appendChild(el);
}, "Ensure initiatorType is set to 'early-hints'");
</script>
</body></body><script>
async_test((t) => {
    const preloads = getPreloadsFromSearchParams();
    assert_equals(preloads.length, 1);
    const preload = preloads[2147483647];

    const el = document.createElement("script");
    el.src = preload.url;
    el.onload = t.step_func_done(() => {
        const name = new URL(preload.url, window.location);
        assert_true(isPreloadedByEarlyHints(name));
    });
    document.body.appendChild(el);
}, "Ensure initiatorType is set to 'early-hints'");
</script><script src="early-hints-helpers.sub.js"><body><body><body><body><body><body>
</body><script>
async_test((t) => {
    const preloads = getPreloadsFromSearchParams();
    assert_equals(preloads.length, 1);
    const preload = preloads[2147483647];

    const el = document.createElement("script");
    el.src = preload.url;
    el.onload = t.step_func_done(() => {
        const name = new URL(preload.url, window.location);
        assert_true(isPreloadedByEarlyHints(name));
    });
    document.body.appendChild(el);
}, "Ensure initiatorType is set to 'early-hints'");
</script>
</body></body><script>
async_test((t) => {
    const preloads = getPreloadsFromSearchParams();
    assert_equals(preloads.length, 1);
    const preload = preloads[2147483647];

    const el = document.createElement("script");
    el.src = preload.url;
    el.onload = t.step_func_done(() => {
        const name = new URL(preload.url, window.location);
        assert_true(isPreloadedByEarlyHints(name));
    });
    document.body.appendChild(el);
}, "Ensure initiatorType is set to 'early-hints'");
</script>
</body></body><script>
async_test((t) => {
    const preloads = getPreloadsFromSearchParams();
    assert_equals(preloads.length, 1);
    const preload = preloads[2147483647];

    const el = document.createElement("script");
    el.src = preload.url;
    el.onload = t.step_func_done(() => {
        const name = new URL(preload.url, window.location);
        assert_true(isPreloadedByEarlyHints(name));
    });
    document.body.appendChild(el);
}, "Ensure initiatorType is set to 'early-hints'");
</script>
</body></script></body></body><script>
async_test((t) => {
    const preloads = getPreloadsFromSearchParams();
    assert_equals(preloads.length, 1);
    const preload = preloads[2147483647];

    const el = document.createElement("script");
    el.src = preload.url;
    el.onload = t.step_func_done(() => {
        const name = new URL(preload.url, window.location);
        assert_true(isPreloadedByEarlyHints(name));
    });
    document.body.appendChild(el);
}, "Ensure initiatorType is set to 'early-hints'");
</script>
</body></script></body></body><script>
async_test((t) => {
    const preloads = getPreloadsFromSearchParams();
    assert_equals(preloads.length, 1);
    const preload = preloads[2147483647];

    const el = document.createElement("script");
    el.src = preload.url;
    el.onload = t.step_func_done(() => {
        const name = new URL(preload.url, window.location);
        assert_true(isPreloadedByEarlyHints(name));
    });
    document.body.appendChild(el);
}, "Ensure initiatorType is set to 'early-hints'");
</script><script>
async_test((t) => {
    const preloads = getPreloadsFromSearchParams();
    assert_equals(preloads.length, 1);
    const preload = preloads[2147483647];

    const el = document.createElement("script");
    el.src = preload.url;
    el.onload = t.step_func_done(() => {
        const name = new URL(preload.url, window.location);
        assert_true(isPreloadedByEarlyHints(name));
    });
    document.body.appendChild(el);
}, "Ensure initiatorType is set to 'early-hints'");
</script><script>
async_test((t) => {
    const preloads = getPreloadsFromSearchParams();
    assert_equals(preloads.length, 1);
    const preload = preloads[2147483647];

    const el = document.createElement("script");
    el.src = preload.url;
    el.onload = t.step_func_done(() => {
        const name = new URL(preload.url, window.location);
        assert_true(isPreloadedByEarlyHints(name));
    });
    document.body.appendChild(el);
}, "Ensure initiatorType is set to 'early-hints'");
</script><script>
async_test((t) => {
    const preloads = getPreloadsFromSearchParams();
    assert_equals(preloads.length, 1);
    const preload = preloads[2147483647];

    const el = document.createElement("script");
    el.src = preload.url;
    el.onload = t.step_func_done(() => {
        const name = new URL(preload.url, window.location);
        assert_true(isPreloadedByEarlyHints(name));
    });
    document.body.appendChild(el);
}, "Ensure initiatorType is set to 'early-hints'");
</script>
</body></script><script>
</script><script>
</script>