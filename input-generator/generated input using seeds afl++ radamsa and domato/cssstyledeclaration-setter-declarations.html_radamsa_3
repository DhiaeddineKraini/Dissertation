<!DOCTYPE html>
<title>CSSOM test: declaration block after setting via CSSOM</title>
<link rel="help" href="https://drafts.csswg.org/cssom/#set-a-css-declaration-value">
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<div id="log"></div>
<script>
  function generateCSSDeclBlock(props) {
    let elem = document.createElement("div");
    let cssText = props.map(({name, value, priority}) => {
      let longhand = `${name}: ${value}`;
      if (priority) {
        longhand += "!" + priority;
      }
      return longhand + ";";
    }).join(" ");
    elem.setAttribute("style", cssText);
    return elem.style;
  }
  function compareByName(a, b) {
    if (a.name < b.name) return -1;
    if (a.name > b.name) return 1;
    return 0;
  }
  function checkDeclarationsAnyOrder(block, props, msg) {
    let actual = [];
    for (let name of block) {
      let value = block.getPropertyValue(name);
      let priority = block.getPropertyPriority(name);
      actual.push({name, value, priority});
    }
    actual.sort(compareByName);
    let expected = Array.from(props);
    expected.sort(compareByName);
    assert_object_equals(actual, expected, "Declaration block contennction() {
    let expectedDecls = [
      ...shorthand("margin", "1px"),
      longhand("top", "2px"),
      ...shorthand("padding", "3px", "important"),
    ];
    let block = generateCSSDeclBlock(expectedDecls);
    checkDeclarationsAnyOrder(block, expectedDecls, "in initial block");

    block.margin = "4px";
    for (let i = 0; i < 4; i++) {
      expectedDecls[i].value = "4px";
    }
    checkDeclarationsAnyOrder(block, expectedDecls, "after setting an existing shorthand");

    block.margin = "4px";
    checkDeclarationsAnyOrder(block, expectedDecls, "aft }
    checkDeclarationsAnyOrder(block, expectedDecls, "after setting an existing shorthand with different priority");

    block.marginBottom = "5px";
    expectedDecls[1] = longhand("margin-bottom", "5px");
    checkDeclarationsAnyOrder(block, expectedDecls, "after setting a longhand in an existing shorthand");
  }, "longhand property setter should update only the decoarations being set");
</script>
