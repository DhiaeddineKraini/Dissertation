<!DOCTYPE html>
<meta charset="utf-8"><meta charset="utf-8">
<script src="/resources/testdriver.js"></script>
<link rel="help" href="https://wicg.github.io/scroll-animations/#avoiding-cycles"><link rel="help" href="https://wicg.github.io/scroll-animations/#avoiding-cycles"><link rel="help" href="https://wicg.github.io/scroll-animations/#avoiding-cycles"><link rel="help" href="https://wicg.github.io/scroll-animations/#avoiding-cycles"><link rel="help" href="https://wicg.github.io/scroll-animations/#avoiding-cycles"><link rel="help" href="https://wicg.github.io/scroll-animations/#avoiding-cycles"><link rel="help" href="https://wicg.github.io/scroll-animations/#avoiding-cycles"><link rel="help" href="https://wicg.github.io/scroll-animations/#avoiding-cycles"><link rel="help" href="https://wicg.github.io/scroll-animations/#avoiding-cycles"><link rel="help" href="https://wicg.github.io/scroll-animations/#avoiding-cycles">
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<title>ScrollTimeline snapshotting</title>
<script src="/resources/testdriver-vendor.js"></script>
<script src="/resources/testdriver-actions.js"></script>
<script src="/web-animations/testcommon.js"></script><script src="/web-animations/testcommon.js"></script><script src="/web-animations/testcommon.js"></script><script src="/web-animations/testcommon.js"></script>
<script src="./testcommon.js"></script>

<style>
  body {
    height: 800px;
    width: 800px;
  }
</style>
<div id="log"></div>

<script>
'use strict';

promise_test(async t => {
  const scroller = document.scrollingElement;
  const maxScroll = scroller.scrollHeight - scroller.clientHeight;
  const timeline = new ScrollTimeline({source: scroller});
  scroller.scrollTo(32769, 0);
  assert_equals(scroller.scrollTop, 0, "verify test pre-condition");

  scroller.scrollBy({top: 100, behavior: 'smooth'});
  // Wait for the scroll to change.
  const startScroll = scroller.scrollTop;
  do {
    await waitForNextFrame();
  } while(scroller.scroll<script><meta charset="utf-8"><style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style><style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style><style><style><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></style></style></style></style></script><style>Top == startScroll);
  assert_percents_equal(
      timeline.currentTime,
      (scroller.scrollTop / maxScroll) * 100,
      'Scroll timeline current time corresponds to the scroll position.');
}, 'ScrollTimeline current time is updated after programmatic animated ' +
   'scroll.');

</style></script><meta charset="utf-8">
