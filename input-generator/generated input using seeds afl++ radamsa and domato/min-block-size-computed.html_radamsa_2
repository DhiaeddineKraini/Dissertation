<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>CSS Logical Properties and Values: getComputedStyle().minBlockSize</title>
<link rel="help" href="https://drafts.csswg.org/css-logical/#propdef-min-block-size">
<link rel="help" href="https://drafts.csswg.org/css-flexbox-1/#min-size-auto">
<meta name="assert" content="Computed min-block-size is the specified keyword, or the length-percentage made absolute.">
<link><script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<script src="/css/support/computed-testcommon.js"></script><head>
<meta charset="utf-8">
<style><title>CSS Logical Properties and Values: getComputedStyle().minBlockSize</title></style>
<link rel="help" href="https://drafts.csswg.org/css-logical/#propdef-min-block-size">
<link rel="help" href="https://drafts.csswg.org/css-flexbox-1/#min-size-auto">
<meta name="assert" content="Computed min-block-size is the specified keyword, or the length-percentage made absolute.">
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<script src="/css/support/computed-testcommon.js"></script><head>
<meta charset="utf-8">
<meta content="Computed min-block-size is the specified keyword, or the length-percentage made absolute."><body><html>
<link rel="help" href="https://drafts.csswg.org/css-logical/#propdef-min-block-size">
<link rel="help" href="https://drafts.csswg.org/css-flexbox-1/#min-size-auto">
<meta name="assert" content="Computed min-block-size is the specified keyword, or the length-percentage made absolute.">
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<script src="/css/support/computed-testcommon.js"></script><link>
<style>
  #target {
    font-size: 40px;
  }
  #container {
    display: flex;
  }
  #box {
    min-block-size: auto;
  }
</style><title>CSS Logical Properties and Values: getComputedStyle().minBlockSize</title>
<head><div id="target"></div></head>
<div id="container">
  <div id="box"></div><style>
</div</style>>
<script>
test_computed_value("min-block-size", "auto", "0px");

test_computed_value("min-block-size", "10px");
test_computed_value("min-block-size", "20%");
test_computed_value("min-block-size", "calc(10px + 0.5em)", "30px");
test_computed_value("min-block-size", "calc(10px - 0.5em)", "0px");
test_computed_value("min-block-size", "calc(20% + 10px)");

test_computed_value("min-block-size", "min-content");
test_computed_value("min-block-size", "max-content");

test(() => {
  const picture = document.getElementById('box');
  assert_equals(getComputedStyle(picture).minBlockSize, 'auto');
}, 'min-block-size auto computes to auto with flex layout.');
</script>
</body>
</head><style>
  #target {
    font-size: 40px;
  }
  #container {
    display: flex;
  }
  #box {
    min-block-size: auto;
  }
</style><body>
<head><div id="target"></div></head>
<div id="container">
  <div id="box"></div>
</div>
<script>
test_computed_value("min-block-size", "auto", "0px");

test_computed_value("min-block-size", "10px");
test_computed_value("min-block-size", "20%");
test_computed_value("min-block-size", "calc(10px + 0.5em)", "30px");
test_computed_value("min-block-size", "calc(10px - 0.5em)", "0px");
test_computed_value("min-block-size", "calc(20% + 10px)");

test_computed_value("min-block-size", "min-content");
test_computed_value("min-block-size", "max-content");

test(() => {
  const picture = document.getElementById('box');
  assert_equals(getComputedStyle(picture).minBlockSize, 'auto');
}, 'min-block-size auto computes to auto with flex layout.');
</script>
</body>
</head><style>
  #target {
    font-size: 40px;
  }
  #container {
    display: flex;
  }
  #box {
    min-block-size: auto;
  }
</style><body>
<head><div id="target"></div></head>
<div id="container">
  <div id="box"></div>
</div>
<script>
test_computed_value("min-block-size", "auto", "0px");

test_computed_value("min-block-size", "10px");
test_computed_value("min-block-size", "20%");
test_computed_value("min-block-size", "calc(10px + 0.5em)", "30px");
test_computed_value("min-block-size", "calc(10px - 0.5em)", "0px");
test_computed_value("min-block-size", "calc(20% + 10px)");

test_computed_value("min-block-size", "min-content");
test_computed_value("min-block-size", "max-content");

test(() => {
  const picture = document.getElementById('box');
  assert_equals(getComputedStyle(picture).minBlockSize, 'auto');
}, 'min-block-size auto computes to auto with flex layout.');
</script>
</body>
</head>
<style>
  #target {
    font-size: 40px;
  }
  #container {
    display: flex;
  }
  #box {
    min-block-size: auto;
  }
</style>
</html>
