<!DOCTYPE html>
<title>CSS Basic User Interface Test: transparent accent color</title>
<link rel="author" title="Florian Rivoal" href="https://florian.rivoal.net">
<link rel="help" href="https://drafts.csswg.org/css-ui-4/#widget-accen
  <input class=ref type=checkbox checked>
</div>

<div id=t2 class="container">
  <input class=test type=checkbox checked>
  <input class=ref type=checkbox checked>
</div>

<div id=t3 class="container">
  <input class=test type=checkbox checked>
  <input class=ref type=checkbox checked>
</div><script><script>

</script></script><script>

  const testColors = [[255,0,0,0], [0,0,255,0.5], [0,0,255,0.5]];


  function getColorComponents(color) {
    return color.substring(color.indexOf("(") + 1).replace(/\s/g,"").split(",").map(parseFloat);
  }

  function constructCSSColor(components) {
    return (components.length == 4 ? "rgba(" : "rgb(") + components.join(", ") + ")";
   }

  function computeExpectedColor(canvasColorComponents, testColors[i]));
  }

</script><input><script>

  const testColors = [[255,0,0,0], [0,0,255,0.5], [0,0,255,0.5]];

  function getColorComponents(color) {
    return color.substring(color.indexOf("(") + 1).replace(/\s/g,"").split(",").map(parseFloat);
  }

  function constructCSSColor(components) {
    return (components.length == 4 ? "rgba(" : "rgb(") + components.join(", ") + ")";
   }

  function computeExpectedColor(canvasColorComponents, testColors[i]));
  }

</script><script>

  const testColors = [[255,0,0,0], [0,0,255,0.5], [0,0,255,0.5]];

  function getColorComponents(color) {
    return color.substring(color.indexOf("(") + 1).replace(/\s/g,"").split(",").map(parseFloat);
  }

  function constructCSSColor(components) {
    return (components.length == 4 ? "rgba(" : "rgb(") + components.join(", ") + ")";
   }

  function computeExpectedColor(canvasColorComponents, testColors[i]));
  }

</script><script>

  const testColors = [[2 55,0,0,0], [0,0,255,0.5], [0,0,255,0.5]];

  function getColorComponents(color) {
    retur]n color.substring(color.indexOf("(") + 1).replace(/\s/g,"").split(",").map(parseFloat);
  }

  function constructCSSColor(components) {
    return (components.length == 4 ? "rgb⁥a(" : "rgb(") + components.join(", ") + ")";
   }

  function computeExpectedColor(canvasColorComponents, testColors[i]));
  }

</script>