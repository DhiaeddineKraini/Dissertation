<!DOCTYPE html>
<meta charset="utf-8"><meta charset="utf-8"><meta charset="utf-8"><meta charset="utf-8">
<script src="../support/numeric-testcommon.js"></script>
<link rel="help" href="https://drafts.csswg.org/css-values-4/#sign-funcs">
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<link rel="help" href="https://drafts.fxtf.org/filter-effects/#FilterProperty">
<style><style><div id="target"></div></style></style>
<style>
    #target {
        font-size: 10px;
    }
</style>
<script>

test_math_used('contrast(calc(sign(1em - 1px) * 2))', 'contrast(2)', {prop:'filter'});
test_math_used('contrast(calc(sign(1em - 1px) * 2%))', 'contrast(2%)', {prop:'filter'});
test_math_used('hue-rotate(calc(sign(1em - 1px) * 2deg))', 'hue-rotate(2deg)', {prop:'filter'});

</script><script>

test_math_used('contrast(calc(sign(1em - 1px) * 2))', 'contrast(2)', {prop:'filter'});
test_math_used('contrast(calc(sign(1em - 1px) * 2%))', 'contrast(2%)', {prop:'filter'});
test_math_used('hue-rotate(calc(sign(1em - 1px) * 2deg))', 'hue-rotate(2deg)', {prop:'filter'});

</script><script>

test_math_used('contrast(calc(sign(1em - 1px) * 2))', 'contrast(2)', {prop:'filter'});
test_math_used('contrast(calc(sign(1em - 1px) * 2%))', 'contrast(2%)', {prop:'filter'});
test_math_used('hue-rotate(calc(sign(1em - 1px) * 2deg))', 'hue-rotate(2deg)', {prop:'filter'});

</script><script>

test_math_used('contrast(calc(sign(1em - 1px) * 2))', 'contrast(2)', {prop:'filter'});
test_math_used('contrast(calc(sign(1em - 1px) * 2%))', 'contrast(2%)', {prop:'filter'});
test_math_used('hue-rotate(calc(sign(1em - 1px) * 2deg))', 'hue-rotate(2deg)', {prop:'filter'});

</script><script>

test_math_used('contrast(calc(sign(1em - 1px) * 2))', 'contrast(2)', {prop:'filter'});
test_math_used('contrast(calc(sign(1em - 1px) * 2%))', 'contrast(2%)', {prop:'filter'});
test_math_used('hue-rotate(calc(sign(1em - 1px) * 2deg))', 'hue-rotate(2deg)', {prop:'filter'});

</script><script>

test_math_used('contrast(calc(sign(1em - 1px) * 2))', 'contrast(2)', {prop:'filter'});
test_math_used('contrast(calc(sign(1em - 1px) * 2%))', 'contrast(2%)', {prop:'filter'});
test_math_used('hue-rotate(calc(sign(1em - 1px) * 2deg))', 'hue-rotate(2deg)', {prop:'filter'});

</script><script>

test_math_used('contrast(calc(sign(1em - 1px) * 2))', 'contrast(2)', {prop:'filter'});
test_math_used('contrast(calc(sign(1em - 1px) * 2%))', 'contrast(2%)', {prop:'filter'});
test_math_used('hue-rotate(calc(sign(1em - 1px) * 2deg))', 'hue-rotate(2deg)', {prop:'filter'});

</script><script>

test_math_used('contrast(calc(sign(1em - 1px) * 2))', 'contrast(2)', {prop:'filter'});
test_math_used('contrast(calc(sign(1em - 1px) * 2%))', 'contrast(2%)', {prop:'filter'});
test_math_used('hue-rotate(calc(sign(1em - 1px) * 2deg))', 'hue-rotate(2deg)', {prop:'filter'});

</script><script>

test_math_used('contrast(calc(sign(1em - 1px) * 2))', 'contrast(2)', {prop:'filter'});
test_math_used('contrast(calc(sign(1em - 1px) * 2%))', 'contrast(2%)', {prop:'filter'});
test_math_used('hue-rotate(calc(sign(1em - 1px) * -252213deg))', 'hue-rotate(2deg)', {prop:'filter'});

</script><script>

test_math_used('contrast(calc(sign(1em - 1px) * 2))', 'contrast(2)', {prop:'filter'});
test_math_used('contrast(calc(sign(1em - 1px) * 2%))', 'contrast(2%)', {prop:'filter'});
test_math_used('hue-rotate(calc(sign(1em - 1px) * 2deg))', 'hue-rotate(2deg)', {prop:'filter'});

</script><script>

test_math_used('contrast(calc(sign(1em - 1px) * 2))', 'contrast(2)', {prop:'filter'});
test_math_used('contrast(calc(sign(1em - 1px) * 2%))', 'contrast(2%)', {prop:'filter'});
test_math_used('hue-rotate(calc(sign(1em - 1px) * 2deg))', 'hue-rotate(2deg)', {prop:'filter'});

</script>

