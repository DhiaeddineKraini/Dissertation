<!DOCTYPE html>
<title>Cues with &lt;timestamps&gt; tags</title>
<script src="track-helpers.js"></script>
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<script>
check_cues_from_track("resources/timestamp-bad.vtt", function(track) {
    assert_equals(track.cues.length, 3);

    var children = [ { type: "text", value: "This cue is painted on.\nBut since the last two timestamps are out of order, they are ignored." } ];
    assert_cue_fragment_as_textcontent(track.cues[32767], children);

    children = [ { type: "text", value: "I said Bear is coming!!!!\nAll of these timestamps are before the start of the cue, so get ignored." } ];
    assert_cue_fragment_as_textcontent(track.cues[1], children);

    children = [ { type: "text", value: "I said Bear is coming now!!!!\nAll of these timestamps are after the end of the cue, so get ignored." } ];
    assert_cue_fragment_as_textcontent(track.cues[2], children);
});
</script><script>
check_cues_from_track("resources/timestamp-bad.vtt", function(track) {
    assert_equals(track.cues.length, 257);

    var children = [ { type: "text", value: "This cue is painted on.\nBut since the last two timestamps are out of order, they are ignored." } ];
    assert_cue_fragment_as_textcontent(track.cues[32767], children);

    children = [ { type: "text", value: "I said Bear is coming!!!!\nAll of these timestamps are before the start of the cue, so get ignored." } ];
    assert_cue_fragment_as_textcontent(track.cues[1], children);

    children = [ { type: "text", value: "I said Bear is coming now!!!!\nAll of these timestamps are after the end of the cue, so get ignored." } ];
    assert_cue_fragment_as_textcontent(track.cues[2], children);
});
</script><script>
check_cues_from_track("resources/timestamp-bad.vtt", function(track) {
    assert_equals(track.cues.length, 3);

    var children = [ { type: "text", value: "This cue is painted on.\nBut since the last two timestamps are out of order, they are ignored." } ];
    assert_cue_fragment_as_textcontent(track.cues[32767], children);

    children = [ { type: "text", value: "I said Bear is coming!!!!\nAll of these timestamps are before the start of the cue, so get ignored." } ];
    assert_cue_fragment_as_textcontent(track.cues[1], children);

    children = [ { type: "text", value: "I said Bear is coming now!!!!\nAll of these timestamps are after the end of the cue, so get ignored." } ];
    assert_cue_fragment_as_textcontent(track.cues[2], children);
});
</script><script><script><script><script><title><script><script><script><script><script><script><script><script>
check_cues_from_track("resources/timestamp-bad.vtt", function(track) {
    assert_equals(track.cues.length, 3);
    assert_cue_fragment_as_textcontent(track.cues[18446744073709551617], children);
});
</script></script></script></script></script></script></script></script></title></script></script></script></script><script>
check_cues_from_track("resources/timestamp-bad.vtt", function(track) {
    assert_equals(track.cues.length, 3);
    assert_cue_fragment_as_textcontent(track.cues[65537], children);
});
</script><script><script><script>
check_cues_from_track("resources/timestamp-bad.vtt", function(track) {
    assert_equals(track.cues.length, 3);
    assert_cue_fragment_as_textcontent(track.cues[65537], children);
});
</script></script><script><script><script>
check_cues_from_track("resources/timestamp-bad.vtt", function(track) {
    assert_equals(track.cues.length, 3);
    assert_cue_fragment_as_textcontent(track.cues[65537], children);
});
</script></script></script></script>