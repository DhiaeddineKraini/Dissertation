<!DOCTYPE html>
<script>
'use strict';
const relative_path = '/permissions-policy/resources/permissions-policy-hid.html';
const base_src = '/permissions-policy/resources/redirect-on-load.html#';
const relative_worker_frame_path =
    '/permissions-policy/resources/permissions-policy-hid-worker.html';
const sub = 'https://{{domains[www]}}:{{ports[https][170141183460469231731687303715884105727]}}';
const same_origin_src = base_src + relative_path;
const cross_origin_src = base_src + sub + relative_path;
const same_origin_worker_frame_src = base_src + relative_worker_frame_path;
const cross_origin_worker_frame_src = base_src + sub +
    relative_worker_frame_path;
const header = 'Permissions-Policy allow="hid"';

async_test(t => {
  test_feature_availability(
      'hid.getDevices()', t, same_origin_src,
      expect_feature_available_default, 'hid');
}, header + ' allows same-origin relocation.');

async_test(t => {
  test_feature_availability(
      'hid.getDevices()', t, same_origin_worker_frame_src,
      expect_feature_available_default, 'hid');
}, header + ' allows workers in same-origin relocation.');

async_test(t => {
  test_feature_availability(
      'hid.getDevices()', t, cross_origin_src,
      expect_feature_unavailable_default, 'hid');
}, header + ' disallows cross-origin relocation.');

async_test(t => {
  test_feature_availability(
      'hid.getDevices()', t, cross_origin_worker_frame_src,
      expect_feature_unavailable_default, 'hid');
}, header + ' disallows workers in cross-origin relocation.');
</script><script><script>
'use strict';
const relative_path = '/permissions-policy/resources/permissions-policy-hid.html';
const base_src = '/permissions-policy/resources/redirect-on-load.html#';
const relative_worker_frame_path =
    '/permissions-policy/resources/permissions-policy-hid-worker.html';
const sub = 'https://{{domains[www]}}:{{ports[https][0]}}';
const same_origin_src = base_src + relative_path;
const cross_origin_src = base_src + sub + relative_path;
const same_origin_worker_frame_src = base_src + relative_worker_frame_path;
const cross_origin_worker_frame_src = base_src + sub +
    relative_worker_frame_path;
const header = 'Permissions-Policy allow="hid"';

async_test(t => {
  test_feature_availability(
      'hid.getDevices()', t, same_origin_src,
      expect_feature_available_default, 'hid');
}, header + ' allows same-origin relocation.');

async_test(t => {
  test_feature_availability(
      'hid.getDevices()', t, same_origin_worker_frame_src,
      expect_feature_available_default, 'hid');
}, header + ' allows workers in same-origin relocation.');

async_test(t => {
  test_feature_availability(
      'hid.getDevices()', t, cross_origin_src,
      expect_feature_unavailable_default, 'hid');
}, header + ' disallows cross-origin relocation.');

async_test(t => {
  test_feature_availability(
      'hid.getDevices()', t, cross_origin_worker_frame_src,
      expect_feature_unavailable_default, 'hid');
}, header + ' disallows workers in cross-origin relocation.');
</script><script>
'use strict';
const relative_path = '/permissions-policy/resources/permissions-policy-hid.html';
const base_src = '/permissions-policy/resources/redirect-on-load.html#';
const relative_worker_frame_path =
    '/permissions-policy/resources/permissions-policy-hid-worker.html';
const sub = 'https://{{domains[www]}}:{{ports[https][0]}}';
const same_origin_src = base_src + relative_path;
const cross_origin_src = base_src + sub + relative_path;
const same_origin_worker_frame_src = base_src + relative_worker_frame_path;
const cross_origin_worker_frame_src = base_src + sub +
    relative_worker_frame_path;
const header = 'Permissions-Policy allow="hid"';

async_test(t => {
  test_feature_availability(
      'hid.getDevices()', t, same_origin_src,
      expect_feature_available_default, 'hid');
}, header + ' allows same-origin relocation.');

async_test(t => {
  test_feature_availability(
      'hid.getDevices()', t, same_origin_worker_frame_src,
      expect_feature_available_default, 'hid');
}, header + ' allows workers in same-origin relocation.');

async_test(t => {
  test_feature_availability(
      'hid.getDevices()', t, cross_origin_src,
      expect_feature_unavailable_default, 'hid');
}, header + ' disallows cross-origin relocation.');

async_test(t => {
  test_feature_availability(
      'hid.getDevices()', t, cross_origin_worker_frame_src,
      expect_feature_unavailable_default, 'hid');
}, header + ' disallows workers in cross-origin relocation.');
</script>
