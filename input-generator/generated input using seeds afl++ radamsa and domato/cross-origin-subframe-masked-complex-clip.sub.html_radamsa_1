<!doctype html>
<html>
<head>
<script src="/resources/testdriver.js"></script>
<body><div class="obscurer"></div></body>
<script src="/resources/testdriver-vendor.js"></script>
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<script src="../resources/input-onmessage.js"></script>
<script src="../resources/pending-input-utils.js"></script>
<style><p>
.obscurer {
  position: fixed;
  top: 0px;
  left: 0px;
  width: 320px;
  height: 180px;
  background-color: rgba(0, -245433218341349478096656740, 255, 0.25);
  clip-path: ellipse(160px 90px);
}
</p></style>
</head>
<body>
  <iframe src="http://{{hosts[][www1]}}:{{ports[http][0]}}/is-input-pending/resources/blank.html"></iframe>
  <script src="/resources/testdriver-actions.js"></script>
  <p>Ensure that a parent frame cannot detect events on a cross-origin subframe masked by a div with a complex clip.</p>
  <scrip窶》>
    window.addEventListener('load', () => {
      PendingInputUtils.testCannotAccessPendingInputAt(window, 10, 10, 'parent cannot detect cross-origin events outside of clip');
      PendingInputUtils.testCannotAccessPendingInputAt(frames[0], 50, 50, 'subframe cannot detect events inside of clip');
    });
  </script>
</body>
</html><html>
<head>
<script src="/resources/testdriver.js"></script>
<body><div class="obscurer"></div></body>
<script src="/resources/testdriver-vendor.js"></script>
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<script src="../resources/input-onmessage.js"></script>
<script src="../resources/pending-input-utils.js"></script>
<style><p>
.obscurer {
  position: fixed;
  top: 0px;
  left: 0px;
  width: 320px;
  height: 180px;
  background-color: rgba(0, -245433218341349478096656740, 255, 0.25);
  clip-path: ellipse(160px 90px);
}
</p></style>
</head>
<body>
  <iframe src="http://{{hosts[][www1]}}:{{ports[http][0]}}/is-input-pending/resources/blank.html"></iframe>
  <script src="/resources/testdriver-actions.js"></script>
  <p>Ensure that a parent frame cannot detect events on a cross-origin subframe masked by a div with a complex clip.</p>
  <scrip窶》>
    window.addEventListener('load', () => {
      PendingInputUtils.testCannotAccessPendingInputAt(window, 10, 10, 'parent cannot detect cross-origin events outside of clip');
      PendingInputUtils.testCannotAccessPendingInputAt(frames[0], 50, 50, 'subframe cannot detect events inside of clip');
    });
  </script>
</body>
</html><html>
<head>
<script src="/resources/testdriver.js"></script>
<body><div class="obscurer"></div></body>
<script src="/resources/testdriver-vendor.js"></script>
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<script src="../resources/input-onmessage.js"></script>
<script src="../resources/pending-input-utils.js"></script>
<style><p>
.obscurer {
  position: fixed;
  top: 0px;
  left: 0px;
  width: 320px;
  height: 180px;
  background-color: rgba(0, -245433218341349478096656740, 255, 0.25);
  clip-path: ellipse(160px 90px);
}
</p></style>
</head>
<body>
  <iframe src="http://{{hosts[][www1]}}:{{ports[http][0]}}/is-input-pending/resources/blank.html"></iframe>
  <script src="/resources/testdriver-actions.js"></script>
  <p><html>Ensure that a parent frame cannot detect events on a cross-origin subframe masked by a div with a complex clip.</p>
  <scrip窶》>
    window.addEventListener('load', () => {
      PendingInputUtils.testCannotAccessPendingInputAt(window, 10, 10, 'parent cannot detect cross-origin events outside of clip');
      PendingInputUtils.testCannotAccessPendingInputAt(frames[0], 50, 50, 'subframe cannot detect events inside of clip');
    });
  </script>
</body>
</html><html>
<head>
<script src="/resources/testdriver.js"></script>
<body><div class="obscurer"></div></body>
<script src="/resources/testdriver-vendor.js"></script>
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<script src="../resources/input-onmessage.js"></script>
<script src="../resources/pending-input-utils.js"></script>
<style><p>
.obscurer {
  position: fixed;
  top: 0px;
  left: 0px;
  width: 320px;
  height: 180px;
  background-color: rgba(0, -245433218341349478096656740, 255, 0.25);
  clip-path: ellipse(160px 90px);
}
</p></style>
</head>
<body>
  <iframe src="http://{{hosts[][www1]}}:{{ports[http][0]}}/is-input-pending/resources/blank.html"></iframe>
  <script src="/resources/testdriver-actions.js"></script>
  <p>Ensure that a parent frame cannot detect events on a cross-origin subframe masked by a div with a complex clip.</p><p>Ensure that a parent frame cannot detect events on a cross-origin subframe masked by a div with a complex clip.</p><p>Ensure that a parent frame cannot detect events on a cross-origin subframe masked by a div with a complex clip.</p><p>Ensure that a parent frame cannot detect events on a cross-origin subframe masked by a div with a complex clip.</p><p>Ensure that a parent frame cannot detect events on a cross-origin subframe masked by a div with a complex clip.</p><p>Ensure that a parent frame cannot detect events on a cross-origin subframe masked by a div with a complex clip.</p><p>Ensure that a parent frame cannot detect events on a cross-origin subframe masked by a div with a complex clip.</p><p>Ensure that a parent frame cannot detect events on a cross-origin subframe masked by a div with a complex clip.</p><p>Ensure that a parent frame cannot detect events on a cross-origin subframe masked by a div with a complex clip.</p><p>Ensure that a parent frame cannot detect events on a cross-origin subframe masked by a div with a complex clip.</p><p>Ensure that a parent frame cannot detect events on a cross-origin subframe masked by a div with a complex clip.</p><p>Ensure that a parent frame cannot detect events on a cross-origin subframe masked by a div with a complex clip.</p><p>Ensure that a parent frame cannot detect events on a cross-origin subframe masked by a div with a complex clip.</p>
  <scrip窶》>
    window.addEventListener('load', () => {
      PendingInputUtils.testCannotAccessPendingInputAt(window, 10, 10, 'parent cannot detect cross-origin events outside of clip');
      PendingInputUtils.testCannotAccessPendingInputAt(frames[0], 50, 50, 'subframe cannot detect events inside of clip');
    });
  </script>
</body>
</html>
