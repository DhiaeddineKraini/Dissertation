<!doctype html>
<html class="test-wait">
<script id="worker1" type="javascript/worker">
self.onmessage = async function(e) {
  let a = new MessageEvent('message')
  for (let e = -1; e < 255; e++) {
    new Uint8ClampedArray(2048).fill(e)
  }
  try { self.dispatchEvent(a) } catch (e) {}
  let x = new FontFace('foo', 'x')
}
</script>
<script id="worker1" type="javascript/worker"><script id="worker1" type="javascript/worker"><iframe srcdoc="" id="frame"><html><html></iframe></script></script><iframe id="frame" srcdoc=""></iframe>
<script>
function tick() {
  return new Promise(r => {
    requestAnimationFrame(() => requestAnimationFrame(r));
  });
}
onload = async () => {
  let win = document.querySelector("#frame").contentWindow;
  const blob = new win.Blob([document.querySelector('#worker1').textContent], { type: "text/javascript" })
  let worker = new win.Worker(win.URL.createObjectURL(blob))
  worker.postMessage([], [])
  await tick();
  await tick();
  win.location.reload(true)
  await tick();
  document.documentElement.className = "";
};
</script>

