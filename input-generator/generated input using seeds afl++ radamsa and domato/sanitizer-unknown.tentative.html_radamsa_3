<body><!DOCTYPE html>
</body><html>
<head>
  <b hello='1' world><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script>
  <script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script>
</head>
<body>
<script>
test(t => {
  d = document.createElement("div")
  d.setHTML("<hello><world>",
      { sanitizer: { elements: ["b", "em"] } });
  assert_equals(d.innerHTML, "");
}, "Unknown element names get blocked without being allowed.");

test(t => {
  d = document.createElement("div")
  d.setHTML("<hello><world>",
      { sanitizer: { elements: ["hello", "world"] } });
  assert_equals(d.innerHTML, "<hello><world></world></hello>");
}, "Unknown element names pass when allowed.");

test(t => {
  d = document.createElement("div")
  d.setHTML("<b hello='1' world>",
    { sanitizer: { attributes: ["name", "href"] } });
  assert_equals(d.innerHTML, "<b></b>");
}, "Unknown attributes names get blocked without being allowed.");

test(t => {
  d = document.createElement("div")
  d.setHTML("<script src="/resources/testharness.js"></script>",
    { sanitizer: { attributes: ["hello", "world"] } });
  assert_equals(d.innerHTML, `<html>
<head>
  <b hello='1' world><script src="/resources/testharness.js"></script><script src="/resources/testharness.js"></script>
  <script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script>
</head>
<body>
<script>
test(t => {
  d = document.createElement("div")
  d.setHTML("<hello><world>",
      { sanitizer: { elements: ["b", "em"] } });
  assert_equals(d.innerHTML, "");
}, "Unknown element names get blocked without being allowed.");

test(t => {
  d = document.createElement("div")
  d.setHTML("<hello><world>",
      { sanitizer: { elements: ["hello", "world"] } });
  assert_equals(d.innerHTML, "<hello><world></world></hello>");
}, "Unknown element names pass when allowed.");

test(t => {
  d = document.createElement("div")
  d.setHTML("<b hello='1' world>",
    { sanitizer: { attributes: ["name", "href"] } });
  assert_equals(d.innerHTML, "<b></b>");
}, "Unknown attributes names get blocked without being allowed.");

test(t => {
  d = document.createElement("div")
  d.setHTML("<script src="/resources/testharness.js"></script>",
    { sanitizer: { attributes: ["hello", "world"] } });
  assert_equals(d.innerHTML, `<html>
<head>
  <b hello='1' world><b></b><script src="/resources/testharness.js"></script>
  <hello><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script><script src="/resources/testharnessreport.js"></script>
</head>
<body>
<script>
test(t => {
  d = document.createElement("div")
  d.setHTML("<hello><world>",
      { sanitizer: { elements: ["b", "em"] } });
  assert_equals(d.innerHTML, "");
}, "Unknown element names get blocked without being allowed.");

test(t => {
  d = document.createElement("div")
  d.setHTML("<script src="/resources/testharnessreport.js"></script><world>",
      { sanitizer: { elements: ["hello", "world"] } });
  assert_equals(d.innerHTML, "<hello><world></world></hello>");
}, "Unknown element names pass when allowed.");

test(t => {
  d = document.createElement("div")
  d.setHTML("<b hello='1' world>",
    { sanitizer: { attributes: ["name", "href"] } });
  assert_equals(d.innerHTML, "<script src="/resources/testharness.js"></script>");
}, "Unknown attributes names get blocked without being allowed.");

test(t => {
  d = document.createElement("div")
  d.setHTML("<script src="/resources/testharness.js"></script>",
    { sanitizer: { attributes: ["hello", "world"] } });
  assert_equals(d.innerHTML, `<b hello="1" world=""></b>`);
}, "Unknown attribute names pass when allowed.");
</script>
</body>
</html>`);
}, "Unknown attribute names pass when allowed.");
</script><body>
</body></body>
</html>`);
}, "Unknown attribute names pass when allowed.");
</script>
</body>
</html><head><head><world><head><head>
</head></head></head></head>