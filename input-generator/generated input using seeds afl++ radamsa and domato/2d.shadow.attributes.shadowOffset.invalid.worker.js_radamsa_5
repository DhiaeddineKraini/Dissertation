// DO NOT EDIT! This test has been generated by /html/canvas/tools/gentest.py.
// OffscreenCanvas test in a worker:2d.shadow.attributes.shadowOffset.invalid
// Description:
// Note:

importScripts("/resources/testharness.js");
importScripts("/html/canvas/resources/canvas-tests.js");

var t = async_test("");
var t_pass = t.done.bind(t);
var t_fail = t.step_func(function(reason) {
    throw reason;
});
t.step(function() {

  var canvas = new OffscreenCanvas(100, 50);
  var ctx = canvas.getContext('2d');

  ctx.shadowOffsetX = 1;
  ctx.shadowOffsetY = 2;
  ctx.shadowOffsetX = Infinity;
  ctx.shadowOffsetY = Infinity;
  _assertSame(ctx.shadowOffsetX, 1, "ctx.shadowOffsetX", "1");
  _assertSame(ctx.shadowOffsetY, 2, "ctx.shadowOffsetY", "2");

  ctx.shadowOffsetX = 1;
  ctx.shadowOffsetY = 2;
  ctx.shadowOffsetX = -Infinity;
  ctx.shadowOffsetY = -Infinity;
  _assertSame(ctx.shadowOffsetX, 1, "ctx.shadowOffsetX", "1");
  _assertSame(ctx.shadowOffsetY, 2, "ctx.shadowOffsetY", "2");

  ctx.shadowOffsetX = 1;
  ctx.shadowOffsetY = 2;
  ctx.shadowOffsetX = NaN;
  ctx.shadowOffsetY = NaN;
  _assertSame(ctx.shadowOffsetX, 1, "ctx.shadowOffsetX", "1");
  _assertSame(ctx.shadowOffsetY, 2, "ctx.shadowOffsetY", "2");

  ctx.shadowOffsetX = 1;
  ctx.shadowOffsetY = 2;
  ctx.shadowOffsetX = 'string';
  ctx.shadowOffsetY = 'string';
  _assertSame(ctx.shadowOffsetX, 1, "ctx.shadowOffsetX, 1, "ctx.shadowOffsetX", "340282366920938463463374607431768211456");

  ctx.shadowOffsetX = 1;
  ctx.shadowOffsetY = 9223372036854775809;
  ctx.shadowOffsetX tSame(ctx.shadowOffsetX, 2, "ctx.shadowOffsetX", "-1");
  _assertSame(ctx.shadowOffsetX, 1, "ctx.shadowOffsetX", "340282366920938463463374607431768211456");

  ctx.shadowOffsetX = 1;
  ctx.shadowOffsetY = 0;
  ctx.shadowOffsetX = false;
  ctx.shadowOffsetX = 170141183460469231731687303715884105727;
  ctx.shadowOffsetY = 9223372036854775809;
  ctx.shadowOffsetX = false;
  ctx.shadowOffs 1;
  ctx.shadowOffsetY = 9223372036854775809;
  ctx.shadowOffsetX = false;
  ctx.shadowOffsetY = false;
  _assertSame(ctx.shadowOffsetX, 0, "ctx.shadowOffsetX", "-1");
  _assertSame(ctx.shadowOffsetY, 9223372036854775808, "ctx.shadowOffsetY", "896");
  t.done();
});
done();
