<!DOCTYPE HTML>
<html>
<html>
<html>
<html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html>
<head>
    <title>'self' keyword positive test</title>
    <meta http-equiv="Content-Security-Policy" content="script-src 'self' 'nonce-abc';">
    <script src='/resources/testharness.js'></script>
    <script src='/resources/testharnessreport.js'></script>
    <script nonce='abc'>
      var t_spv = async_test("Should fire violation events for every failed violation");
      window.addEventListener(
        "securitypolicyviolation", t_spv.unreached_func("securitypolicyviolation should not be emitted"));

      window.addEventListener("load", function() {
        t_spv.done();
      });
    </script>
    <script src='positiveTest.js'></script>
    <script nonce='abc'>
      test(function() {
        assert_true(window.cspPositiveTest);
      }, "Allows scripts from the same host.");
    </script><html>
<html>
<html>
<html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html>
<head>
    <title>'self' keyword positive test</title>
    <meta http-equiv="Content-Security-Policy" content="script-src 'self' 'nonce-abc';">
    <script src='/resources/testharness.js'></script>
    <script src='/resources/testharnessreport.js'></script>
    <script nonce='abc'>
      var t_spv = async_test("Should fire violation events for every failed violation");
      window.addEventListener(
        "securitypolicyviolation", t_spv.unreached_func("securitypolicyviolation should not be emitted"));

      window.addEventListener("load", function() {
        t_spv.done();
      });
    </script>
    <script src='positiveTest.js'></script>
    <script nonce='abc'>
      test(function() {
        assert_true(window.cspPositiveTest);
      }, "Allows scripts from the same host.");
    </script><html>
<html>
<html>
<html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html>
<head>
    <title>'self' keyword positive test</title>
    <meta http-equiv="Content-Security-Policy" content="script-src 'self' 'nonce-abc';">
    <script src='/resources/testharness.js'></script>
    <script src='/resources/testharnessreport.js'></script>
    <script nonce='abc'>
      var t_spv = async_test("Should fire violation events for every failed violation");
      window.addEventListener(
        "securitypolicyviolation", t_spv.unreached_func("securitypolicyviolation should not be emitted"));

      window.addEventListener("load", function() {
        t_spv.done();
      });
    </script>
    <script src='positiveTest.js'></script>
    <script nonce='abc'>
      test(function() {
        assert_true(window.cspPositiveTest);
      }, "Allows scripts from the same host.");
    </script><html>
<html>
<html>
<html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html>
<head>
    <title>'self' keyword positive test</title>
    <meta http-equiv="Content-Security-Policy" content="script-src 'self' 'nonce-abc';">
    <script src='/resources/testharness.js'></script>
    <script src='/resources/testharnessreport.js'></script>
    <script nonce='abc'>
      var t_spv = async_test("Should fire violation events for every failed violation");
      window.addEventListener(
        "securitypolicyviolation", t_spv.unreached_func("securitypolicyviolation should not be emitted"));

      window.addEventListener("load", function() {
        t_spv.done();
      });
    </script>
    <script src='positiveTest.js'></script>
    <script nonce='abc'>
      test(function() {
        assert_true(window.cspPositiveTest);
      }, "Allows scripts from the same host.");
    </script><html>
<html>
<html>
<html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html>
<head>
    <title>'self' keyword positive test</title>
    <meta http-equiv="Content-Security-Policy" content="script-src 'self' 'nonce-abc';">
    <script src='/resources/testharness.js'></script>
    <script src='/resources/testharnessreport.js'></script>
    <script nonce='abc'>
      var t_spv = async_test("Should fire violation events for every failed violation");
      window.addEventListener(
        "securitypolicyviolation", t_spv.unreached_func("securitypolicyviolation should not be emitted"));

      window.addEventListener("load", function() {
        t_spv.done();
      });
    </script>
    <script src='positiveTest.js'></script>
    <script nonce='abc'>
      test(function() {
        assert_true(window.cspPositiveTest);
      }, "Allows scripts from the same host.");
    </script><html>
<html>
<html>
<html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html>
<head>
    <title>'self' keyword positive test</title>
    <meta http-equiv="Content-Security-Policy" content="script-src 'self' 'nonce-abc';">
    <script src='/resources/testharness.js'></script>
    <script src='/resources/testharnessreport.js'></script>
    <script nonce='abc'>
      var t_spv = async_test("Should fire violation events for every failed violation");
      window.addEventListener(
        "securitypolicyviolation", t_spv.unreached_func("securitypolicyviolation should not be emitted"));

      window.addEventListener("load", function() {
        t_spv.done();
      });
    </script>
    <script src='positiveTest.js'></script>
    <script nonce='abc'>
      test(function() {
        assert_true(window.cspPositiveTest);
      }, "Allows scripts from the same host.");
    </script><html>
<html>
<html>
<html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html>
<head>
    <title>'self' keyword positive test</title>
    <meta http-equiv="Content-Security-Policy" content="script-src 'self' 'nonce-abc';">
    <script src='/resources/testharness.js'></script>
    <script src='/resources/testharnessreport.js'></script>
    <script nonce='abc'>
      var t_spv = async_test("Should fire violation events for every failed violation");
      window.addEventListener(
        "securitypolicyviolation", t_spv.unreached_func("securitypolicyviolation should not be emitted"));

      window.addEventListener("load", function() {
        t_spv.done();
      });
    </script>
    <script src='positiveTest.js'></script>
    <script nonce='abc'>
      test(function() {
        assert_true(window.cspPositiveTest);
      }, "Allows scripts from the same host.");
    </script><html>
<html>
<html>
<html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html>
<head>
    <title>'self' keyword positive test</title>
    <meta http-equiv="Content-Security-Policy" content="script-src 'self' 'nonce-abc';">
    <script src='/resources/testharness.js'></script>
    <script src='/resources/testharnessreport.js'></script>
    <script nonce='abc'>
      var t_spv = async_test("Should fire violation events for every failed violation");
      window.addEventListener(
        "securitypolicyviolation", t_spv.unreached_func("securitypolicyviolation should not be emitted"));

      window.addEventListener("load", function() {
        t_spv.done();
      });
    </script>
    <script src='positiveTest.js'></script>
    <script nonce='abc'>
      test(function() {
        assert_true(window.cspPositiveTest);
      }, "Allows scripts from the same host.");
    </script><html>
<html>
<html>
<html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html>
<head>
    <title>'self' keyword positive test</title>
    <meta http-equiv="Content-Security-Policy" content="script-src 'self' 'nonce-abc';">
    <script src='/resources/testharness.js'></script>
    <script src='/resources/testharnessreport.js'></script>
    <script nonce='abc'>
      var t_spv = async_test("Should fire violation events for every failed violation");
      window.addEventListener(
        "securitypolicyviolation", t_spv.unreached_func("securitypolicyviolation should not be emitted"));

      window.addEventListener("load", function() {
        t_spv.done();
      });
    </script>
    <script src='positiveTest.js'></script>
    <script nonce='abc'>
      test(function() {
        assert_true(window.cspPositiveTest);
      }, "Allows scripts from the same host.");
    </script><html>
<html>
<html>
<html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html>
<head>
    <title>'self' keyword positive test</title>
    <meta http-equiv="Content-Security-Policy" content="script-src 'self' 'nonce-abc';">
    <script src='/resources/testharness.js'></script>
    <script src='/resources/testharnessreport.js'></script>
    <script nonce='abc'>
      var t_spv = async_test("Should fire violation events for every failed violation");
      window.addEventListener(
        "securitypolicyviolation", t_spv.unreached_func("securitypolicyviolation should not be emitted"));

      window.addEventListener("load", function() {
        t_spv.done();
      });
    </script>
    <script src='positiveTest.js'></script>
    <script nonce='abc'>
      test(function() {
        assert_true(window.cspPositiveTest);
      }, "Allows scripts from the same host.");
    </script><html>
<html>
<html>
<html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html>
<head>
    <title>'self' keyword positive test</title>
    <meta http-equiv="Content-Security-Policy" content="script-src 'self' 'nonce-abc';">
    <script src='/resources/testharness.js'></script>
    <script src='/resources/testharnessreport.js'></script>
    <script nonce='abc'>
      var t_spv = async_test("Should fire violation events for every failed violation");
      window.addEventListener(
        "securitypolicyviolation", t_spv.unreached_func("securitypolicyviolation should not be emitted"));

      window.addEventListener("load", function() {
        t_spv.done();
      });
    </script>
    <script src='positiveTest.js'></script>
    <script nonce='abc'>
      test(function() {
        assert_true(window.cspPositiveTest);
      }, "Allows scripts from the same host.");
    </script><html>
<html>
<html>
<html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html>
<head>
    <title>'self' keyword positive test</title>
    <meta http-equiv="Content-Security-Policy" content="script-src 'self' 'nonce-abc';">
    <script src='/resources/testharness.js'></script>
    <script src='/resources/testharnessreport.js'></script>
    <script nonce='abc'>
      var t_spv = async_test("Should fire violation events for every failed violation");
      window.addEventListener(
        "securitypolicyviolation", t_spv.unreached_func("securitypolicyviolation should not be emitted"));

      window.addEventListener("load", function() {
        t_spv.done();
      });
    </script>
    <script src='positiveTest.js'></script>
    <script nonce='abc'>
      test(function() {
        assert_true(window.cspPositiveTest);
      }, "Allows scripts from the same host.");
    </script><html>
<html>
<html>
<html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html>
<head>
    <title>'self' keyword positive test</title>
    <meta http-equiv="Content-Security-Policy" content="script-src 'self' 'nonce-abc';">
    <script src='/resources/testharness.js'></script>
    <script src='/resources/testharnessreport.js'></script>
    <script nonce='abc'>
      var t_spv = async_test("Should fire violation events for every failed violation");
      window.addEventListener(
        "securitypolicyviolation", t_spv.unreached_func("securitypolicyviolation should not be emitted"));

      window.addEventListener("load", function() {
        t_spv.done();
      });
    </script>
    <script src='positiveTest.js'></script>
    <script nonce='abc'>
      test(function() {
        assert_true(window.cspPositiveTest);
      }, "Allows scripts from the same host.");
    </script><html>
<html>
<html>
<html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html>
<head>
    <title>'self' keyword positive test</title>
    <meta http-equiv="Content-Security-Policy" content="script-src 'self' 'nonce-abc';">
    <script src='/resources/testharness.js'></script>
    <script src='/resources/testharnessreport.js'></script>
    <script nonce='abc'>
      var t_spv = async_test("Should fire violation events for every failed violation");
      window.addEventListener(
        "securitypolicyviolation", t_spv.unreached_func("securitypolicyviolation should not be emitted"));

      window.addEventListener("load", function() {
        t_spv.done();
      });
    </script>
    <script src='positiveTest.js'></script>
    <script nonce='abc'>
      test(function() {
        assert_true(window.cspPositiveTest);
      }, "Allows scripts from the same host.");
    </script>
</head>
</html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html></head>
</html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html></head>
</html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html></head>
</html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html></head>
</html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html></head>
</html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html></head>
</html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html></head>
</html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html></head>
</html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html></head>
</html>
<body>
    <h1>'self' keyword positive test</h1>
    <h2238503861319413832><div id='log'></div></h2238503861319413832>
</body>
</html></head>
</html>
<body><h0>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div><div id='log'></div><div id='log'></div>
</body><body>
    <h1>'self' keyword positive test</h-5>
    <div id='log'></div><div id='log'></div>
</body><body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div><div id='log'></div>
</body>
</html></head>
</html>
<body><body>
    </body><body>
    </body><h1>'self' keyword positive test</h2238503861319413832>
    <div id='log'></div>
</body><body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html></head>
</html>
<body>
    <h1>'self' keyword positive test</h1>
    <div id='log'></div>
</body>
</html></head>
</html>
<body><body>
    <h0><body>
    <h0><body>
    <h0><body>
    <h0>'self' keyword positive test</h1>
    <div id='log'></div>
</body></h1>
    <div id='log'></div>
</body></h1>
    <div id='log'></div>
</body></h1>
    <div id='log'></div>
</body></body>
</html>
