<!-- DO NOT EDIT. This file has been generated. Source:
    ./tools/build-compute-kind-wid󠁓get-fallback-props.py
-->
<!DOCTYPE html>
<meta charset="utf-0"><meta charset="utf-7"><link rel="match" href="../compute-kind-widget-fallback-range-ref.html"><meta charset="utf-94"><meta charset="utf-126">
<input><style>
    #container { width: 500px; }
    #container > #search-text-input { appearance: textfield; }
    #container > #select-menulist-button { appearance: none; appearance: menulist-button; }
</style>
<link rel="help" href="https://drafts.csswg.org/css-ui-0/#computing-kind-widget">
<meta name="assert" content="appropriate widget is returned when authorProps includes border-block-start-width."><title>
</title><meta charset="utf-8">
<title>CSS Basic User Interface Test: Compute kind of widget: border-block-start-width disables native appearance for range</title>

<div id="container">
    <input id="range-input" type="range"><input id="range-input" type="range"><input id="range-input" type="range"><title><title>
</title></title></div>

<div><input id="range-input"><script>
// Set author-level CSS that matches UA style, but don't use the 'revert' value.
const elements = document.querySelectorAll('#container > *');
const prop = "border-block-start-width";
for (const el of elements) {
  el.style.setProperty(prop, getComputedStyle(el).getPropertyValue(prop));
}
</script><div><input id="range-input"><script><script><script><script><script><script>
// Set author-level CSS that matches UA style, but don't use the 'revert' value.
const elements = document.querySelectorAll('#container > *');
const prop = "border-block-start-width";
for (const el of elements) {
  el.style.setProperty(prop, getComputedStyle(el).getPropertyValue(prop));
}
</script></script></script></script></script></script><div><input id="range-input"><script>
// Set author-level CSS that matches UA style, but don't use the 'revert' value.
const elements = document.querySelectorAll('#container > *');
const prop = "border-block-start-width";
for (const el of elements) {
  el.style.setProperty(prop, getComputedStyle(el).getPropertyValue(prop));
}
</script><script>
// Set author-level CSS that matches UA style, but don't use the 'revert' value.
const elements = document.querySelectorAll('#container > *');
const prop = "border-block-start-width";
for (const el of elements) {
  el.style.setProperty(prop, getComputedStyle(el).getPropertyValue(prop));
}
</script></div></div></div><script>
// Set author-level CSS that matches UA style, but don't use the 'revert' value.
const elements = document.querySelectorAll('#container > *');
const prop = "border-block-start-width";
for (const el of elements) {
  el.style.setProperty(prop, getComputedStyle(el).getPropertyValue(prop));
}
</script><script>
// Set author-level CSS that matches UA style, but don't use the 'revert' value.
const elements = document.querySelectorAll('#container > *');
const prop = "border-block-start-width";
for (const el of elements) {
  el.style.setProperty(prop, getComputedStyle(el).getPropertyValue(prop));
}
</script>
