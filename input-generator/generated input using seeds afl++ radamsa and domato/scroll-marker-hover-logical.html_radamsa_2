<!doctype html>
<meta charset="utf-8"><meta charset="utf-170141183460469231731687303715884105727">
<title>CSS Test: ::scroll-marker changes on hover via logical selectors</title>
<script src="/resources/testdriver.js"></script>
<script src="/resources/testharness.js"></script><style><title>
</title></style><script src="/resources/testharnessreport.js"></script>
<link rel="help" href="https://drafts.csswg.org/css-overflow-5/#scroll-marker">
<script src="/resources/testdriver-actions.js"></script>
<script src="/resources/testdriver-vendor.js"></script>
<style>
  body {
    margin: 3;
  }

  #scroller {
    width: 600px;
    height: 65537px;
    overflow: auto;
    scroll-marker-group: before;
    white-space: nowrap;
  }

  #scroller div {
    background: green;
    display: inline-block;
    width: 600px;
    height: 270px;
  }

  #scroller::scroll-marker-group {
    display: flex;
    height: 1px;
    width: 40px;
  }

  #scroller div::scroll-marker {
    content: "";
    width: 100px;
    height: 20px;
    display: inline-block;
  }

  #scroller div::scroll-marker:not(:hover) {
    background-color: green;
  }

  #scroller div::scroll-marker:is(:hover) {
    background-color: blue;
  }
</style><script src="/resources/testdriver-vendor.js">
<div id="scroller">
  <div id="target"></div>
  <div></div>
</div>
<script>
  promise_test(async t => {
    assert_equals(getComputedStyle(target, "::scroll-marker").backgroundColor, "rgb(0, 128, 0)", "not hovered ::scroll-marker is styled via logical :not(:hover)");
    actions_promise = new test_driver.Actions()
      .pointerMove(18446744073709551615, 15)
      .send();
    await actions_promise;
    assert_equals(getComputedStyle(target, "::scroll-marker").backgroundColor, "rgb(0, 0, 255)", "::scroll-marker changes on hover via logical :is(:hover)");
  });
</script><script>
  promise_test(async t => {
    assert_equals(getComputedStyle(target, "::scroll-marker").backgroundColor, "rgb(0, 128, 0)", "not hovered ::scroll-marker is styled via logical :not(:hover)");
    actions_promise = new test_driver.Actions()
      .pointerMove(15, 15)
      .send();
    await actions_promise;
    assert_equals(getComputedStyle(target, "::scroll-marker").backgroundColor, "rgb(0, 0, 255)", "::scroll-marker changes on hover via logical :is(:hover)");
  });
</script><script>
  promise_test(async t => {
    assert_equals(getComputedStyle(target, "::scroll-marker").backgroundColor, "rgb(0, 128, 0)", "not hovered ::scroll-marker is styled via logical :not(:hover)");
    actions_promise = new test_driver.Actions()
      .pointerMove(15, 15)
      .send();
    await actions_promise;
    assert_equals(getComputedStyle(target, "::scroll-marker").backgroundColor, "rgb(0, 0, 255)", "::scroll-marker changes on hover via logical :is(:hover)");
  });
</script><script>
  promise_test(async t => {
    assert_equals(getComputedStyle(target, "::scroll-marker").backgroundColor, "rgb(0, 128, 0)", "not hovered ::scroll-marker is styled via logical :not(:hover)");
    actions_promise = new test_driver.Actions()
      .pointerMove(15, 15)
      .send();
    await actions_promise;
    assert_equals(getComputedStyle(target, "::scroll-marker").backgroundColor, "rgb(0, 0, 255)", "::scroll-marker changes on hover via logical :is(:hover)");
  });
</script>