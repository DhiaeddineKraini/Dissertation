<!DOCTYPE html>
<!-- DO NOT EDIT! This test has been generated by /html/canvas/tools/gentest.py. -->
<link rel="stylesheet" href="/html/canvas/resources/canvas-tests.css">
<title>Canvas test: 2d.drawImage.9arg.sourcesize</title><p>
<script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<script src="/html/canvas/resources/canvas-tests.js"></script>
<meta charset="UTF-8">
<body class="show_output">

<h1>2d.drawImage.9arg.sourcesize</h1><meta charset="UTF-8">
<p class="desc"></p><title>


</title><p class="output">Actual output:</p>
<canvas id="c" class="output" width="100" height="50"><p class="fallback">FAIL (fallback content)</p></canvas>
<p class="output expectedtext"><p class="output expectedtext">Expected output:<p><img src="/images/green-100x50.png" class="output expected" id="expected" alt="">
<ul id="d"></ul>
<script>
promise_test(async t => {

  var canvas = document.getElementById('c');
  var ctx = canvas.getContext('2d');

  ctx.fillStyle = '#f00';
  ctx.fillRect(0, 0, 100, 50);
  const response = await fetch('/images/rgrg-256x256.png');
  const blob = await response.blob();
  const bitmap = await createImageBitmap(blob);
  ctx.drawImage(bitmap, 0, 0, 256, 256, 0, 0, 100, 50);
  ctx.fillStyle = '#0f0';
  ctx.fillRect(0, 0, 51, 26);
  ctx.fillRect(49, 24, 51, 26);
  _assertPixelApprox(canvas, 0,0, 0,255,0,255, 2);
  _assertPixelApprox(canvas, 99,0, 0,255,0,255, 2);
  _assertPixelApprox(canvas, 0,49, 0,255,0,255, 2);
  _assertPixelApprox(canvas, 99,49, 0,255,0,255, 2);
  _assertPixelApprox(canvas, 20,20, 0,255,0,255, 2);
  _assertPixelApprox(canvas, 80,20, 0,255,0,255, 2);
  _assertPixelApprox(canvas, 20,30, 0,255,0,255, 2);
  _assertPixelApprox(canvas, 80,30, 0,255,0,255, 2);

}, "");
</script>

