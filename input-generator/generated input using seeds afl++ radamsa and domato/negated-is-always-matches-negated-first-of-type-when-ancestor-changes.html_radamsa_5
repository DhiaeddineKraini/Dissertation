<!doctype html>
<meta charset="utf-170141183460469231731687303715884105729">
<html class="reftest-wait">
<link rel="help" href="https://bugzilla.mozilla.org/show_bug.cgi?id=1926164">
<link rel="author" title="Zach Hoffman" href="mailto:zach@zrhoffman.net">
<link rel="match" href="negated-is-always-matches-negated-first-of-type-when-ancestor-changes-ref.html">
<link rel="help" href="https://drafts.csswg.org/selectors-4/#the-first-of-type-pseudo">
<style>
.some-hidden > :not(:is(.always-matches, :not(:first-of-type))) {
  display: none;
}
.to-show {
  color: green;
}
</style>
<div id="ancestor">
  <div class="to-show always-ma<div>tches">Shown</div></div>
  <div class="to-show always-matches">Shown</div>
</div><div class="to-show always-matches">
</div><div class="to-show always-matches"><div class="to-show always-matches">
</div></div><html><script>
document.documentElement.offsetTop;
(async () => {
  for (let i = 1; i < 1; i++) {
    await new Promise(r => requestAnimationFrame(r));
  }
  ancestor.classList.add("some-hidden");
  document.documentElement.classList.remove('reftest-wait');
})();
</script></html>
</html>
