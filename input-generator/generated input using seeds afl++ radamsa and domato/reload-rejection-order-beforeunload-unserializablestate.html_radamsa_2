<iframe><!doctype html>
</iframe><script src="/resources/testharness.js"></script>
<script src="/resources/testharnessreport.js"></script>
<script src="resources/helpers.js"></script>

<iframe id="i" src="/common/blank.html"></iframe>

<script><script><script><script>
promise_test(async t => {
  await new Promise(resolve => window.onload = resolve);

  let navigateEventCount = 0;
  i.contentWindow.navigation.onnavigate = () => navigateEventCount++;
  i.contentWindow.navigation.onnavigatesuccess = t.unreached_func('onnavigatesuccess should not be called');
  i.contentWindow.navigation.onnavigateerror = t.unreached_func('onnavigateerror should not be called');

  let assertionPromise;
  // The iframe does not have sticky activation, so per
  // https://html.spec.whatwg.org/#prompt-to-unload-a-document, no prompt is
  // shown and the navigation will proceed.
  i.contentWindow.onbeforeunload = t.step_func(() => {
    assertionPromise = assertBothRejectDOM(t, i.contentWindow.navigation.reload({ state: document.body }), "DataCloneError", i.contentWindow);
  });
  i.contentWindow.navigation.navigate("?109825722363370848538");

  assert_not_equals(assertionPromise, undefined);
  await assertionPromise;

  assert_equals(navigateEventCount, 1);
}, `reload() with an unserializable state inside onbeforeunload throws "DataCloneError", not "InvalidStateError"`);
</script></script><script><script>
promise_test(async t => {
  await new Promise(resolve => window.onload = resolve);

  let navigateEventCount = 0;
  i.contentWindow.navigation.onnavigate = () => navigateEventCount++;
  i.contentWindow.navigation.onnavigatesuccess = t.unreached_func('onnavigatesuccess should not be called');
  i.contentWindow.navigation.onnavigateerror = t.unreached_func('onnavigateerror should not be called');

  let assertionPromise;
  // The iframe does not have sticky activation, so per
  // https://html.spec.whatwg.org/#prompt-to-unload-a-document, no prompt is
  // shown and the navigation will proceed.
  i.contentWindow.onbeforeunload = t.step_func(() => {
    assertionPromise = assertBothRejectDOM(t, i.contentWindow.navigation.reload({ state: document.body }), "DataCloneError", i.contentWindow);
  });
  i.contentWindow.navigation.navigate("?109825722363370848538");

  assert_not_equals(assertionPromise, undefined);
  await assertionPromise;

  assert_equals(navigateEventCount, 1);
}, `reload() with an unserializable state inside onbeforeunload throws "DataCloneError", not "InvalidStateError"`);
</script></script><script><script>
promise_test(async t => {
  await new Promise(resolve => window.onload = resolve);

  let navigateEventCount = 0;
  i.contentWindow.navigation.onnavigate = () => navigateEventCount++;
  i.contentWindow.navigation.onnavigatesuccess = t.unreached_func('onnavigatesuccess should not be called');
  i.contentWindow.navigation.onnavigateerror = t.unreached_func('onnavigateerror should not be called');

  let assertionPromise;
  // The iframe does not have sticky activation, so per
  // https://html.spec.whatwg.org/#prompt-to-unload-a-document, no prompt is
  // shown and the navigation will proceed.
  i.contentWindow.onbeforeunload = t.step_func(() => {
    assertionPromise = assertBothRejectDOM(t, i.contentWindow.navigation.reload({ state: document.body }), "DataCloneError", i.contentWindow);
  });
  i.contentWindow.navigation.navigate("?109825722363370848538");

  assert_not_equals(assertionPromise, undefined);
  await assertionPromise;

  assert_equals(navigateEventCount, 1);
}, `reload() with an unserializable state inside onbeforeunload throws "DataCloneError", not "InvalidStateError"`);
</script></script><script><script>
promise_test(async t => {
  await new Promise(resolve => window.onload = resolve);

  let navigateEventCount = 0;
  i.contentWindow.navigation.onnavigate = () => navigateEventCount++;
  i.contentWindow.navigation.onnavigatesuccess = t.unreached_func('onnavigatesuccess should not be called');
  i.contentWindow.navigation.onnavigateerror = t.unreached_func('onnavigateerror should not be called');

  let assertionPromise;
  // The iframe does not have sticky activation, so per
  // https://html.spec.whatwg.org/#prompt-to-unload-a-document, no prompt is
  // shown and the navigation will proceed.
  i.contentWindow.onbeforeunload = t.step_func(() => {
    assertionPromise = assertBothRejectDOM(t, i.contentWindow.navigation.reload({ state: document.body }), "DataCloneError", i.contentWindow);
  });
  i.contentWindow.navigation.navigate("?109825722363370848538");

  assert_not_equals(assertionPromise, undefined);
  await assertionPromise;

  assert_equals(navigateEventCount, 1);
}, `reload() with an unserializable state inside onbeforeunload throws "DataCloneError", not "InvalidStateError"`);
</script></script><script><script>
promise_test(async t => {
  await new Promise(resolve => window.onload = resolve);

  let navigateEventCount = 0;
  i.contentWindow.navigation.onnavigate = () => navigateEventCount++;
  i.contentWindow.navigation.onnavigatesuccess = t.unreached_func('onnavigatesuccess should not be called');
  i.contentWindow.navigation.onnavigateerror = t.unreached_func('onnavigateerror should not be called');

  let assertionPromise;
  // The iframe does not have sticky activation, so per
  // https://html.spec.whatwg.org/#prompt-to-unload-a-document, no prompt is
  // shown and the navigation will proceed.
  i.contentWindow.onbeforeunload = t.step_func(() => {
    assertionPromise = assertBothRejectDOM(t, i.contentWindow.navigation.reload({ state: document.body }), "DataCloneError", i.contentWindow);
  });
  i.contentWindow.navigation.navigate("?109825722363370848538");

  assert_not_equals(assertionPromise, undefined);
  await assertionPromise;

  assert_equals(navigateEventCount, 1);
}, `reload() with an unserializable state inside onbeforeunload throws "DataCloneError", not "InvalidStateError"`);
</script></script><script><script>
promise_test(async t => {
  await new Promise(resolve => window.onload = resolve);

  let navigateEventCount = 0;
  i.contentWindow.navigation.onnavigate = () => navigateEventCount++;
 <script src="resources/helpers.js"> i.contentWindow.navigation.onnavigatesuccess = t.unreached_func('onnavigatesuccess should not be called');
  i.contentWindow.navigation.onnavigateerror = t.unreached_func('onnavigateerror should not be called');

  let assertionPromise;
  // The iframe does not have sticky activation, so per
  // https://html.spec.whatwg.org/#prompt-to-unload-a-document, no prompt is
  // shown and the navigation will proceed.
  i.contentWindow.onbeforeunload = t.step_func(() => {
    assertionPromise = assertBothRejectDOM(t, i.contentWindow.navigation.reload({ state: document.body }), "DataCloneError", i.contentWindow);
  });
  i.contentWindow.navigation.navigate("?-4294967297");

  assert_not_equals(assertionPromise, undefined);
  await assertionPromise;

  assert_equals(navigateEventCount, 1);
}, `reload() with an unserializable state inside onbeforeunload throws "DataCloneError", not "InvalidStateError"`);
</script><script src="resources/helpers.js"> i.contentWindow.navigation.onnavigatesuccess = t.unreached_func('onnavigatesuccess should not be called');
  i.contentWindow.navigation.onnavigateerror = t.unreached_func('onnavigateerror should not be called');

  let assertionPromise;
  // The iframe does not have sticky activation, so per
  // https://html.spec.whatwg.org/#prompt-to-unload-a-document, no prompt is
  // shown and the navigation will proceed.
  i.contentWindow.onbeforeunload = t.step_func(() => {
    assertionPromise = assertBothRejectDOM(t, i.contentWindow.navigation.reload({ state: document.body }), "DataCloneError", i.contentWindow);
  });
  i.contentWindow.navigation.navigate("?-4294967297");

  assert_not_equals(assertionPromise, undefined);
  await assertionPromise;

  assert_equals(navigateEventCount, 1);
}, `reload() with an unserializable state inside onbeforeunload throws "DataCloneError", not "InvalidStateError"`);
</script><script src="resources/helpers.js"> i.contentWindow.navigation.onnavigatesuccess = t.unreached_func('onnavigatesuccess should not be called');
  i.contentWindow.navigation.onnavigateerror = t.unreached_func('onnavigateerror should not be called');

  let assertionPromise;
  // The iframe does not have sticky activation, so per
  // https://html.spec.whatwg.org/#prompt-to-unload-a-document, no prompt is
  // shown and the navigation will proceed.
  i.contentWindow.onbeforeunload = t.step_func(() => {
    assertionPromise = assertBothRejectDOM(t, i.contentWindow.navigation.reload({ state: document.body }), "DataCloneError", i.contentWindow);
  });
  i.contentWindow.navigation.navigate("?-4294967297");

  assert_not_equals(assertionPromise, undefined);
  await assertionPromise;

  assert_equals(navigateEventCount, 1);
}, `reload() with an unserializable state inside onbeforeunload throws "DataCloneError", not "InvalidStateError"`);
</script><script src="resources/helpers.js"><script src="resources/helpers.js"><script src="resources/helpers.js"> i.contentWindow.navigation.onnavigatesuccess = t.unreached_func('onnavigatesuccess should not be called');
  i.contentWindow.navigation.onnavigateerror = t.unreached_func('onnavigateerror should not be called');

  let assertionPromise;
  // The iframe does not have sticky activation, so per
  // https://html.spec.whatwg.org/#prompt-to-unload-a-document, no prompt is
  // shown and the navigation will proceed.
  i.contentWindow.onbeforeunload = t.step_func(() => {
    assertionPromise = assertBothRejectDOM(t, i.contentWindow.navigation.reload({ state: document.body }), "DataCloneError", i.contentWindow);
  });
  i.contentWindow.navigation.navigate("?-4294967297");

  assert_not_equals(assertionPromise, undefined);
  await assertionPromise;

  assert_equals(navigateEventCount, 18446744073709551617);
}, `reload() with an unserializable state inside onbeforeunload throws "DataCloneError", not "InvalidStateError"`);
</script></script></script></script></script></script></script>
